{"version":3,"file":"js/698.86b27844.js","mappings":"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","sources":["webpack://studyweb/./src/services/exam.js","webpack://studyweb/./src/components/Exam/HistoryExamComponent.vue","webpack://studyweb/./src/components/Exam/HistoryExamComponent.vue?4576"],"sourcesContent":["import request from '../utils/request';\r\n\r\nexport function createExam(data) {\r\n    console.log(data)\r\n    return request({url: '/exam/createNew', method: 'post', data: data})\r\n}\r\nexport function doExam(data) { // console.log(params)\r\n    console.log(data)\r\n    return request({url: '/exam/do', method: 'put', data: data})\r\n}\r\nexport function getExamHistory(idTest, params) {\r\n\r\n    return request({\r\n        url: '/test/' + idTest + '/exam',\r\n        method: 'get',\r\n        params: params\r\n    })\r\n}\r\nexport function saveMark(idExam, data) {\r\n    return request({\r\n        url: '/exam/' + idExam + '/mark',\r\n        method: 'PUT',\r\n        data: data\r\n    })\r\n\r\n}\r\nexport function submitExam(idTest, data) { // console.log(params)\r\n    return request({\r\n        url: '/test/' + idTest + '/submit',\r\n        method: 'put',\r\n        data: data\r\n    })\r\n}\r\nexport function getReportExam(examId) {\r\n    return request({\r\n        url: '/exam/' + examId + '/report',\r\n        method: 'GET'\r\n    })\r\n\r\n}\r\n","<template  v-if=\"render\">\r\n    <!-- <NavbarListComponent /> -->\r\n    <div class=\"history-exam\">\r\n        <NavbarListComponent :numericalQuestion=\"numericalQuestion\" @moveQuestion=\"moveQuestion\" />\r\n        <div class=\"info-list-question\">\r\n            <slot name=\"list-tabs\"></slot>\r\n            <LoadingComponent v-if=\"isLoading\"></LoadingComponent>\r\n            <template v-else>\r\n                <div class=\"buttons-exam\">\r\n                    <h3>Điểm {{ point }}</h3>\r\n                    <button class=\"report-exam\" @click=\"reportExam\">Báo cáo</button>\r\n                </div>\r\n                <div class=\"page\">\r\n                    <h2>\r\n                        Trang {{ currentPage }}\r\n                    </h2>\r\n                </div>\r\n                <QuestionComponent v-for=\"(question, index) in  questions\" :key=\"index\" :question=\"question\"\r\n                    :ref=\"'question_' + question.question.question_id\" :id=\"'question_' + question.question.question_id\"\r\n                    :index=\"startIndex + index\" :type=\"3\" :isOwner=\"isOwner\" />\r\n                <div class=\"end-action\">\r\n\r\n                </div>\r\n                <paginate :page-count=\"totalPage\" :page-range=\"3\" :margin-pages=\"2\" :click-handler=\"clickCallback\"\r\n                    :prev-text=\"'Prev'\" :next-text=\"'Next'\" :container-class=\"'pagination'\" :page-class=\"'page-item'\"\r\n                    :active-class=\"'active-class'\">\r\n                </paginate>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport QuestionComponent from '../Question/QuestionComponent.vue';\r\nimport Paginate from 'vuejs-paginate-next';\r\nimport { getNumericalQuestion } from '../../services/test'\r\nimport { ref } from '@vue/reactivity'\r\nimport { useRoute } from 'vue-router';\r\nimport LoadingComponent from '../common/LoadingComponent.vue';\r\nimport NavbarListComponent from \"../Test/NavbarListComponent.vue\"\r\nimport { getExamHistory } from '@/services/exam';\r\nimport router from '@/router';\r\nexport default {\r\n    name: \"HistoryExamComponent\",\r\n    components: {\r\n        QuestionComponent,\r\n        paginate: Paginate,\r\n        NavbarListComponent,\r\n        LoadingComponent,\r\n    },\r\n    setup() {\r\n        const idTest = parseInt(useRoute().params.idTest)\r\n        const isLoading = ref(false)\r\n        const canUpdate = ref(true)\r\n        const questions = ref([])\r\n        const currentPage = ref(1)\r\n        const totalPage = ref(1)\r\n        const startIndex = ref(1)\r\n        const numericalQuestion = ref([])\r\n        const moveTo = ref(\"\")\r\n        const render = ref(true)\r\n        const indexNewQuestion = ref(0)\r\n        const point = ref(0)\r\n        const isOwner = ref(false)\r\n        return {\r\n            idTest,\r\n            isLoading,\r\n            canUpdate,\r\n            questions,\r\n            currentPage,\r\n            totalPage,\r\n            startIndex,\r\n            numericalQuestion,\r\n            moveTo,\r\n            indexNewQuestion,\r\n            isOwner,\r\n            point,\r\n            render\r\n        }\r\n    },\r\n\r\n    create() {\r\n        this.$watch(\r\n            () => this.$route.query,\r\n            () => {\r\n                this.handleGetData()\r\n            }\r\n        )\r\n    },\r\n    data() {\r\n        return {\r\n            examId: \"\"\r\n        }\r\n    },\r\n    mounted() {\r\n        this.handleGetData()\r\n    },\r\n    methods: {\r\n        refreshData() {\r\n            this.listQuestionFollow = new Set(),\r\n                this.questionsDelete = [],\r\n                this.sendData = {\r\n                    'questions': {\r\n                        'create': [],\r\n                        'update': [],\r\n                        'delete': [],\r\n                        'deleteResult': [], // Question fill and essay\r\n                        'updateResults': [] // Question fill and essay\r\n                    },\r\n                    'choices': {\r\n                        'create': [],\r\n                        'update': [],\r\n                        'delete': [],\r\n                    }\r\n                }\r\n        },\r\n        async handleGetData() {\r\n\r\n            var paramsQuestion = {\r\n                idExam: this.examId,\r\n                current_page: this.currentPage\r\n            };\r\n            try {\r\n                const responseQuestions = await getExamHistory(this.idTest, paramsQuestion);\r\n                if (responseQuestions) {\r\n                    this.questions = responseQuestions.data?.questions\r\n                    this.answersData = responseQuestions.data?.answers\r\n                    this.examId = responseQuestions.data?.exam_id\r\n                    this.point = responseQuestions.data?.point\r\n                    this.isOwner = responseQuestions.data?.isOwner\r\n                    console.log(responseQuestions.data?.pages)\r\n                    let pages = responseQuestions.data?.pages\r\n                    this.startIndex = pages.startIndex\r\n                    this.totalPage = pages.totalPage\r\n                }\r\n                var paramsNumerical = {\r\n                    exam_id: this.examId,\r\n                    current_page: this.currentPage,\r\n                    type: 3\r\n                    // 1: Do 2: Update 3: History\r\n                };\r\n                const responseNumerical = await getNumericalQuestion(this.idTest, paramsNumerical)\r\n                if (responseNumerical) {\r\n                    this.numericalQuestion = responseNumerical.data\r\n                }\r\n            } finally {\r\n                this.isLoading = false\r\n            }\r\n        },\r\n        addlistQuestionFollow(id) {\r\n            // Add id question to list question update\r\n            console.log(id)\r\n            this.listQuestionFollow.add(id);\r\n        },\r\n\r\n        clickCallback(pageNum) {\r\n            this.currentPage = pageNum\r\n            this.handleGetData()\r\n        },\r\n        Next(pageNum) {\r\n            this.page = pageNum\r\n            this.handleGetData()\r\n        },\r\n        Prev(pageNum) {\r\n            this.page = pageNum\r\n            this.handleGetData()\r\n        },\r\n        reportExam() {\r\n            router.push({ name: \"reportExam\", params: { idTest: this.idTest, idExam: this.examId } });\r\n        },\r\n        moveQuestion(page, id) {\r\n\r\n            if (page == this.currentPage) {\r\n                this.moveTo = id;\r\n                let question = document.getElementById(id);\r\n                question.scrollIntoView();\r\n            } else {\r\n                this.currentPage = page;\r\n                this.moveTo = id;\r\n                this.handleGetData();\r\n                setTimeout(() => {\r\n                    let question = document.getElementById(id);\r\n                    question.scrollIntoView();\r\n                }, 1000)\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.page {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n}\r\n\r\n.pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.margin-bottom10px {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.buttons-exam {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.report-exam {\r\n    margin-top: 2px;\r\n    height: 35px;\r\n    box-shadow: 0 8px #999;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.report-exam:active {\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n}\r\n\r\n.update-create-question-button {\r\n    margin-left: 5px;\r\n    margin-top: 2px;\r\n    height: 45px;\r\n    padding: 5px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    box-shadow: 0 8px #999;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n\r\n@import \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\";\r\n</style>","import { render } from \"./HistoryExamComponent.vue?vue&type=template&id=1f9cee5c\"\nimport script from \"./HistoryExamComponent.vue?vue&type=script&lang=js\"\nexport * from \"./HistoryExamComponent.vue?vue&type=script&lang=js\"\n\nimport \"./HistoryExamComponent.vue?vue&type=style&index=0&id=1f9cee5c&lang=css\"\n\nimport exportComponent from \"G:\\\\Dự án Web học tập\\\\studyweb\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["createExam","data","console","log","request","url","method","doExam","getExamHistory","idTest","params","saveMark","idExam","submitExam","getReportExam","examId","class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_NavbarListComponent","numericalQuestion","$setup","onMoveQuestion","$options","moveQuestion","_hoisted_2","_renderSlot","_ctx","$slots","isLoading","_createBlock","_component_LoadingComponent","key","_Fragment","_hoisted_3","_toDisplayString","point","onClick","_cache","args","reportExam","_hoisted_4","currentPage","_renderList","questions","question","index","_component_QuestionComponent","ref","question_id","id","startIndex","type","isOwner","_hoisted_5","_component_paginate","totalPage","clickCallback","name","components","QuestionComponent","paginate","Paginate","NavbarListComponent","LoadingComponent","setup","parseInt","useRoute","canUpdate","moveTo","render","indexNewQuestion","create","this","$watch","$route","query","handleGetData","mounted","methods","refreshData","listQuestionFollow","Set","questionsDelete","sendData","async","paramsQuestion","current_page","responseQuestions","answersData","answers","exam_id","pages","paramsNumerical","responseNumerical","getNumericalQuestion","addlistQuestionFollow","add","pageNum","Next","page","Prev","router","document","getElementById","scrollIntoView","setTimeout","__exports__"],"sourceRoot":""}