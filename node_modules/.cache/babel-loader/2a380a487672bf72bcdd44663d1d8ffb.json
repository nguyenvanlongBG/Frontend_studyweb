{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"list-choice\"\n};\nconst _hoisted_2 = [\"id\", \"name\", \"value\", \"disabled\"];\nconst _hoisted_3 = [\"id\", \"onClick\", \"for\"];\nconst _hoisted_4 = [\"onClick\"];\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"content-create\"\n}, \"+\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"content-create\"\n}, \" Thêm câu trả lời\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [_hoisted_5, _hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LatexComponent = _resolveComponent(\"LatexComponent\");\n\n  return $setup.render ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.choiceQuestion, (choice, index) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: index\n    }, [_createElementVNode(\"input\", {\n      type: \"radio\",\n      class: \"hidden-radio\",\n      id: choice.id,\n      name: 'question_' + $props.question,\n      value: choice.id,\n      disabled: !$props.canChoose\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2), _createElementVNode(\"label\", {\n      class: _normalizeClass($props.canChoose ? 'choice' : 'choice nohover'),\n      id: $props.question + '_choose_' + choice.id,\n      onClick: $event => $props.canChoose ? $options.choiceAnswer(choice.id) : '',\n      for: choice.id\n    }, [$props.isUpdate ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      class: \"closeChoice\",\n      onClick: $event => $options.deleteChoose($event, index)\n    }, \"X\", 8\n    /* PROPS */\n    , _hoisted_4)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", {\n      class: _normalizeClass($props.isUpdate || $props.doTest ? 'choice-label' : '')\n    }, [_createCommentVNode(\" Lỗi dấu cách \"), _createCommentVNode(\" <LatexComponent :content=\\\"choice.content\\\" :isUpdate=\\\"isUpdate\\\"\\r\\n                    @update=\\\"data => updateChoose(index, data)\\\" /> \"), _createCommentVNode(\" Fix lỗi dấu cách \"), _createVNode(_component_LatexComponent, {\n      content: choice.content,\n      isUpdate: $props.isUpdate,\n      onUpdate: $event => $options.updateChoose($event, index)\n    }, null, 8\n    /* PROPS */\n    , [\"content\", \"isUpdate\", \"onUpdate\"])], 2\n    /* CLASS */\n    )], 10\n    /* CLASS, PROPS */\n    , _hoisted_3)], 64\n    /* STABLE_FRAGMENT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" List câu trả lời mới tạo \"), $props.isUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"create-answer\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.createChoose && $options.createChoose(...args))\n  }, _hoisted_7)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;;;;;;gCAuBHC,oBAAqC,MAArC,EAAqC;EAA/BD,KAAK,EAAC;AAAyB,CAArC,EAA6B,GAA7B,EAA8B;AAAA;AAA9B;;gCACAC,oBAAqD,MAArD,EAAqD;EAA/CD,KAAK,EAAC;AAAyC,CAArD,EAA6B,mBAA7B,EAA8C;AAAA;AAA9C;;oBADAE,YACAC;;;;SAxBuBC,+BAA/BC,oBA0BM,KA1BN,cA0BM,oBAxBFA,oBAeWC,SAfX,EAeW,IAfX,EAeWC,YAfyBC,oBAezB,EAfuC,CAAhCC,MAAgC,EAAxBC,KAAwB,KAAnB;;WAA2BA;OAAK,CAC3DT,oBAC6B,OAD7B,EAC6B;MADtBU,IAAI,EAAC,OACiB;MADTX,KAAK,EAAC,cACG;MADaY,EAAE,EAAEH,MAAM,CAACG,EACxB;MAD6BC,IAAI,gBAAgBC,eACjD;MAD4DC,KAAK,EAAEN,MAAM,CAACG,EAC1E;MAAxBI,QAAQ,GAAGF;IAAa,CAD7B;;IAAA,aAD2D,EAG3Db,oBAWQ,OAXR,EAWQ;MAXAD,KAAK,kBAAEc,mBAAS,QAAT,GAAS,gBAAX,CAWL;MAXiDF,EAAE,EAAEE,kBAAQ,UAAR,GAAwBL,MAAM,CAACG,EAWpF;MAVHK,OAAK,YAAEH,mBAAYI,sBAAaT,MAAM,CAACG,EAApB,CAAZ,GAAkC,EAUtC;MAV+CO,GAAG,EAAEV,MAAM,CAACG;IAU3D,CAXR,GAEoCE,iCAAhCT,oBAAuF,MAAvF,EAAuF;YAAA;MAAjFL,KAAK,EAAC,aAA2E;MAA5CiB,OAAK,YAAEC,sBAAaE,MAAb,EAAqBV,KAArB;IAAqC,CAAvF,EAA+E,GAA/E,EAAgF;IAAA;IAAhF,EAAgFW,UAAhF,wCACApB,oBAOO,MAPP,EAOO;MAPAD,KAAK,kBAAEc,mBAAYA,aAAZ,GAAkB,cAAlB,GAAkB,EAApB;IAOL,CAPP,GACIQ,uCACAA,qKAEAA,2CACAC,aAC4CC,yBAD5C,EAC4C;MAD3BC,OAAO,EAAEhB,MAAM,CAACgB,OACW;MADDC,QAAQ,EAAEZ,eACT;MAAvCa,QAAM,YAAET,sBAAaE,MAAb,EAAqBV,KAArB;IAA+B,CAD5C;;IAAA,uCALJ;;IAAA,EAHJ;;IAAA,aAH2D;;;GAepD,CAfX;;EAAA,CAwBE,GAPFY,iDAOE,EAJkCR,iCAApCT,oBAGS,QAHT,EAGS;UAAA;IAHDL,KAAK,EAAC,eAGL;IAHsCiB,OAAK,yCAAEC,uDAAF;EAG3C,CAHT,kDAIE,CA1BN","names":["class","_createElementVNode","_hoisted_5","_hoisted_6","$setup","_createElementBlock","_Fragment","_renderList","$data","choice","index","type","id","name","$props","value","disabled","onClick","$options","for","$event","_hoisted_4","_createCommentVNode","_createVNode","_component_LatexComponent","content","isUpdate","onUpdate"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Question\\ChooseComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"list-choice\" v-if=\"render\">\r\n\r\n        <template v-for=\"(choice, index) in choiceQuestion\" :key=\"index\">\r\n            <input type=\"radio\" class=\"hidden-radio\" :id=\"choice.id\" :name=\"'question_' + question\" :value=\"choice.id\"\r\n                :disabled=\"!canChoose\" />\r\n            <label :class=\"canChoose ? 'choice' : 'choice nohover'\" :id=\"question + '_choose_' + choice.id\"\r\n                @click=\"canChoose ? choiceAnswer(choice.id) : ''\" :for=\"choice.id\">\r\n                <span class=\"closeChoice\" v-if=\"isUpdate\" @click=\"deleteChoose($event, index)\">X</span>\r\n                <span :class=\"isUpdate || doTest ? 'choice-label' : ''\">\r\n                    <!-- Lỗi dấu cách -->\r\n                    <!-- <LatexComponent :content=\"choice.content\" :isUpdate=\"isUpdate\"\r\n                    @update=\"data => updateChoose(index, data)\" /> -->\r\n                    <!-- Fix lỗi dấu cách -->\r\n                    <LatexComponent :content=\"choice.content\" :isUpdate=\"isUpdate\"\r\n                        @update=\"updateChoose($event, index)\" />\r\n                </span>\r\n            </label>\r\n        </template>\r\n\r\n        <!-- List câu trả lời mới tạo -->\r\n\r\n\r\n        <button class=\"create-answer\" v-if=\"isUpdate\" @click=\"createChoose\">\r\n            <span class=\"content-create\">+</span>\r\n            <span class=\"content-create\"> Thêm câu trả lời</span>\r\n        </button>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref } from 'vue';\r\nimport LatexComponent from '../LatexComponent.vue'\r\nexport default {\r\n    name: \"ChooseComponent\",\r\n    props: ['choices', 'isUpdate', 'linkNavbar', 'doTest', 'canChoose', 'question', 'type'],\r\n    components: {\r\n        LatexComponent\r\n    },\r\n    setup() {\r\n        const newAnswer = ref(\"\")\r\n        const isCreate = ref(false)\r\n        const newChooses = ref([])\r\n        const render = ref(true)\r\n        const indexNewChoose = ref(0)\r\n        const classChoose = ref(\"choice\")\r\n        return { newAnswer, render, newChooses, isCreate, indexNewChoose, classChoose }\r\n    },\r\n    data() {\r\n        console.log(this.choices[0])\r\n        return {\r\n            // copy data from array not reference\r\n            choiceQuestion: this.choices.concat()\r\n        }\r\n    },\r\n\r\n\r\n    methods: {\r\n        choiceAnswer(id) {\r\n            this.$emit('chooseAnswer', id)\r\n        },\r\n        updateChoose(content, index) {\r\n\r\n            this.choiceQuestion[index].content = content\r\n            let data = {\r\n                'id': this.choiceQuestion[index].id,\r\n                'content': content\r\n            }\r\n            this.$emit('update', data)\r\n\r\n        },\r\n        deleteChoose(event, index) {\r\n\r\n            event.stopImmediatePropagation()\r\n            // console.log(\"Click delete\")\r\n            let id = this.choiceQuestion[index].id\r\n            this.choiceQuestion.splice(index, 1)\r\n            // console.log(this.choiceQuestion)\r\n            this.render = false\r\n\r\n            this.$nextTick(() => {\r\n                this.render = true\r\n            })\r\n            this.$emit('delete', id)\r\n        },\r\n        createChoose() {\r\n            let data = { 'id': this.question + '_new_choose_' + this.indexNewChoose, 'content': \"\" }\r\n            this.indexNewChoose++\r\n            this.choiceQuestion.push(data)\r\n            this.$emit('create', data)\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n</script>\r\n<style>\r\n.list-choice {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    /* padding: auto;    */\r\n}\r\n\r\n.closeChoice {\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 0px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    /* margin: 30px 0 0 2px; */\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    z-index: 2;\r\n    background-color: #ea4f4c;\r\n}\r\n\r\n.create-answer {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    width: 48%;\r\n    font-weight: bold;\r\n    margin-left: 5px;\r\n    margin-top: 5px;\r\n    min-height: 60px;\r\n    background-color: #222;\r\n    border: solid 2px #ea4f4c;\r\n}\r\n\r\n\r\n.content-create {\r\n    font-size: 20px;\r\n    color: #ea4f4c;\r\n\r\n}\r\n\r\n.choice {\r\n    display: block;\r\n    position: relative;\r\n    width: 48%;\r\n    margin-top: 5px;\r\n    min-height: 60px;\r\n    border: 4px solid white;\r\n    border-radius: 2px;\r\n    background-color: white;\r\n    box-sizing: border-box;\r\n}\r\n\r\n\r\n\r\n.choice:not(.nohover):hover {\r\n    display: block;\r\n    position: relative;\r\n    width: 48%;\r\n    margin-top: 5px;\r\n    min-height: 60px;\r\n    border: 4px solid #6108f2;\r\n    border-radius: 2px;\r\n    background-color: rgb(166, 172, 172);\r\n    box-sizing: border-box;\r\n}\r\n\r\n.choice-label {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n    border-style: solid;\r\n    border: 0px;\r\n    border-color: #e2d5d5;\r\n}\r\n\r\n\r\n\r\ninput.hidden-radio {\r\n    display: none;\r\n\r\n}\r\n\r\n\r\n.hidden-radio:checked+.choice {\r\n    display: block;\r\n    position: relative;\r\n    width: 48%;\r\n    margin-top: 5px;\r\n    min-height: 60px;\r\n    border: 4px solid #6108f2;\r\n    border-radius: 5px;\r\n    background-color: rgb(166, 172, 172);\r\n    box-sizing: border-box;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}