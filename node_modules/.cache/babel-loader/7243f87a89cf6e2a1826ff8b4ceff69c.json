{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalSolution = _resolveComponent(\"ModalSolution\");\n\n  const _component_QuestionComponent = _resolveComponent(\"QuestionComponent\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [$setup.displaySolution ? (_openBlock(), _createBlock(_component_ModalSolution, {\n    key: 0,\n    idAnswer: $setup.idAnswer,\n    onClose: $options.closeSolution\n  }, null, 8\n  /* PROPS */\n  , [\"idAnswer\", \"onClose\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.questions, (question, index) => {\n    return _openBlock(), _createBlock(_component_QuestionComponent, {\n      key: index,\n      question: question,\n      ref_for: true,\n      ref: 'question_' + question.question.question_id,\n      id: 'question_' + question.question.question_id,\n      index: $setup.startIndex + index,\n      type: 0,\n      send: $setup.sendData,\n      onSend: $setup.sendData,\n      onSeeSolution: $options.seeSolution\n    }, null, 8\n    /* PROPS */\n    , [\"question\", \"id\", \"index\", \"send\", \"onSend\", \"onSeeSolution\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;EAKSA,KAAK,EAAC;;;;;;;uBAHbC,oBAQM,KARN,EAQM,IARN,EAQM,CAPsCC,wCAA1CC,aAAoFC,wBAApF,EAAoF;UAAA;IAApEC,QAAQ,EAAEH,eAA0D;IAAxBI,OAAK,EAAEC;EAAiB,CAApF;;EAAA,+DAOI,EALJC,oBAIM,KAJN,cAIM,oBAHJP,oBAEuGQ,SAFvG,EAEuG,IAFvG,EAEuGC,YAFvDR,gBAEuD,EAF9C,CAA9BS,QAA8B,EAApBC,KAAoB,KAAf;yBAA1CT,aAEuGU,4BAFvG,EAEuG;MAF3CC,GAAG,EAAEF,KAEsC;MAF9BD,QAAQ,EAAEA,QAEoB;mBAAA;MADpGI,GAAG,gBAAgBJ,QAAQ,CAACA,QAAT,CAAkBK,WAC+D;MADjDC,EAAE,gBAAgBN,QAAQ,CAACA,QAAT,CAAkBK,WACa;MAApGJ,KAAK,EAAEV,oBAAaU,KAAgF;MAAxEM,IAAI,EAAE,CAAkE;MAA9DC,IAAI,EAAEjB,eAAwD;MAA7CkB,MAAI,EAAElB,eAAuC;MAA5BmB,aAAW,EAAEd;IAAe,CAFvG;;IAAA;GAEuG,CAFvG;;EAAA,CAGI,EAJN,CAKI,CARN","names":["class","_createElementBlock","$setup","_createBlock","_component_ModalSolution","idAnswer","onClose","$options","_createElementVNode","_Fragment","_renderList","question","index","_component_QuestionComponent","key","ref","question_id","id","type","send","onSend","onSeeSolution"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\ForumComponent.vue"],"sourcesContent":["<template>\r\n\r\n  <div>\r\n    <ModalSolution :idAnswer=\"idAnswer\" v-if=\"displaySolution\" @close=\"closeSolution\" />\r\n\r\n    <div class=\"container\">\r\n      <QuestionComponent v-for=\"(question, index) in  questions\" :key=\"index\" :question=\"question\"\r\n        :ref=\"'question_' + question.question.question_id\" :id=\"'question_' + question.question.question_id\"\r\n        :index=\"startIndex + index\" :type=\"0\" :send=\"sendData\" @send=\"sendData\" @seeSolution=\"seeSolution\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { getAnswer } from \"../services/answer\"\r\nimport { getQuestionNormal } from \"../services/question\"\r\nimport ModalSolution from \"../components/ModalSolution.vue\"\r\nimport QuestionComponent from \"./Question/QuestionComponent.vue\"\r\nimport { ref } from '@vue/reactivity'\r\nconst axios = require('axios')\r\nexport default {\r\n  name: \"ForumComponent\",\r\n  components: {\r\n    ModalSolution,\r\n    QuestionComponent,\r\n  },\r\n  setup() {\r\n    const isLoading = ref(false)\r\n    const canUpdate = ref(true)\r\n    const isUpdateEssay = ref(false)\r\n    const questions = ref([])\r\n    const moveTo = ref(\"\")\r\n    const render = ref(true)\r\n    const displaySolution = ref(false)\r\n    const sendData = ref({})\r\n    const startIndex = ref(1)\r\n    const idAnswer = ref(0)\r\n    return {\r\n      isLoading,\r\n      displaySolution,\r\n      canUpdate,\r\n      isUpdateEssay,\r\n      questions,\r\n      moveTo,\r\n      sendData,\r\n      startIndex,\r\n      idAnswer,\r\n      render\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    // console.log(\"OK\")\r\n    this.handleGetData()\r\n  },\r\n  methods: {\r\n    seeSolution(id) {\r\n      console.log(id)\r\n      this.idAnswer = id\r\n      this.displaySolution = true\r\n    },\r\n    closeSolution() {\r\n      this.displaySolution = false\r\n      this.idAnswer = 0\r\n    },\r\n    uploadSolution(e, $id) {\r\n      console.log($id);\r\n      let files = e.target.files || e.dataTransfer.files;\r\n      if (!files.length) return;\r\n\r\n      axios.post('http://localhost:8000/api/createQuestionNormal', {})\r\n        .then(response => {\r\n          console.log(response)\r\n        })\r\n        .catch(response => {\r\n          console.log(response)\r\n        })\r\n    }\r\n    ,\r\n    async handleGetData() {\r\n      const responseQuestions = await getQuestionNormal()\r\n      this.questions = responseQuestions.data.questions;\r\n    },\r\n    showMenu() {\r\n      var library = document.getElementById('library');\r\n\r\n      library.addEventListener('click', function () {\r\n        // Chưa có thì thêm có thì xóa\r\n        library.classList.toggle(\"active\");\r\n\r\n        var elements = document.querySelectorAll('.parent:not(#library)');\r\n        elements.forEach(element => {\r\n          element.classList.toggle(\"invisible\");\r\n        });\r\n      }, false);\r\n\r\n\r\n    },\r\n    choiceAnswer() {\r\n\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.container {\r\n  margin: 0 15%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}