{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"container-report-exam\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Báo cáo câu hỏi\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Số lượng\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  id: \"chart-amount\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Tỷ lệ\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  id: \"chart-percent\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Phổ điểm\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  id: \"chart-score spectrum\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n\n  return $setup.render ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_apexchart, {\n    type: \"bar\",\n    height: \"350\",\n    options: $data.amount.chartOptions,\n    series: $data.amount.series\n  }, null, 8\n  /* PROPS */\n  , [\"options\", \"series\"])]), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_apexchart, {\n    type: \"bar\",\n    height: \"350\",\n    options: $data.percent.chartOptions,\n    series: $data.percent.series\n  }, null, 8\n  /* PROPS */\n  , [\"options\", \"series\"])]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_apexchart, {\n    type: \"area\",\n    height: \"350\",\n    options: $data.score.chartOptions,\n    series: $data.score.series\n  }, null, 8\n  /* PROPS */\n  , [\"options\", \"series\"])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;;;gCACPC,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,EAAmB;AAAA;AAAnB;;gCACAA,oBAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,EAAY;AAAA;AAAZ;;;EACKC,EAAE,EAAC;;;gCAGRD,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;;EACKC,EAAE,EAAC;;;gCAGRD,oBAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,EAAY;AAAA;AAAZ;;;EACKC,EAAE,EAAC;;;;;SAX6BC,+BAAzCC,oBAcM,KAdN,cAcM,CAbFC,UAaE,EAZFC,UAYE,EAXFL,oBAEM,KAFN,cAEM,CADFM,aAAsGC,oBAAtG,EAAsG;IAA3FC,IAAI,EAAC,KAAsF;IAAhFC,MAAM,EAAC,KAAyE;IAAlEC,OAAO,EAAEC,aAAOC,YAAkD;IAAnCC,MAAM,EAAEF,aAAOE;EAAoB,CAAtG;;EAAA,wBACE,CAFN,CAWE,EARFC,UAQE,EAPFd,oBAEM,KAFN,cAEM,CADFM,aAAwGC,oBAAxG,EAAwG;IAA7FC,IAAI,EAAC,KAAwF;IAAlFC,MAAM,EAAC,KAA2E;IAApEC,OAAO,EAAEC,cAAQC,YAAmD;IAApCC,MAAM,EAAEF,cAAQE;EAAoB,CAAxG;;EAAA,wBACE,CAFN,CAOE,EAJFE,UAIE,EAHFf,oBAEM,KAFN,cAEM,CADFM,aAAqGC,oBAArG,EAAqG;IAA1FC,IAAI,EAAC,MAAqF;IAA9EC,MAAM,EAAC,KAAuE;IAAhEC,OAAO,EAAEC,YAAMC,YAAiD;IAAlCC,MAAM,EAAEF,YAAME;EAAoB,CAArG;;EAAA,wBACE,CAFN,CAGE,CAdN","names":["class","_createElementVNode","id","$setup","_createElementBlock","_hoisted_2","_hoisted_3","_createVNode","_component_apexchart","type","height","options","$data","chartOptions","series","_hoisted_5","_hoisted_7"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Test\\ReportTestComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-report-exam\" v-if=\"render\">\r\n        <h2>Báo cáo câu hỏi</h2>\r\n        <h3>Số lượng</h3>\r\n        <div id=\"chart-amount\">\r\n            <apexchart type=\"bar\" height=\"350\" :options=\"amount.chartOptions\" :series=\"amount.series\"></apexchart>\r\n        </div>\r\n        <h3>Tỷ lệ</h3>\r\n        <div id=\"chart-percent\">\r\n            <apexchart type=\"bar\" height=\"350\" :options=\"percent.chartOptions\" :series=\"percent.series\"></apexchart>\r\n        </div>\r\n        <h2>Phổ điểm</h2>\r\n        <div id=\"chart-score spectrum\">\r\n            <apexchart type=\"area\" height=\"350\" :options=\"score.chartOptions\" :series=\"score.series\"></apexchart>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport VueApexCharts from 'vue3-apexcharts'\r\nimport { getReportTest } from '../../services/test'\r\nexport default {\r\n    name: \"ReportTestComponent\",\r\n    components: {\r\n        apexchart: VueApexCharts,\r\n    },\r\n    setup() {\r\n        const idTest = parseInt(useRoute().params.idTest)\r\n        const render = ref(true)\r\n        return {\r\n            idTest, render\r\n        }\r\n    },\r\n    mounted() {\r\n        this.handleGetData()\r\n    },\r\n    data() {\r\n        return {\r\n            amount: {\r\n                series: [{\r\n                    name: 'PRODUCT A',\r\n                    data: [44, 55, 41, 1, 2, 3, 4, 5, 6, 7, 9, 15, 16, 17, 18, 19, 20, 21, 22]\r\n                }, {\r\n                    name: 'PRODUCT B',\r\n                    data: [13.2, 23, 20, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 17, 18, 19, 20, 21, 22]\r\n                }, {\r\n                    name: 'PRODUCT C',\r\n                    data: [11, 17.31, 15, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 20, 21, 22]\r\n                }, {\r\n                    name: 'PRODUCT D',\r\n                    data: [21, 7, 25, 1, 2, 3, 4, 5, 6, 7, 9, 13, 14, 17, 18, 19, 20, 21, 22]\r\n                },\r\n\r\n\r\n                ],\r\n                chartOptions: {\r\n                    chart: {\r\n                        type: 'bar',\r\n                        height: 350,\r\n                        stacked: true,\r\n                        toolbar: {\r\n                            show: true\r\n                        },\r\n                        zoom: {\r\n                            enabled: true\r\n                        }\r\n                    },\r\n                    responsive: [{\r\n                        breakpoint: 480,\r\n                        options: {\r\n                            legend: {\r\n                                position: 'bottom',\r\n                                offsetX: -10,\r\n                                offsetY: 0\r\n                            }\r\n                        }\r\n                    }],\r\n                    plotOptions: {\r\n                        bar: {\r\n                            horizontal: false,\r\n                            borderRadius: 10,\r\n                            dataLabels: {\r\n                                total: {\r\n                                    enabled: true,\r\n                                    style: {\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 900\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n\r\n                    },\r\n                    xaxis: {\r\n                        // type: 'datetime',\r\n                        categories: ['01/01/2011 GMT', '01/02/2011 GMT', '01/03/2011 GMT', '01/04/2011 GMT',\r\n                            '01/05/2011 GMT', '01/06/2011 GMT', '02/05/2011 GMT', '03/06/2011 GMT', '02/05/2011 GMT', '03/06/2011 GMT', '01/05/2011 GMT', '01/06/2011 GMT', '02/05/2011 GMT', '03/06/2011 GMT', '02/05/2011 GMT', '03/06/2011 GMT', '01/05/2011 GMT', '01/06/2011 GMT', '02/05/2011 GMT'\r\n                        ],\r\n                    },\r\n                    tooltip: {\r\n                        y: {\r\n                            formatter: function (val) {\r\n                                return val + \" điểm\"\r\n                            }\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        position: 'right',\r\n                        offsetY: 40\r\n                    },\r\n                    fill: {\r\n                        opacity: 1\r\n                    }\r\n                },\r\n\r\n            },\r\n            percent: {\r\n                series: [{\r\n                    name: 'Marine Sprite',\r\n                    data: [44, 55, 41, 37, 22, 43, 21]\r\n                }, {\r\n                    name: 'Striking Calf',\r\n                    data: [53, 32, 33, 52, 13, 43, 32]\r\n                }, {\r\n                    name: 'Tank Picture',\r\n                    data: [12, 17, 11, 9, 15, 11, 20]\r\n                }, {\r\n                    name: 'Bucket Slope',\r\n                    data: [9, 7, 5, 8, 6, 9, 4]\r\n                }, {\r\n                    name: 'Reborn Kid',\r\n                    data: [25, 12, 19, 32, 25, 24, 10]\r\n                }],\r\n                chartOptions: {\r\n                    chart: {\r\n                        type: 'bar',\r\n                        height: 350,\r\n                        stacked: true,\r\n                        stackType: '100%'\r\n                    },\r\n                    plotOptions: {\r\n                        bar: {\r\n                            horizontal: true,\r\n                        },\r\n                    },\r\n                    stroke: {\r\n                        width: 1,\r\n                        colors: ['#fff']\r\n                    },\r\n                    title: {\r\n                        text: '100% Stacked Bar'\r\n                    },\r\n                    xaxis: {\r\n                        categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\r\n                    },\r\n                    tooltip: {\r\n                        y: {\r\n                            formatter: function (val) {\r\n                                return val + \"điểm\"\r\n                            }\r\n                        }\r\n                    },\r\n                    fill: {\r\n                        opacity: 1\r\n\r\n                    },\r\n                    legend: {\r\n                        position: 'top',\r\n                        horizontalAlign: 'left',\r\n                        offsetX: 40\r\n                    }\r\n                },\r\n\r\n            },\r\n            score: {\r\n                chartOptions: {\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    stroke: {\r\n                        curve: 'smooth'\r\n                    },\r\n                    xaxis: {\r\n                        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n                    },\r\n                    tooltip: {\r\n                        fixed: {\r\n                            enabled: false,\r\n                            position: 'topRight'\r\n                        }\r\n                    }\r\n                }\r\n                ,\r\n                series: [{\r\n                    name: 'Số lượng',\r\n                    data: [31, 40, 28, 51, 42, 109, 100]\r\n                }],\r\n\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async handleGetData() {\r\n            const response = await getReportTest(this.idTest)\r\n            const data = response.data\r\n            // console.log(data.series.series_bar)\r\n            this.amount.series = data.series.series_bar\r\n            this.amount.chartOptions.xaxis.categories = data.horizontal.columns_bar\r\n            this.percent.series = data.series.series_bar\r\n            this.percent.chartOptions.xaxis.categories = data.horizontal.columns_bar\r\n            this.score.chartOptions.xaxis.categories = data.horizontal.scoreName\r\n            this.score.series[0].data = data.series.seriesScore\r\n            this.render = false\r\n            this.$nextTick(() => {\r\n                this.render = true\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.container-report-exam {\r\n    margin: 0 15%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}