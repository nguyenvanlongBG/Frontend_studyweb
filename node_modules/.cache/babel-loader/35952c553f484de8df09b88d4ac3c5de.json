{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"overview-exam\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"nameUser\"\n}, \" Họ và tên: Nguyễn Văn A \", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"navbar-list-question\"\n}, \" Danh sách câu hỏi \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"list-numerical-question\"\n};\nconst _hoisted_5 = [\"id\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.render ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.numericalQuestion.data, (question, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass($setup.classType[parseInt(question.type)]),\n      id: 'link_' + question.id,\n      onClick: $event => $options.moveToQuestion(question.page, question.id)\n    }, _toDisplayString(index + 1), 11\n    /* TEXT, CLASS, PROPS */\n    , _hoisted_5);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;;;gCACPC,oBAEO,MAFP,EAEO;EAFDD,KAAK,EAAC;AAEL,CAFP,EAAuB,2BAAvB,EAEA;AAAA;AAFA;;gCAIIC,oBAEO,MAFP,EAEO;EAFDD,KAAK,EAAC;AAEL,CAFP,EAAmC,qBAAnC,EAEA;AAAA;AAFA;;;EAGKA,KAAK,EAAC;;;;SARcE,+BAAjCC,oBAmBM,KAnBN,cAmBM,CAlBFC,UAkBE,EAfFH,oBAaM,KAbN,EAaM,IAbN,EAaM,CAZFI,UAYE,EATFJ,oBAQM,KARN,cAQM,oBAPFE,oBAKWG,SALX,EAKW,IALX,EAKWC,YAL2BL,yBAAkBM,IAK7C,EALiD,CAA1CC,QAA0C,EAAhCC,KAAgC,KAA3B;yBAC7BP,oBAGM,KAHN,EAGM;WAJ0DO,KAI1D;MAHAV,KAAK,kBAAEW,iBAAUC,QAAQ,CAACH,QAAQ,CAACI,IAAV,CAAlB,CAAF,CAGL;MAH4CC,EAAE,YAAYL,QAAQ,CAACK,EAGnE;MAFDC,OAAK,YAAEC,wBAAeP,QAAQ,CAACQ,IAAxB,EAA8BR,QAAQ,CAACK,EAAvC;IAEN,CAHN,mBAEOJ,KAAK,KAFZ,EAEY;IAAA;IAFZ,EAEYQ,UAFZ;GAIO,CALX;;EAAA,CAOE,EARN,CASE,CAbN,CAeE,CAnBN","names":["class","_createElementVNode","$props","_createElementBlock","_hoisted_2","_hoisted_3","_Fragment","_renderList","data","question","index","$setup","parseInt","type","id","onClick","$options","page","_hoisted_5"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Test\\NavbarListComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"overview-exam\" v-if=\"render\">\r\n        <span class=\"nameUser\">\r\n            Họ và tên: Nguyễn Văn A\r\n        </span>\r\n        <div>\r\n            <span class=\"navbar-list-question\">\r\n                Danh sách câu hỏi\r\n            </span>\r\n            <div class=\"list-numerical-question\">\r\n                <template v-for=\"(question, index) in numericalQuestion.data\" :key=\"index\">\r\n                    <div :class=\"classType[parseInt(question.type)]\" :id=\"'link_' + question.id\"\r\n                        @click=\"moveToQuestion(question.page, question.id)\">\r\n                        {{ index + 1 }}\r\n                    </div>\r\n                </template>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n    name: \"NavbarListComponent\",\r\n    props: ['numericalQuestion', 'render'],\r\n    watch: {\r\n        render() {\r\n            this.reload = false\r\n            this.$nextTick(() => {\r\n                this.reload = true\r\n            })\r\n\r\n        }\r\n    },\r\n    setup() {\r\n        // console.log(this.questions)\r\n        const reload = ref(true)\r\n        const classType = ref(['stt-question answer-content-choice', 'stt-question answer-content-choice-checked', 'stt-question answer-content-choice-true', 'stt-question answer-content-choice-wrong'])\r\n        return {\r\n            classType, reload\r\n        }\r\n    },\r\n\r\n\r\n    methods: {\r\n        moveToQuestion(page, id) {\r\n            console.log(\"In navbar\")\r\n            console.log(\"Navbar page \" + page)\r\n            this.$emit('moveQuestion', page, 'question_' + id);\r\n\r\n            // this.$emit('clickQuestion', page, index);\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.overview-exam {\r\n    width: 20%;\r\n    position: fixed;\r\n    border-style: solid;\r\n    /* border-top: 5px solid #ea4f4c; */\r\n}\r\n\r\n.list-numerical-question {\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 20%);\r\n    margin-top: 10px;\r\n    padding-top: 5px;\r\n    border-top: 5px solid #ea4f4c;\r\n\r\n}\r\n\r\n.navbar-list-question {\r\n    font-weight: bold;\r\n}\r\n\r\n.stt-question {\r\n    display: inline-grid;\r\n    text-align: center;\r\n    align-items: center;\r\n    margin: 1px;\r\n    height: 40px;\r\n    border-style: solid;\r\n    border-radius: 5px;\r\n}\r\n\r\n.answer-content-choice {\r\n    background-color: white;\r\n    border-color: #222;\r\n    color: #222;\r\n}\r\n\r\n.answer-content-choice-checked {\r\n    background-color: #222;\r\n    border-color: #222;\r\n    color: white;\r\n}\r\n\r\n.answer-content-choice-true {\r\n    background-color: rgb(24, 247, 13);\r\n    border-color: #222;\r\n    color: white;\r\n}\r\n\r\n.answer-content-choice-wrong {\r\n    background-color: rgb(236, 10, 10);\r\n    border-color: #222;\r\n    color: white;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}