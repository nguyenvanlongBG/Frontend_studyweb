{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"question-not-note\"\n};\nconst _hoisted_2 = {\n  class: \"action-question\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 2\n};\nconst _hoisted_6 = {\n  key: 4\n};\nconst _hoisted_7 = {\n  key: 5\n};\nconst _hoisted_8 = {\n  key: 8,\n  class: \"action-question\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"note\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-chalkboard-user note-teacher\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Ghi chú giáo viên\", -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Ghi chú học sinh\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache) {\n  const _component_LatexComponent = _resolveComponent(\"LatexComponent\");\n\n  const _component_ChooseComponent = _resolveComponent(\"ChooseComponent\");\n\n  const _component_ConfirmComponent = _resolveComponent(\"ConfirmComponent\");\n\n  const _component_CommentQuestionComponent = _resolveComponent(\"CommentQuestionComponent\");\n\n  return _ctx.render ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(_ctx.styleQuestion)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_ctx.canUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"tool-button-test\",\n    style: _normalizeStyle(_ctx.pressUpdate ? _ctx.styleObject : null),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.publicQuestion && _ctx.publicQuestion(...args))\n  }, \" Diễn đàn \", 4\n  /* STYLE */\n  )) : _createCommentVNode(\"v-if\", true), _ctx.canUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"tool-button-test\",\n    style: _normalizeStyle(_ctx.pressUpdate ? _ctx.styleObject : null),\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.updateQuestion && _ctx.updateQuestion(...args))\n  }, \" Sửa \", 4\n  /* STYLE */\n  )) : _createCommentVNode(\"v-if\", true), _ctx.canUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"tool-button-test\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.deleteQuestion && _ctx.deleteQuestion(...args))\n  }, \" Xóa \")) : _createCommentVNode(\"v-if\", true)]), _ctx.type != 0 ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_3, \"Câu \" + _toDisplayString(_ctx.index) + \": \", 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _ctx.type == 0 ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_4, \"Câu hỏi: \")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_LatexComponent, {\n    content: _ctx.infoQuestion.question.content,\n    isUpdate: _ctx.pressUpdate,\n    onUpdate: _ctx.updateContentQuestion,\n    id: 'question_' + _ctx.infoQuestion.question.question_id\n  }, null, 8\n  /* PROPS */\n  , [\"content\", \"isUpdate\", \"onUpdate\", \"id\"]), _createCommentVNode(\" <CommentQuestionComponent :answers=\\\"question.answers\\\" /> \"), (_ctx.infoQuestion.question.type == 1 || _ctx.infoQuestion.question.type == 3) && (_ctx.type == 3 || _ctx.type == 2) ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_5, \" Đáp án đúng:\")) : _createCommentVNode(\"v-if\", true), (_ctx.infoQuestion.question.type == 1 || _ctx.infoQuestion.question.type == 3) && (_ctx.type == 3 || _ctx.type == 2) ? (_openBlock(), _createBlock(_component_LatexComponent, {\n    key: 3,\n    isUpdate: _ctx.canEssay,\n    onUpdate: _ctx.answerQuestion,\n    content: _ctx.infoQuestion.question.contentResult != null ? _ctx.infoQuestion.question.contentResult : '',\n    id: _ctx.infoQuestion.question.question_id + '_result_' + _ctx.infoQuestion.question.result_id,\n    class: \"border-green\"\n  }, null, 8\n  /* PROPS */\n  , [\"isUpdate\", \"onUpdate\", \"content\", \"id\"])) : _createCommentVNode(\"v-if\", true), _ctx.type != 2 && _ctx.type != 0 ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_6, \"Đáp án của bạn là:\")) : _createCommentVNode(\"v-if\", true), _ctx.canUpdate && _ctx.type != 2 && _ctx.type != 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Bạn hãy nhập đáp án của câu hỏi\")) : _createCommentVNode(\"v-if\", true), (_ctx.infoQuestion.question.type == 1 || _ctx.infoQuestion.question.type == 3) && (_ctx.type == 1 || _ctx.type == 3) ? (_openBlock(), _createBlock(_component_LatexComponent, {\n    key: 6,\n    isUpdate: _ctx.canEssay,\n    onUpdate: _ctx.answerQuestion,\n    content: _ctx.infoQuestion.question.answer != null ? _ctx.infoQuestion.question.answer : '',\n    id: _ctx.infoQuestion.question.question_id + '_answer'\n  }, null, 8\n  /* PROPS */\n  , [\"isUpdate\", \"onUpdate\", \"content\", \"id\"])) : _createCommentVNode(\"v-if\", true), _ctx.infoQuestion.question.type == 2 ? (_openBlock(), _createBlock(_component_ChooseComponent, {\n    key: 7,\n    ref: 'chooses_' + _ctx.infoQuestion.question.question_id,\n    choices: _ctx.infoQuestion.choices,\n    isUpdate: _ctx.pressUpdate,\n    doTest: \"true\",\n    onUpdate: _ctx.updateChoose,\n    onCreate: _ctx.createChoose,\n    onDelete: _ctx.deleteAnswer,\n    onChooseAnswer: _ctx.answerQuestion,\n    type: _ctx.type,\n    linkNavbar: 'page_' + _ctx.infoQuestion.question.page + '_' + _ctx.index,\n    question: _ctx.infoQuestion.question.question_id,\n    canChoose: _ctx.canChoose\n  }, null, 8\n  /* PROPS */\n  , [\"choices\", \"isUpdate\", \"onUpdate\", \"onCreate\", \"onDelete\", \"onChooseAnswer\", \"type\", \"linkNavbar\", \"question\", \"canChoose\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <LatexComponent v-if=\\\"(infoQuestion.question.type == 1)\\\" :isUpdate=\\\"isUpdateEssay\\\"\\r\\n            @update=\\\"data => updateResultEssay(infoQuestion.question.result_id, data)\\\" /> \"), _ctx.pressUpdate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    class: \"tool-button-test\",\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.back && _ctx.back(...args))\n  }, \" Trở lại \"), _createElementVNode(\"button\", {\n    class: \"tool-button-test margin-bottom6px\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.confirmUpdate && _ctx.confirmUpdate(...args))\n  }, \" Lưu \")])) : _createCommentVNode(\"v-if\", true), _ctx.confirmModal ? (_openBlock(), _createBlock(_component_ConfirmComponent, {\n    key: 9,\n    content: \"Bạn có chắc chắn muốn xóa?\",\n    onClose: _cache[5] || (_cache[5] = $event => _ctx.confirmModal = false),\n    onConfirm: _ctx.confirmDelete\n  }, null, 8\n  /* PROPS */\n  , [\"onConfirm\"])) : _createCommentVNode(\"v-if\", true), this.infoQuestion.question.scope == 0 ? (_openBlock(), _createBlock(_component_CommentQuestionComponent, {\n    key: 10\n  })) : _createCommentVNode(\"v-if\", true)]), true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_11, _createVNode(_component_LatexComponent)]), _createElementVNode(\"div\", null, [_hoisted_12, _createVNode(_component_LatexComponent)])])])) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_ctx","_createElementBlock","style","onClick","_hoisted_3","_toDisplayString","_hoisted_4","_createVNode","_component_LatexComponent","content","question","isUpdate","onUpdate","id","question_id","_createCommentVNode","type","_hoisted_5","_createBlock","contentResult","result_id","_hoisted_6","_hoisted_7","answer","_component_ChooseComponent","ref","choices","doTest","onCreate","onDelete","onChooseAnswer","linkNavbar","page","canChoose","_component_ConfirmComponent","onClose","onConfirm","infoQuestion","scope","_component_CommentQuestionComponent","key","_hoisted_10","_hoisted_11","_hoisted_12"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Question\\QuestionComponent.vue"],"sourcesContent":["<template>\r\n    <div :class=\"styleQuestion\" v-if=\"render\">\r\n        <div class=\"question-not-note\">\r\n            <div class=\"action-question\">\r\n                <button class=\"tool-button-test\" :style=\"pressUpdate ? styleObject : null\" @click=\"publicQuestion\"\r\n                    v-if=\"canUpdate\">\r\n                    Diễn đàn\r\n                </button>\r\n                <button class=\"tool-button-test\" :style=\"pressUpdate ? styleObject : null\" @click=\"updateQuestion\"\r\n                    v-if=\"canUpdate\">\r\n                    Sửa\r\n                </button>\r\n                <button class=\"tool-button-test\" @click=\"deleteQuestion\" v-if=\"canUpdate\">\r\n                    Xóa\r\n                </button>\r\n\r\n            </div>\r\n            <h3 v-if=\"type != 0\">Câu {{ index }}: </h3>\r\n            <h3 v-if=\"type == 0\">Câu hỏi: </h3>\r\n            <LatexComponent :content=\"infoQuestion.question.content\" :isUpdate=\"pressUpdate\"\r\n                @update=\"updateContentQuestion\" :id=\"'question_' + infoQuestion.question.question_id\" />\r\n            <!-- <CommentQuestionComponent :answers=\"question.answers\" /> -->\r\n            <h3 v-if=\"(infoQuestion.question.type == 1 || infoQuestion.question.type == 3) && (type == 3 || type == 2)\">\r\n                Đáp\r\n                án đúng:</h3>\r\n            <LatexComponent :isUpdate=\"canEssay\" @update=\"answerQuestion\"\r\n                :content=\"infoQuestion.question.contentResult != null ? infoQuestion.question.contentResult : ''\"\r\n                :id=\"infoQuestion.question.question_id + '_result_' + infoQuestion.question.result_id\"\r\n                v-if=\"(infoQuestion.question.type == 1 || infoQuestion.question.type == 3) && (type == 3 || type == 2)\"\r\n                class=\"border-green\" />\r\n            <h3 v-if=\"type != 2 && type != 0\">Đáp án của bạn là:</h3>\r\n            <span v-if=\"canUpdate && type != 2 && type != 0\">Bạn hãy nhập đáp án của câu hỏi</span>\r\n            <LatexComponent :isUpdate=\"canEssay\" @update=\"answerQuestion\"\r\n                :content=\"infoQuestion.question.answer != null ? infoQuestion.question.answer : ''\"\r\n                :id=\"infoQuestion.question.question_id + '_answer'\"\r\n                v-if=\"(infoQuestion.question.type == 1 || infoQuestion.question.type == 3) && (type == 1 || type == 3)\" />\r\n            <ChooseComponent :ref=\"'chooses_' + infoQuestion.question.question_id\" :choices=\"infoQuestion.choices\"\r\n                :isUpdate=\"pressUpdate\" doTest=\"true\" @update=\"updateChoose\" @create=\"createChoose\"\r\n                @delete=\"deleteAnswer\" @chooseAnswer=\"answerQuestion\" v-if=\"(infoQuestion.question.type == 2)\"\r\n                :type=\"type\" :linkNavbar=\"'page_' + infoQuestion.question.page + '_' + index\"\r\n                :question=\"infoQuestion.question.question_id\" :canChoose=\"canChoose\" />\r\n            <!-- <LatexComponent v-if=\"(infoQuestion.question.type == 1)\" :isUpdate=\"isUpdateEssay\"\r\n            @update=\"data => updateResultEssay(infoQuestion.question.result_id, data)\" /> -->\r\n\r\n            <div class=\"action-question\" v-if=\"pressUpdate\">\r\n                <button class=\"tool-button-test\" @click=\"back\">\r\n                    Trở lại\r\n                </button>\r\n                <button class=\"tool-button-test margin-bottom6px\" @click=\"confirmUpdate\">\r\n                    Lưu\r\n                </button>\r\n            </div>\r\n            <ConfirmComponent v-if=\"confirmModal\" content=\"Bạn có chắc chắn muốn xóa?\" @close=\"confirmModal = false\"\r\n                @confirm=\"confirmDelete\" />\r\n            <CommentQuestionComponent v-if=\"this.infoQuestion.question.scope == 0\" />\r\n        </div>\r\n        <div class=\"note\" v-if=\"true\">\r\n            <i class=\"fa-solid fa-chalkboard-user note-teacher\"></i>\r\n            <div>\r\n                <div>\r\n                    <h3>Ghi chú giáo viên</h3>\r\n                    <LatexComponent />\r\n                </div>\r\n                <div>\r\n                    <h3>Ghi chú học sinh</h3>\r\n                    <LatexComponent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport ChooseComponent from \"./ChooseComponent.vue\";\r\nimport CommentQuestionComponent from \"./CommentQuestionComponent.vue\";\r\nimport LatexComponent from \"../LatexComponent.vue\";\r\nimport ConfirmComponent from '../common/ConfirmComponent.vue'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleQuestionTest } from '../../services/question'\r\nimport LatexComponent from \"../LatexComponent.vue\";\r\nexport default {\r\n    name: \"QuestionComponent\",\r\n    components: {\r\n        ChooseComponent,\r\n        LatexComponent,\r\n        ConfirmComponent,\r\n        CommentQuestionComponent,\r\n        LatexComponent\r\n    },\r\n    props: ['question', 'isUpdateEssay', 'index', 'isNormal', 'type', 'send'],\r\n    setup() {\r\n        const render = ref(true)\r\n        const confirmModal = ref(false)\r\n        const infoQuestion = ref([])\r\n        const pressUpdate = ref(false)\r\n        const canEssay = ref(false)\r\n        const canUpdate = ref(false)\r\n        const handleQuestion = ref({ 'question': {}, 'answer': {} })\r\n        const writeResult = ref({})\r\n        const result = ref(-1)\r\n        const essayAnswer = ref({})\r\n        const answerUpdate = ref(new Map())\r\n        const answerDelete = ref(new Set())\r\n        const answerCreate = ref(new Map())\r\n        const page = ref(1)\r\n        const canChoose = ref(false)\r\n        const answer = ref(-1)\r\n        const styleObject = ref({\r\n            \"box-shadow\": \"0 5px #666\",\r\n            \"transform\": \"translateY(4px)\"\r\n        })\r\n        const styleQuestion = ref(\"info-question\")\r\n        return {\r\n            render, result, writeResult, handleQuestion, essayAnswer, answerUpdate, answerDelete, answerCreate, styleQuestion, confirmModal, pressUpdate, page, styleObject, infoQuestion, canEssay, canUpdate, canChoose, answer\r\n        }\r\n    },\r\n\r\n    created() {\r\n        // Câu hỏi thường\r\n        if (this.type == 0) {\r\n            this.canEssay = this.isUpdateEssay;\r\n            this.canChoose = false;\r\n\r\n        }\r\n        // Câu hỏi thi\r\n        if (this.type == 1) {\r\n            this.canUpdate = false\r\n            this.canEssay = true\r\n            this.canChoose = true;\r\n        }\r\n        // Câu hỏi cập nhật\r\n        if (this.type == 2) {\r\n            this.canUpdate = true\r\n            this.canEssay = true\r\n            this.canChoose = true;\r\n        }\r\n        // Câu hỏi lịch sử làm bài\r\n        if (this.type == 3) {\r\n            this.canEssay = false\r\n            this.canChoose = false\r\n        }\r\n\r\n        this.canEssay = this.isUpdateEssay\r\n        this.infoQuestion = JSON.parse(JSON.stringify(this.question));\r\n        // if ((\"\" + this.infoQuestion.question.question_id).includes(\"new\") && this.infoQuestion.question.type != 2) {\r\n        //     this.answerCreate.set(this.infoQuestion.question.question_id + \"new_answer\", { 'id': this.infoQuestion.question.question_id + \"new_answer\", 'content': \"\" });\r\n        // }\r\n        this.handleQuestion.question = this.question.question\r\n        this.page = this.question.page\r\n    },\r\n    mounted() {\r\n\r\n        if (this.type == 1) {\r\n            if (this.question.question.type == 2) {\r\n                if (this.question.question?.answer != null) {\r\n                    let choose = document.getElementById(this.question.question.question_id + '_choose_' + this.question.question.answer)\r\n                    choose.click()\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type == 2) {\r\n            if (this.question.question.type == 2) {\r\n                if (this.question.question?.result_id != null) {\r\n                    let choose = document.getElementById(this.question.question.question_id + '_choose_' + this.question.question.result_id)\r\n                    choose.click()\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type == 3) {\r\n            if (this.question.question?.result_id != null) {\r\n                if (this.question.question.type == 2) {\r\n                    if (this.question.question.answer != null) {\r\n                        console.log(\"OK\")\r\n                        if (this.question.question.result_id == this.question.question.answer) {\r\n                            let choose = document.getElementById(this.question.question.question_id + '_choose_' + this.infoQuestion.question.answer)\r\n                            choose.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                            let question = document.getElementById(\"question_\" + this.question.question.question_id)\r\n                            question.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                        } else {\r\n                            let chooseCorrect = document.getElementById(this.question.question.question_id + '_choose_' + this.infoQuestion.question.result_id)\r\n                            chooseCorrect.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                            let chooseFalse = document.getElementById(this.question.question.question_id + '_choose_' + this.infoQuestion.question.answer)\r\n                            chooseFalse.style.border = \"4px solid red\"\r\n\r\n                            let question = document.getElementById(\"question_\" + this.question.question.question_id)\r\n                            question.style.border = \"4px solid red\"\r\n                        }\r\n                    } else {\r\n                        let chooseCorrect = document.getElementById(this.question.question.question_id + '_choose_' + this.infoQuestion.question.result_id)\r\n                        chooseCorrect.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                    }\r\n                }\r\n                if (this.question.question.type == 1) {\r\n                    if (this.question.question.contentResult == this.question.question.answer) {\r\n                        let chooseCorrect = document.getElementById(this.question.question.question_id + '_result_' + this.infoQuestion.question.result_id)\r\n                        chooseCorrect.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                        let chooseAnswer = document.getElementById(this.question.question.question_id + '_answer')\r\n                        chooseAnswer.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                    } else {\r\n                        let chooseCorrect = document.getElementById(this.question.question.question_id + '_result_' + this.infoQuestion.question.result_id)\r\n                        chooseCorrect.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                        let chooseFalse = document.getElementById(this.question.question.question_id + '_answer')\r\n                        chooseFalse.style.border = \"4px solid red\"\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        back() {\r\n            this.pressUpdate = false\r\n            this.canEssay = false\r\n            this.render = false\r\n            this.canChoose = false\r\n            this.handleQuestion = ref({})\r\n            this.writeResult = ref({})\r\n            this.essayAnswer = ref({})\r\n            this.answerUpdate = ref(new Map())\r\n            this.answerDelete = ref(new Set())\r\n            this.answerCreate = ref(new Map())\r\n            this.answer = ref(-1)\r\n            this.$nextTick(() => {\r\n                this.render = true\r\n            })\r\n        },\r\n        answerQuestion(answer) {\r\n            this.answer = answer\r\n        },\r\n        publicQuestion() {\r\n\r\n        },\r\n        updateQuestion() {\r\n            this.pressUpdate = true;\r\n            this.canEssay = true;\r\n            this.canChoose = true\r\n        },\r\n        updateContentQuestion(data) {\r\n            // this.questionUpdate.id = this.infoQuestion.question.question_id\r\n            this.handleQuestion.question.content = data\r\n            // this.questionUpdate.id = this.infoQuestion.question.question_id\r\n        },\r\n        updateChoose(choose) {\r\n            if (('' + choose.id).includes('new')) {\r\n                choose.question_id = this.infoQuestion.question.question_id\r\n                this.answerCreate.set(choose.id, choose)\r\n            } else {\r\n                choose.question_id = this.infoQuestion.question.question_id\r\n                this.answerUpdate.set(choose.id, choose)\r\n            }\r\n        },\r\n\r\n        createChoose(data) {\r\n            data.question_id = this.infoQuestion.question.question_id\r\n            this.answerCreate.set(data.id, data)\r\n        },\r\n        deleteAnswer(id) {\r\n            if (this.infoQuestion.question.type == 2) {\r\n                if (id == this.infoQuestion.question.result_id || this.infoQuestion.question.result_id == null) {\r\n                    this.answer = null\r\n                }\r\n            }\r\n            if (('' + id).includes('new')) {\r\n                // Xóa câu hỏi trắc nghiệm mới tạo\r\n                this.answerCreate.delete(id)\r\n            } else {\r\n                if (this.answerUpdate.get(id) != undefined) {\r\n                    this.answerUpdate.delete(id)\r\n                }\r\n                this.answerDelete.add(id)\r\n            }\r\n\r\n        },\r\n        deleteQuestion() {\r\n            this.pressUpdate = false;\r\n            this.confirmModal = true;\r\n        },\r\n        confirmDelete() {\r\n            const idQuestion = this.question.question.question_id\r\n            const deleteQuestion = {\r\n                'id': idQuestion,\r\n                'index': this.index,\r\n            }\r\n            if (this.infoQuestion.question.type == 2) {\r\n                this.infoQuestion.choices.forEach(choose => {\r\n                    this.deleteAnswer(choose.id)\r\n                });\r\n            } else {\r\n                this.deleteAnswer(this.infoQuestion.question.result_id)\r\n\r\n            }\r\n            this.$emit(\"delete\", deleteQuestion);\r\n            this.confirmModal = false;\r\n        },\r\n        async confirmUpdate() {\r\n            this.pressUpdate = false\r\n            this.canEssay = false\r\n            this.canChoose = false\r\n            if (this.infoQuestion.question.type == 2) {\r\n                this.handleQuestion.question.result_id = this.answer\r\n            } else {\r\n                this.handleQuestion.question.contentResult = this.answer\r\n                if (Number.isInteger(this.infoQuestion.question.result_id)) {\r\n                    let data = {\r\n                        question_id: this.infoQuestion.question.question_id,\r\n                        id: this.infoQuestion.question.result_id,\r\n                        content: this.answer\r\n                    }\r\n                    this.answerUpdate.set(this.infoQuestion.question.result_id, data)\r\n                } else {\r\n                    let data = {\r\n                        question_id: this.infoQuestion.question.question_id,\r\n                        id: this.infoQuestion.question.result_id,\r\n                        content: this.answer\r\n                    }\r\n                    this.answerCreate.set(this.infoQuestion.question.result_id, data)\r\n                }\r\n            }\r\n            this.handleQuestion.answer.create = Array.from(this.answerCreate.values())\r\n            this.handleQuestion.answer.update = Array.from(this.answerUpdate.values())\r\n            console.log(\"Update choose\")\r\n            console.log(this.handleQuestion.answer.update)\r\n            this.handleQuestion.answer.delete = Array.from(this.answerDelete.values())\r\n            console.log(\"Send Data\")\r\n            console.log(this.handleQuestion)\r\n            const response = await handleQuestionTest(this.handleQuestion)\r\n            this.infoQuestion = response.data\r\n            this.render = false\r\n            this.$nextTick(() => {\r\n                this.render = true\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.info-question {\r\n    background-color: #222;\r\n    color: white;\r\n    margin-top: 15px;\r\n    padding: 15px;\r\n    border-style: solid;\r\n    border-color: #666363;\r\n    display: flex;\r\n}\r\n\r\n.question-not-note {\r\n    flex: 1 1 70%;\r\n}\r\n\r\n.note {\r\n    flex: 1 1 30%;\r\n    display: flex;\r\n}\r\n\r\n.info-question-correct {\r\n    background-color: #222;\r\n    color: white;\r\n    margin-top: 15px;\r\n    padding: 15px;\r\n    border-style: solid;\r\n    border-color: #666363;\r\n}\r\n\r\n.action-question {\r\n    margin-top: 2px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.info-question-false {\r\n    background-color: #222;\r\n    color: white;\r\n    margin-top: 15px;\r\n    padding: 15px;\r\n    border-style: solid;\r\n    border-color: #666363;\r\n}\r\n\r\n.white {\r\n    background-color: white;\r\n}\r\n\r\n.tool-button-test {\r\n    margin-left: 2px;\r\n    margin-top: 2px;\r\n    height: 35px;\r\n    box-shadow: 0 8px #999;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.tool-button-test:active {\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n}\r\n\r\n.margin-bottom6px {\r\n    margin-bottom: 6px;\r\n}\r\n\r\n.border-green {\r\n    border: 2px solid rgb(8, 196, 40);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}