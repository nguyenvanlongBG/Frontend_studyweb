{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-answer-overlay\",\n  style: {\n    \"overflow-y\": \"scroll\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"question-competition\"\n};\nconst _hoisted_3 = {\n  class: \"info-question-competition\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_QuestionComponent = _resolveComponent(\"QuestionComponent\");\n\n  return $setup.render ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_QuestionComponent, {\n    type: 1,\n    isOwner: false,\n    question: $setup.question\n  }, null, 8\n  /* PROPS */\n  , [\"question\"])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.close()),\n    class: \"close-modal-solution\"\n  }, \"X\")])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;EAAuBC,KAA0B,EAA1B;IAAA;EAAA;;;EACzBD,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;;;SAFgDE,+BAAnEC,oBAOM,KAPN,cAOM,CANFC,oBAKM,KALN,cAKM,CAJFA,oBAEM,KAFN,cAEM,CADFC,aAAqEC,4BAArE,EAAqE;IAAjDC,IAAI,EAAE,CAA2C;IAAvCC,OAAO,EAAE,KAA8B;IAAtBC,QAAQ,EAAEP;EAAY,CAArE;;EAAA,eACE,CAFN,CAIE,EADFE,oBAAgE,QAAhE,EAAgE;IAAvDM,OAAK,sCAAEC,gBAAF,CAAkD;IAAvCX,KAAK,EAAC;EAAiC,CAAhE,EAAsD,GAAtD,CACE,CALN,CAME,CAPN","names":["class","style","$setup","_createElementBlock","_createElementVNode","_createVNode","_component_QuestionComponent","type","isOwner","question","onClick","$options"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Question\\ModalQuestionCompetition.vue"],"sourcesContent":["<template>\r\n    <div class=\"modal-answer-overlay\" style=\"overflow-y: scroll\" v-if=\"render\">\r\n        <div class=\"question-competition\">\r\n            <div class=\"info-question-competition\">\r\n                <QuestionComponent :type=\"1\" :isOwner=\"false\" :question=\"question\" />\r\n            </div>\r\n            <button @click=\"close()\" class=\"close-modal-solution\">X</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport QuestionComponent from './QuestionComponent.vue';\r\nexport default {\r\n    components: {\r\n        QuestionComponent\r\n    },\r\n    setup() {\r\n        const solution = ref({})\r\n        const question = ref({\r\n            question: {\r\n                content: 'OK'\r\n            },\r\n            page: 1\r\n        })\r\n        const render = ref(true)\r\n        return {\r\n            solution, question, render\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.handleGetData()\r\n    },\r\n    methods: {\r\n        async handleGetData() {\r\n            console.log(this.question)\r\n            this.render = false\r\n            this.$nextTick(() => {\r\n                this.render = true\r\n            })\r\n        },\r\n        close() {\r\n            this.$emit('close')\r\n        },\r\n        answerQuestion() {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n<style>\r\n.modal-answer-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    background-color: #000000da;\r\n    z-index: 100;\r\n}\r\n\r\n.question-competition {\r\n    display: flex;\r\n}\r\n\r\n.info-question-competition {\r\n    min-height: 800px;\r\n    min-width: 800px;\r\n}\r\n\r\n.solution-modal {\r\n    min-height: 800px;\r\n    min-width: 800px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    padding: 20px 0;\r\n    border-radius: 10px;\r\n}\r\n\r\n.content-solution {\r\n    width: 100%;\r\n}\r\n\r\n.close-modal-solution {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    top: 0px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    background-color: blueviolet;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}