{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-33a2fa56\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"info-list-question\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Chỉnh sửa đề thi\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"page\"\n};\nconst _hoisted_4 = {\n  class: \"menu-create\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"choice-type-create\"\n};\nconst _hoisted_6 = {\n  class: \"end-action\"\n};\nconst _hoisted_7 = {\n  class: \"menu-create-end\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"choice-type-create\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavbarListComponent = _resolveComponent(\"NavbarListComponent\");\n\n  const _component_LoadingComponent = _resolveComponent(\"LoadingComponent\");\n\n  const _component_QuestionComponent = _resolveComponent(\"QuestionComponent\");\n\n  const _component_paginate = _resolveComponent(\"paginate\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <NavbarListComponent /> \"), _createVNode(_component_NavbarListComponent, {\n    numericalQuestion: $setup.numericalQuestion,\n    onMoveQuestion: $options.moveQuestion\n  }, null, 8\n  /* PROPS */\n  , [\"numericalQuestion\", \"onMoveQuestion\"]), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, $setup.isLoading ? (_openBlock(), _createBlock(_component_LoadingComponent, {\n    key: 0\n  })) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, \" Trang \" + _toDisplayString($setup.currentPage), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_4, [$setup.displayTypeCreateFirst ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [$setup.canUpdate ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"create-button-type\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.createQuestion(2))\n  }, \" Trắc nghiệm \")) : _createCommentVNode(\"v-if\", true), $setup.canUpdate ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"create-button-type\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.createQuestion(1))\n  }, \" Điền đáp án \")) : _createCommentVNode(\"v-if\", true), $setup.canUpdate ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    class: \"create-button-type\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.createQuestion(3))\n  }, \" Tự luận \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $setup.canUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"create-button-first\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.displayCreateQuestionTypeFirst && $options.displayCreateQuestionTypeFirst(...args))\n  }, \" Thêm câu hỏi \")) : _createCommentVNode(\"v-if\", true)])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.questions, (question, index) => {\n    return _openBlock(), _createBlock(_component_QuestionComponent, {\n      key: index,\n      question: question,\n      ref_for: true,\n      ref: 'question_' + question.question.question_id,\n      onCreate: $options.createQuestion,\n      onUpdate: _cache[4] || (_cache[4] = $event => _ctx.updateQuestion()),\n      onDelete: $options.deleteQuestion,\n      onAddlistQuestionFollow: $options.addlistQuestionFollow,\n      id: 'question_' + question.question.question_id,\n      index: $setup.startIndex + index,\n      type: 2,\n      send: $setup.sendData,\n      onSend: $setup.sendData\n    }, null, 8\n    /* PROPS */\n    , [\"question\", \"onCreate\", \"onDelete\", \"onAddlistQuestionFollow\", \"id\", \"index\", \"send\", \"onSend\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [$setup.displayTypeCreateEnd ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [$setup.canUpdate ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"create-button-type\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.createQuestion(2))\n  }, \" Trắc nghiệm \")) : _createCommentVNode(\"v-if\", true), $setup.canUpdate ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"create-button-type\",\n    onClick: _cache[6] || (_cache[6] = $event => $options.createQuestion(1))\n  }, \" Điền đáp án \")) : _createCommentVNode(\"v-if\", true), $setup.canUpdate ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    class: \"create-button-type\",\n    onClick: _cache[7] || (_cache[7] = $event => $options.createQuestion(3))\n  }, \" Tự luận \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $setup.canUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"update-create-question-button\",\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.displayCreateQuestionTypeEnd && $options.displayCreateQuestionTypeEnd(...args))\n  }, \" Thêm câu hỏi \")) : _createCommentVNode(\"v-if\", true)]), $setup.canUpdate && $setup.currentPage == $setup.totalPage ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"update-create-question-button\",\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.addPage && $options.addPage(...args))\n  }, \" Thêm trang \")) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_paginate, {\n    \"page-count\": $setup.totalPage,\n    \"page-range\": 3,\n    \"margin-pages\": 2,\n    \"click-handler\": $options.clickCallback,\n    \"prev-text\": 'Prev',\n    \"next-text\": 'Next',\n    \"container-class\": 'pagination',\n    \"page-class\": 'page-item',\n    \"active-class\": 'active-class'\n  }, null, 8\n  /* PROPS */\n  , [\"page-count\", \"click-handler\"])], 64\n  /* STABLE_FRAGMENT */\n  ))])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createCommentVNode","_createVNode","_component_NavbarListComponent","numericalQuestion","$setup","onMoveQuestion","$options","_hoisted_2","_createBlock","_component_LoadingComponent","key","_createElementBlock","_Fragment","_toDisplayString","onClick","_renderList","question","index","_component_QuestionComponent","ref","question_id","onCreate","onUpdate","_ctx","onDelete","onAddlistQuestionFollow","id","type","send","onSend","_component_paginate"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Test\\UpdateTestComponent.vue"],"sourcesContent":["<template  v-if=\"render\">\r\n    <!-- <NavbarListComponent /> -->\r\n    <NavbarListComponent :numericalQuestion=\"numericalQuestion\" @moveQuestion=\"moveQuestion\" />\r\n    <div class=\"info-list-question\">\r\n        <h1>Chỉnh sửa đề thi</h1>\r\n        <LoadingComponent v-if=\"isLoading\"></LoadingComponent>\r\n        <template v-else>\r\n            <div class=\"page\">\r\n\r\n                <h2>\r\n                    Trang {{ currentPage }}\r\n                </h2>\r\n                <div class=\"menu-create\">\r\n                    <div class=\"choice-type-create\" v-if=\"displayTypeCreateFirst\">\r\n                        <div class=\"create-button-type\" @click=\"createQuestion(2)\" v-if=\"canUpdate\">\r\n                            Trắc nghiệm\r\n                        </div>\r\n                        <div class=\"create-button-type\" @click=\"createQuestion(1)\" v-if=\"canUpdate\">\r\n                            Điền đáp án\r\n                        </div>\r\n                        <div class=\"create-button-type\" @click=\"createQuestion(3)\" v-if=\"canUpdate\">\r\n                            Tự luận\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"create-button-first\" @click=\"displayCreateQuestionTypeFirst\" v-if=\"canUpdate\">\r\n                        Thêm câu hỏi\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <QuestionComponent v-for=\"(question, index) in  questions\" :key=\"index\" :question=\"question\"\r\n                :ref=\"'question_' + question.question.question_id\" @create=\"createQuestion\" @update=\"updateQuestion()\"\r\n                @delete=\"deleteQuestion\" @addlistQuestionFollow=\"addlistQuestionFollow\"\r\n                :id=\"'question_' + question.question.question_id\" :index=\"startIndex + index\" :type=\"2\" :send=\"sendData\"\r\n                @send=\"sendData\" />\r\n            <div class=\"end-action\">\r\n                <div class=\"menu-create-end\">\r\n                    <div class=\"choice-type-create\" v-if=\"displayTypeCreateEnd\">\r\n                        <div class=\"create-button-type\" @click=\"createQuestion(2)\" v-if=\"canUpdate\">\r\n                            Trắc nghiệm\r\n                        </div>\r\n                        <div class=\"create-button-type\" @click=\"createQuestion(1)\" v-if=\"canUpdate\">\r\n                            Điền đáp án\r\n                        </div>\r\n                        <div class=\"create-button-type\" @click=\"createQuestion(3)\" v-if=\"canUpdate\">\r\n                            Tự luận\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"update-create-question-button\" @click=\"displayCreateQuestionTypeEnd\"\r\n                        v-if=\"canUpdate\">\r\n                        Thêm câu hỏi\r\n                    </button>\r\n                </div>\r\n\r\n                <button class=\"update-create-question-button\" @click=\"addPage\"\r\n                    v-if=\"canUpdate && currentPage == totalPage\">\r\n                    Thêm trang\r\n                </button>\r\n            </div>\r\n            <paginate :page-count=\"totalPage\" :page-range=\"3\" :margin-pages=\"2\" :click-handler=\"clickCallback\"\r\n                :prev-text=\"'Prev'\" :next-text=\"'Next'\" :container-class=\"'pagination'\" :page-class=\"'page-item'\"\r\n                :active-class=\"'active-class'\">\r\n            </paginate>\r\n        </template>\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport QuestionComponent from '../Question/QuestionComponent.vue';\r\nimport Paginate from 'vuejs-paginate-next';\r\nimport { getQuestionTestUpdate } from '../../services/question'\r\nimport { getNumericalQuestion, updateTest } from '../../services/test'\r\nimport { ref } from '@vue/reactivity'\r\nimport { useRoute } from 'vue-router';\r\nimport LoadingComponent from '../common/LoadingComponent.vue';\r\nimport NavbarListComponent from \"../Test/NavbarListComponent.vue\"\r\nexport default {\r\n    name: \"UpdateTestComponent\",\r\n    components: {\r\n        QuestionComponent,\r\n        paginate: Paginate,\r\n        NavbarListComponent,\r\n        LoadingComponent\r\n    },\r\n    setup() {\r\n        const idTest = parseInt(useRoute().params.idTest)\r\n        const isLoading = ref(false)\r\n        const canUpdate = ref(true)\r\n        const isUpdateEssay = ref(false)\r\n        const questions = ref([])\r\n        const currentPage = ref(1)\r\n        const totalPage = ref(1)\r\n        const startIndex = ref(1)\r\n        const numericalQuestion = ref([])\r\n        const moveTo = ref(\"\")\r\n        const listQuestionFollow = ref(new Set())\r\n        const questionsDelete = ref([])\r\n        const render = ref(true)\r\n        const indexNewQuestion = ref(0)\r\n        const displayTypeCreateFirst = ref(false)\r\n        const displayTypeCreateEnd = ref(false)\r\n        const sendData = ref({\r\n            'questions': {\r\n                'create': [],\r\n                'update': [],\r\n                'delete': [],\r\n                'deleteResults': [], // Question fill and essay\r\n                'updateResults': [] // Question fill and essay\r\n\r\n            },\r\n            'choices': {\r\n                'create': [],\r\n                'update': [],\r\n                'delete': [],\r\n            }\r\n        })\r\n        // const answersUpdate = ref([])\r\n        // const answersDelete = ref([])\r\n        // const answersCreate = ref([])\r\n        return {\r\n            idTest,\r\n            isLoading,\r\n            canUpdate,\r\n            isUpdateEssay,\r\n            questions,\r\n            currentPage,\r\n            totalPage,\r\n            startIndex,\r\n            numericalQuestion,\r\n            moveTo,\r\n            listQuestionFollow,\r\n            questionsDelete,\r\n            sendData,\r\n            indexNewQuestion,\r\n            displayTypeCreateFirst,\r\n            displayTypeCreateEnd,\r\n            render\r\n        }\r\n    },\r\n\r\n    create() {\r\n        this.$watch(\r\n            () => this.$route.query,\r\n            () => {\r\n                this.handleGetData()\r\n            }\r\n        )\r\n    },\r\n    mounted() {\r\n        this.handleGetData()\r\n    },\r\n    methods: {\r\n        refreshData() {\r\n            this.listQuestionFollow = new Set(),\r\n                this.questionsDelete = [],\r\n                this.sendData = {\r\n                    'questions': {\r\n                        'create': [],\r\n                        'update': [],\r\n                        'delete': [],\r\n                        'deleteResult': [], // Question fill and essay\r\n                        'updateResults': [] // Question fill and essay\r\n                    },\r\n                    'choices': {\r\n                        'create': [],\r\n                        'update': [],\r\n                        'delete': [],\r\n                    }\r\n                }\r\n        },\r\n        async handleGetData() {\r\n\r\n            var paramsQuestion = {\r\n                current_page: this.currentPage\r\n            };\r\n            try {\r\n                const responseQuestions = await getQuestionTestUpdate(this.idTest, paramsQuestion);\r\n\r\n                if (responseQuestions) {\r\n\r\n                    this.questions = responseQuestions.data?.questions\r\n                    let pages = responseQuestions.data?.pages\r\n                    this.startIndex = pages.startIndex\r\n                    this.currentPage = pages.currentPage\r\n                    this.totalPage = pages.totalPage\r\n                }\r\n                var paramsNumerical = {\r\n                    current_page: this.currentPage,\r\n                    type: 2\r\n                    // 1: Do 2: Update 3: History\r\n                };\r\n                const responseNumerical = await getNumericalQuestion(this.idTest, paramsNumerical)\r\n                if (responseNumerical) {\r\n                    this.numericalQuestion = responseNumerical.data\r\n\r\n                }\r\n            } finally {\r\n                this.isLoading = false\r\n            }\r\n        },\r\n        addlistQuestionFollow(id) {\r\n            // Add id question to list question update\r\n            console.log(id)\r\n            this.listQuestionFollow.add(id);\r\n        },\r\n        choiceAnswer(id) {\r\n            var answer = document.getElementById(\"question_\" + id);\r\n            answer.classList.add(\"answer-content-choice\");\r\n        },\r\n        clickCallback(pageNum) {\r\n            console.log(pageNum)\r\n            this.currentPage = pageNum\r\n            this.handleGetData()\r\n        },\r\n        async addPage() {\r\n            this.totalPage += 1\r\n            let data = {\r\n                'id': this.idTest,\r\n                'total_page': this.totalPage\r\n            }\r\n            try {\r\n                await updateTest(data);\r\n                this.clickCallback(parseInt(this.currentPage) + 1)\r\n            } catch (error) {\r\n                console.log(error)\r\n            } finally {\r\n                this.refreshData()\r\n            }\r\n\r\n        },\r\n        Next(pageNum) {\r\n            this.currentPage = pageNum\r\n            this.handleGetData()\r\n        },\r\n        Prev(pageNum) {\r\n\r\n            this.currentPage = pageNum\r\n            this.handleGetData()\r\n        },\r\n        displayCreateQuestionTypeFirst() {\r\n            this.displayTypeCreateFirst = !this.displayTypeCreateFirst\r\n        },\r\n        displayCreateQuestionTypeEnd() {\r\n            this.displayTypeCreateEnd = !this.displayTypeCreateEnd\r\n        },\r\n        createQuestion(type) {\r\n            let newQuestion = {\r\n            }\r\n            newQuestion.question = { 'question_id': 'new_' + this.indexNewQuestion, 'page': this.currentPage, \"type\": type, 'index': this.questions.length, 'result_id': \"\", 'contentResult': \"\", 'scope': 1, 'dependence_id': this.idTest }\r\n            if (type == 1 || type == 3) {\r\n                newQuestion.question.result_id = \"new\"\r\n            }\r\n            this.indexNewQuestion++\r\n            newQuestion.choices = []\r\n            this.questions.push(newQuestion)\r\n            let item = { 'id': newQuestion.question.question_id, 'page': this.currentPage, 'index': this.questions.length, 'type': 0 }\r\n            this.numericalQuestion.data.splice(this.startIndex + this.questions.length - 2, 0, item);\r\n            setTimeout(() => {\r\n                let question = document.getElementById('question_' + newQuestion.question.question_id);\r\n                this.displayTypeCreateFirst = false\r\n                this.displayTypeCreateEnd = false\r\n                question.scrollIntoView();\r\n            }, 500)\r\n        },\r\n\r\n        deleteQuestion(deleteQuestion) {\r\n\r\n            // this.questions\r\n            this.render = false\r\n            this.questions.splice(deleteQuestion.index - this.startIndex, 1)\r\n            this.numericalQuestion.data.splice(deleteQuestion.index, 1)\r\n            // console.log(\"Delete \" + ('' + deleteQuestion.id).includes('new_'))\r\n            let q = this.$refs['question_' + deleteQuestion.id][0]\r\n            // console.log(\"Ref\")\r\n            // console.log(q)\r\n            if (deleteQuestion.result != undefined) {\r\n                this.sendData.deleteResults.push(deleteQuestion.result)\r\n            }\r\n            if (('' + deleteQuestion.id).includes('new_')) {\r\n                if (this.questionsCreate.get(deleteQuestion.id) !== undefined) {\r\n                    this.questionsCreate.delete(deleteQuestion.id)\r\n                }\r\n            } else {\r\n\r\n                this.sendData.choices.delete = [...Array.from(q.chooseDelete)]\r\n                this.questionsDelete.push(deleteQuestion.id)\r\n            }\r\n            this.$nextTick(() => {\r\n                this.render = true\r\n            })\r\n        },\r\n        moveQuestion(page, id) {\r\n\r\n            if (page == this.currentPage) {\r\n                this.moveTo = id;\r\n                let question = document.getElementById(id);\r\n                question.scrollIntoView();\r\n            } else {\r\n                this.currentPage = page;\r\n                this.moveTo = id;\r\n                this.handleGetData();\r\n                setTimeout(() => {\r\n                    let question = document.getElementById(id);\r\n                    question.scrollIntoView();\r\n                }, 1000)\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.page {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n}\r\n\r\n.menu-create {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.menu-create-end {\r\n    display: flex;\r\n}\r\n\r\n.pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.margin-bottom10px {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.choice-type-create {\r\n    display: flex;\r\n    flex-direction: column;\r\n    cursor: pointer;\r\n}\r\n\r\n.create-button-type {\r\n    margin-left: 2px;\r\n    margin-top: 2px;\r\n    padding: 2px 4px;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.create-button-first {\r\n    margin-left: 2px;\r\n    margin-top: 2px;\r\n    height: 35px;\r\n    box-shadow: 0 8px #999;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.create-button-first:active {\r\n    box-shadow: 0 2px #666;\r\n    transform: translateY(4px);\r\n}\r\n\r\n.update-create-question-button {\r\n    margin-left: 5px;\r\n    margin-top: 2px;\r\n    height: 45px;\r\n    padding: 5px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    box-shadow: 0 8px #999;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.update-create-question-button:active {\r\n    box-shadow: 0 2px #666;\r\n    transform: translateY(4px);\r\n}\r\n\r\n.info-list-question {\r\n    width: 78%;\r\n    margin-top: 3px;\r\n    margin-right: 2px;\r\n    position: absolute;\r\n    right: 0;\r\n}\r\n\r\n.end-action {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n@import \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\";\r\n</style>"]},"metadata":{},"sourceType":"module"}