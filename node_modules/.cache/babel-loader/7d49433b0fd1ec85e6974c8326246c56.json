{"ast":null,"code":"import router from '@/router';\nimport { getExams } from '@/services/test';\nimport { ref } from 'vue';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: \"ListExamComponent\",\n\n  setup() {\n    const idTest = parseInt(useRoute().params.idTest);\n    const filter = ref({\n      status: 0\n    });\n    const pressAll = ref(true);\n    const pressStatistical = ref(false);\n    const pressMarked = ref(false);\n    const pressNotCompleteMarked = ref(false);\n    const styleObject = ref({\n      \"box-shadow\": \"0 5px #666\",\n      \"transform\": \"translateY(4px)\"\n    });\n    return {\n      idTest,\n      filter,\n      styleObject,\n      pressAll,\n      pressStatistical,\n      pressMarked,\n      pressNotCompleteMarked\n    };\n  },\n\n  data() {\n    return {\n      exams: []\n    };\n  },\n\n  mounted() {\n    this.handleGetData();\n  },\n\n  methods: {\n    mark() {\n      router.push({\n        name: 'markExam',\n        params: {\n          idExam: 1\n        }\n      });\n    },\n\n    refreshButton() {\n      this.pressAll = false, this.pressMarked = false, this.pressNotCompleteMarked = false, this.pressStatistical = false;\n    },\n\n    filterStatus(status) {\n      this.refreshButton();\n\n      if (status == 0) {\n        this.pressAll = true;\n      }\n\n      if (status == 1) {\n        this.pressMarked = true;\n      }\n\n      if (status == 2) {\n        this.pressNotCompleteMarked = true;\n      }\n\n      this.filter.status = status;\n    },\n\n    statistical() {\n      this.refreshButton();\n      this.pressStatistical = true;\n    },\n\n    async handleGetData() {\n      const response = await getExams(this.idTest, this.filter);\n      this.exams = response.data;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6DA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,eAAe;EACXC,IAAI,EAAE,mBADK;;EAEXC,KAAK,GAAG;IACJ,MAAMC,MAAK,GAAIC,QAAQ,CAACJ,QAAQ,GAAGK,MAAX,CAAkBF,MAAnB,CAAvB;IACA,MAAMG,MAAK,GAAIP,GAAG,CAAC;MACfQ,MAAM,EAAE;IADO,CAAD,CAAlB;IAGA,MAAMC,QAAO,GAAIT,GAAG,CAAC,IAAD,CAApB;IACA,MAAMU,gBAAe,GAAIV,GAAG,CAAC,KAAD,CAA5B;IACA,MAAMW,WAAU,GAAIX,GAAG,CAAC,KAAD,CAAvB;IACA,MAAMY,sBAAqB,GAAIZ,GAAG,CAAC,KAAD,CAAlC;IACA,MAAMa,WAAU,GAAIb,GAAG,CAAC;MACpB,cAAc,YADM;MAEpB,aAAa;IAFO,CAAD,CAAvB;IAIA,OAAO;MACHI,MADG;MACKG,MADL;MACaM,WADb;MAC0BJ,QAD1B;MACoCC,gBADpC;MACsDC,WADtD;MACmEC;IADnE,CAAP;EAGH,CAlBU;;EAmBXE,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE;IADJ,CAAP;EAGH,CAvBU;;EAwBXC,OAAO,GAAG;IACN,KAAKC,aAAL;EACH,CA1BU;;EA2BXC,OAAO,EAAE;IACLC,IAAI,GAAG;MACHrB,MAAM,CAACsB,IAAP,CAAY;QAAElB,IAAI,EAAE,UAAR;QAAoBI,MAAM,EAAE;UAAEe,MAAM,EAAE;QAAV;MAA5B,CAAZ;IACH,CAHI;;IAILC,aAAa,GAAG;MACZ,KAAKb,QAAL,GAAgB,KAAhB,EACI,KAAKE,WAAL,GAAmB,KADvB,EAEI,KAAKC,sBAAL,GAA8B,KAFlC,EAGI,KAAKF,gBAAL,GAAwB,KAH5B;IAIH,CATI;;IAULa,YAAY,CAACf,MAAD,EAAS;MACjB,KAAKc,aAAL;;MACA,IAAId,MAAK,IAAK,CAAd,EAAiB;QACb,KAAKC,QAAL,GAAgB,IAAhB;MACJ;;MACA,IAAID,MAAK,IAAK,CAAd,EAAiB;QACb,KAAKG,WAAL,GAAmB,IAAnB;MACJ;;MACA,IAAIH,MAAK,IAAK,CAAd,EAAiB;QACb,KAAKI,sBAAL,GAA8B,IAA9B;MACJ;;MACA,KAAKL,MAAL,CAAYC,MAAZ,GAAqBA,MAArB;IACH,CAtBI;;IAuBLgB,WAAW,GAAG;MACV,KAAKF,aAAL;MACA,KAAKZ,gBAAL,GAAwB,IAAxB;IACH,CA1BI;;IA2BL,MAAMO,aAAN,GAAsB;MAClB,MAAMQ,QAAO,GAAI,MAAM1B,QAAQ,CAAC,KAAKK,MAAN,EAAc,KAAKG,MAAnB,CAA/B;MACA,KAAKQ,KAAL,GAAaU,QAAQ,CAACX,IAAtB;IACJ;;EA9BK;AA3BE,CAAf","names":["router","getExams","ref","useRoute","name","setup","idTest","parseInt","params","filter","status","pressAll","pressStatistical","pressMarked","pressNotCompleteMarked","styleObject","data","exams","mounted","handleGetData","methods","mark","push","idExam","refreshButton","filterStatus","statistical","response"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Test\\ListExamComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-list-exam\">\r\n        <div class=\"header-list-exams\">\r\n            <h1>\r\n                Danh sách bài thi\r\n            </h1>\r\n            <div class=\"mark-type-filter\">\r\n                <button class=\"status-mark green\" :style=\"pressNotCompleteMarked ? styleObject : ''\"\r\n                    @click=\"filterStatus(2)\">\r\n                    Chưa chấm\r\n                </button>\r\n                <button class=\"status-mark blue\" :style=\"pressMarked ? styleObject : ''\" @click=\"filterStatus(1)\">\r\n                    Đã chấm\r\n                </button>\r\n                <button class=\"status-mark\" :style=\"pressAll ? styleObject : ''\" @click=\"filterStatus(0)\">\r\n                    Tất cả\r\n                </button>\r\n                <button class=\"status-mark\" :style=\"pressStatistical ? styleObject : ''\" @click=\"statistical()\">\r\n                    Thống kê\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-table\">\r\n\r\n            <div class=\"table\">\r\n                <div class=\"table-header\">\r\n                    <div class=\"header__item\"><a id=\"name\" class=\"filter__link\" href=\"#\">Mã bài thi</a></div>\r\n                    <div class=\"header__item\"><a id=\"wins\" class=\"filter__link filter__link--number\" href=\"#\">Họ và\r\n                            tên</a>\r\n                    </div>\r\n                    <div class=\"header__item\"><a id=\"draws\" class=\"filter__link filter__link--number\" href=\"#\">Thời gian\r\n                            nộp bài</a>\r\n                    </div>\r\n                    <div class=\"header__item\"><a id=\"losses\" class=\"filter__link filter__link--number\" href=\"#\">Điểm</a>\r\n                    </div>\r\n                    <div class=\"header__item\"><a id=\"total\" class=\"filter__link filter__link--number\" href=\"#\">Hành\r\n                            động</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"table-content\" v-for=\"exam in exams\" :key=\"exam.id\">\r\n                    <div class=\"table-row\">\r\n                        <div class=\"table-data\">#{{ exam.id }}</div>\r\n                        <div class=\"table-data\">{{ exam.user_name }}</div>\r\n                        <div class=\"table-data\"></div>\r\n                        <div class=\"table-data\">{{ exam.point }}</div>\r\n                        <div class=\"table-data\">\r\n                            <button class=\"tool-button-mark green\" @click=\"mark\" v-if=\"!exam.is_marked\">\r\n                                Chấm\r\n                            </button>\r\n                            <button class=\"tool-button-mark blue\" @click=\"remark\" v-if=\"exam.is_marked\">\r\n                                Chấm lại\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport router from '@/router';\r\nimport { getExams } from '@/services/test';\r\nimport { ref } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n    name: \"ListExamComponent\",\r\n    setup() {\r\n        const idTest = parseInt(useRoute().params.idTest)\r\n        const filter = ref({\r\n            status: 0\r\n        })\r\n        const pressAll = ref(true)\r\n        const pressStatistical = ref(false)\r\n        const pressMarked = ref(false)\r\n        const pressNotCompleteMarked = ref(false)\r\n        const styleObject = ref({\r\n            \"box-shadow\": \"0 5px #666\",\r\n            \"transform\": \"translateY(4px)\"\r\n        })\r\n        return {\r\n            idTest, filter, styleObject, pressAll, pressStatistical, pressMarked, pressNotCompleteMarked\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            exams: []\r\n        }\r\n    },\r\n    mounted() {\r\n        this.handleGetData()\r\n    },\r\n    methods: {\r\n        mark() {\r\n            router.push({ name: 'markExam', params: { idExam: 1 } })\r\n        },\r\n        refreshButton() {\r\n            this.pressAll = false,\r\n                this.pressMarked = false,\r\n                this.pressNotCompleteMarked = false,\r\n                this.pressStatistical = false\r\n        },\r\n        filterStatus(status) {\r\n            this.refreshButton()\r\n            if (status == 0) {\r\n                this.pressAll = true\r\n            }\r\n            if (status == 1) {\r\n                this.pressMarked = true\r\n            }\r\n            if (status == 2) {\r\n                this.pressNotCompleteMarked = true\r\n            }\r\n            this.filter.status = status\r\n        },\r\n        statistical() {\r\n            this.refreshButton()\r\n            this.pressStatistical = true\r\n        },\r\n        async handleGetData() {\r\n            const response = await getExams(this.idTest, this.filter)\r\n            this.exams = response.data\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.container-list-exam {\r\n    margin: 0 15%;\r\n}\r\n\r\n.mark-type-filter {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.status-mark {\r\n    margin-left: 2px;\r\n    margin-top: 2px;\r\n    height: 35px;\r\n    box-shadow: 0 8px #999;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.status-mark:active {\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n}\r\n\r\n@import url(\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700\");\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    padding: 24px;\r\n    font-family: \"Source Sans Pro\", sans-serif;\r\n    margin: 0;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    margin: 0;\r\n}\r\n\r\n.header-list-exams {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.container-table {\r\n    margin-top: 20px;\r\n    /* margin-right: auto;\r\n    margin-left: auto; */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    min-height: 100vh;\r\n}\r\n\r\n.table {\r\n    width: 100%;\r\n    border: 1px solid #eeeeee;\r\n    max-height: 600px;\r\n    overflow-y: scroll;\r\n}\r\n\r\n.table-header {\r\n    display: flex;\r\n    width: 100%;\r\n    background: #000;\r\n    padding: 18px 0;\r\n    position: sticky;\r\n    top: 0px;\r\n}\r\n\r\n.table-row {\r\n    display: flex;\r\n    width: 100%;\r\n    padding: 18px 0;\r\n    border-bottom: #000;\r\n}\r\n\r\n\r\n.tool-button-mark {\r\n    margin-left: 2px;\r\n    margin-top: 2px;\r\n    height: 35px;\r\n    box-shadow: 0 8px #999;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.tool-button-mark:active {\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n}\r\n\r\n.blue {\r\n    background-color: blue;\r\n}\r\n\r\n.green {\r\n    background-color: green;\r\n}\r\n\r\n.table-row:nth-of-type(odd) {\r\n    background: #eeeeee;\r\n}\r\n\r\n.table-data,\r\n.header__item {\r\n    flex: 1 1 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.header__item {\r\n    text-transform: uppercase;\r\n}\r\n\r\n.filter__link {\r\n    color: white;\r\n    text-decoration: none;\r\n    position: relative;\r\n    display: inline-block;\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n}\r\n\r\n.filter__link::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    right: -18px;\r\n    color: white;\r\n    font-size: 12px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n\r\n.filter__link.desc::after {\r\n    content: \"(desc)\";\r\n}\r\n\r\n.filter__link.asc::after {\r\n    content: \"(asc)\";\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}