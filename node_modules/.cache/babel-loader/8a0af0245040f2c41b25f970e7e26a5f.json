{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, Transition as _Transition, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"question-not-note\"\n};\nconst _hoisted_2 = {\n  class: \"action-question\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = {\n  key: 3\n};\nconst _hoisted_7 = {\n  key: 4\n};\nconst _hoisted_8 = {\n  key: 7,\n  class: \"action-question\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"note\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-circle-exclamation brand-color\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = {\n  key: 0,\n  class: \"note-teacher-student\"\n};\nconst _hoisted_12 = {\n  class: \"note-content\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"title-note\"\n}, \"Ghi chú giáo viên\", -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = {\n  class: \"note-content\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"title-note\"\n}, \"Ghi chú học sinh\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMultiselect = _resolveComponent(\"VueMultiselect\");\n\n  const _component_LatexComponent = _resolveComponent(\"LatexComponent\");\n\n  const _component_ChooseComponent = _resolveComponent(\"ChooseComponent\");\n\n  const _component_ConfirmComponent = _resolveComponent(\"ConfirmComponent\");\n\n  const _component_CommentQuestionComponent = _resolveComponent(\"CommentQuestionComponent\");\n\n  const _component_NoteComponent = _resolveComponent(\"NoteComponent\");\n\n  return $setup.render ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass($setup.styleQuestion)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$setup.canUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"tool-button-test\",\n    style: _normalizeStyle($setup.pressUpdate ? $setup.styleObject : null),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.publicQuestion && $options.publicQuestion(...args))\n  }, \" Diễn đàn \", 4\n  /* STYLE */\n  )) : _createCommentVNode(\"v-if\", true), $setup.canUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"tool-button-test\",\n    style: _normalizeStyle($setup.pressUpdate ? $setup.styleObject : null),\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.updateQuestion && $options.updateQuestion(...args))\n  }, \" Sửa \", 4\n  /* STYLE */\n  )) : _createCommentVNode(\"v-if\", true), $setup.canUpdate ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"tool-button-test\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.deleteQuestion && $options.deleteQuestion(...args))\n  }, \" Xóa \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [$props.type != 0 ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_3, \"Câu \" + _toDisplayString($props.index) + \": \", 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _createVNode(_component_VueMultiselect, {\n    modelValue: _ctx.value,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.value = $event),\n    options: _ctx.options,\n    multiple: true,\n    \"close-on-select\": false,\n    \"clear-on-select\": false,\n    \"preserve-search\": true,\n    placeholder: \"Pick some\",\n    label: \"name\",\n    \"track-by\": \"name\",\n    \"preselect-first\": true\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" <template slot=\\\"selection\\\" slot-scope=\\\"{ values, search, isOpen }\\\"><span class=\\\"multiselect__single\\\"\\r\\n                    v-if=\\\"values.length &amp;&amp; !isOpen\\\">{{ values.length }} options selected</span></template> \")]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"options\"])]), $props.type == 0 ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_4, \"Câu hỏi: \")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_LatexComponent, {\n    content: $setup.infoQuestion.question.content,\n    isUpdate: $setup.pressUpdate,\n    onUpdate: $options.updateContentQuestion,\n    id: 'question_' + $setup.infoQuestion.question.question_id\n  }, null, 8\n  /* PROPS */\n  , [\"content\", \"isUpdate\", \"onUpdate\", \"id\"]), _createCommentVNode(\" <CommentQuestionComponent :answers=\\\"question.answers\\\" /> \"), ($setup.infoQuestion.question.type == 1 || $setup.infoQuestion.question.type == 3) && ($props.type == 3 || $props.type == 2) ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_5, \" Đáp án đúng:\")) : _createCommentVNode(\"v-if\", true), ($setup.infoQuestion.question.type == 1 || $setup.infoQuestion.question.type == 3) && ($props.type == 3 || $props.type == 2) ? (_openBlock(), _createBlock(_component_LatexComponent, {\n    key: 2,\n    isUpdate: $setup.canEssay,\n    onUpdate: $options.answerQuestion,\n    content: $setup.infoQuestion.question.contentResult != null ? $setup.infoQuestion.question.contentResult : '',\n    id: $setup.infoQuestion.question.question_id + '_result_' + $setup.infoQuestion.question.result_id,\n    class: \"border-green\"\n  }, null, 8\n  /* PROPS */\n  , [\"isUpdate\", \"onUpdate\", \"content\", \"id\"])) : _createCommentVNode(\"v-if\", true), $props.type != 2 && $props.type != 0 ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_6, \"Đáp án của bạn là:\")) : _createCommentVNode(\"v-if\", true), $setup.canUpdate && $props.type != 2 && $props.type != 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Bạn hãy nhập đáp án của câu hỏi\")) : _createCommentVNode(\"v-if\", true), ($setup.infoQuestion.question.type == 1 || $setup.infoQuestion.question.type == 3) && ($props.type == 1 || $props.type == 3) ? (_openBlock(), _createBlock(_component_LatexComponent, {\n    key: 5,\n    isUpdate: $setup.canEssay,\n    onUpdate: $options.answerQuestion,\n    content: $setup.infoQuestion.question.answer != null ? $setup.infoQuestion.question.answer : '',\n    id: $setup.infoQuestion.question.question_id + '_answer'\n  }, null, 8\n  /* PROPS */\n  , [\"isUpdate\", \"onUpdate\", \"content\", \"id\"])) : _createCommentVNode(\"v-if\", true), $setup.infoQuestion.question.type == 2 ? (_openBlock(), _createBlock(_component_ChooseComponent, {\n    key: 6,\n    ref: 'chooses_' + $setup.infoQuestion.question.question_id,\n    choices: $setup.infoQuestion.choices,\n    isUpdate: $setup.pressUpdate,\n    doTest: \"true\",\n    onUpdate: $options.updateChoose,\n    onCreate: $options.createChoose,\n    onDelete: $options.deleteAnswer,\n    onChooseAnswer: $options.answerQuestion,\n    type: $props.type,\n    linkNavbar: 'page_' + $setup.infoQuestion.question.page + '_' + $props.index,\n    question: $setup.infoQuestion.question.question_id,\n    canChoose: $setup.canChoose\n  }, null, 8\n  /* PROPS */\n  , [\"choices\", \"isUpdate\", \"onUpdate\", \"onCreate\", \"onDelete\", \"onChooseAnswer\", \"type\", \"linkNavbar\", \"question\", \"canChoose\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <LatexComponent v-if=\\\"(infoQuestion.question.type == 1)\\\" :isUpdate=\\\"isUpdateEssay\\\"\\r\\n            @update=\\\"data => updateResultEssay(infoQuestion.question.result_id, data)\\\" /> \"), $setup.pressUpdate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    class: \"tool-button-test\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.back && $options.back(...args))\n  }, \" Trở lại \"), _createElementVNode(\"button\", {\n    class: \"tool-button-test margin-bottom6px\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.confirmUpdate && $options.confirmUpdate(...args))\n  }, \" Lưu \")])) : _createCommentVNode(\"v-if\", true), $setup.confirmModal ? (_openBlock(), _createBlock(_component_ConfirmComponent, {\n    key: 8,\n    content: \"Bạn có chắc chắn muốn xóa?\",\n    onClose: _cache[6] || (_cache[6] = $event => $setup.confirmModal = false),\n    onConfirm: $options.confirmDelete\n  }, null, 8\n  /* PROPS */\n  , [\"onConfirm\"])) : _createCommentVNode(\"v-if\", true), this.infoQuestion.question.scope == 0 ? (_openBlock(), _createBlock(_component_CommentQuestionComponent, {\n    key: 9,\n    solutions: $setup.infoQuestion.solutions,\n    question: {\n      'id': $setup.infoQuestion.question.question_id,\n      'content': $setup.infoQuestion.question.content\n    }\n  }, null, 8\n  /* PROPS */\n  , [\"solutions\", \"question\"])) : _createCommentVNode(\"v-if\", true)]), $props.type == 2 || $props.type == 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", {\n    class: \"note-icon\",\n    onClick: _cache[7] || (_cache[7] = $event => $setup.displayNote = !$setup.displayNote)\n  }, [_hoisted_10, _createCommentVNode(\" <i class=\\\"fa-solid fa-caret-left\\\" v-if=\\\"!displayNote\\\"></i>\\r\\n                <i class=\\\"fa-solid fa-caret-right\\\" v-if=\\\"displayNote\\\"></i> \")]), _createVNode(_Transition, {\n    name: \"slide-fade\"\n  }, {\n    default: _withCtx(() => [$setup.displayNote ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_NoteComponent, null, {\n      note: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createVNode(_component_LatexComponent, {\n        isUpdate: $props.isOwner ? $props.isOwner : false,\n        onUpdate: _ctx.updateNoteQuestion\n      }, null, 8\n      /* PROPS */\n      , [\"isUpdate\", \"onUpdate\"])])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_NoteComponent, null, {\n      notes: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _createVNode(_component_LatexComponent, {\n        isUpdate: $props.isOwner ? !$props.isOwner : false,\n        onUpdate: _ctx.noteStudent\n      }, null, 8\n      /* PROPS */\n      , [\"isUpdate\", \"onUpdate\"])])]),\n      _: 1\n      /* STABLE */\n\n    })])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1\n    /* STABLE */\n\n  })])) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","$setup","_createElementBlock","style","onClick","$options","$props","_hoisted_3","_toDisplayString","_createVNode","_component_VueMultiselect","_ctx","$event","options","multiple","placeholder","label","_createCommentVNode","_hoisted_4","_component_LatexComponent","content","question","isUpdate","onUpdate","id","question_id","type","_hoisted_5","_createBlock","contentResult","result_id","_hoisted_6","_hoisted_7","answer","_component_ChooseComponent","ref","choices","doTest","onCreate","onDelete","onChooseAnswer","linkNavbar","page","canChoose","_component_ConfirmComponent","onClose","onConfirm","infoQuestion","scope","_component_CommentQuestionComponent","solutions","_hoisted_10","_Transition","name","_component_NoteComponent","note","_hoisted_13","notes","_hoisted_15"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Question\\QuestionComponent.vue"],"sourcesContent":["<template>\r\n    <div :class=\"styleQuestion\" v-if=\"render\">\r\n        <div class=\"question-not-note\">\r\n            <div class=\"action-question\">\r\n                <button class=\"tool-button-test\" :style=\"pressUpdate ? styleObject : null\" @click=\"publicQuestion\"\r\n                    v-if=\"canUpdate\">\r\n                    Diễn đàn\r\n                </button>\r\n                <button class=\"tool-button-test\" :style=\"pressUpdate ? styleObject : null\" @click=\"updateQuestion\"\r\n                    v-if=\"canUpdate\">\r\n                    Sửa\r\n                </button>\r\n                <button class=\"tool-button-test\" @click=\"deleteQuestion\" v-if=\"canUpdate\">\r\n                    Xóa\r\n                </button>\r\n\r\n            </div>\r\n            <div>\r\n                <h3 v-if=\"type != 0\">Câu {{ index }}: </h3>\r\n                <VueMultiselect v-model=\"value\" :options=\"options\" :multiple=\"true\" :close-on-select=\"false\"\r\n                    :clear-on-select=\"false\" :preserve-search=\"true\" placeholder=\"Pick some\" label=\"name\"\r\n                    track-by=\"name\" :preselect-first=\"true\">\r\n                    <!-- <template slot=\"selection\" slot-scope=\"{ values, search, isOpen }\"><span class=\"multiselect__single\"\r\n                    v-if=\"values.length &amp;&amp; !isOpen\">{{ values.length }} options selected</span></template> -->\r\n                </VueMultiselect>\r\n            </div>\r\n            <h3 v-if=\"type == 0\">Câu hỏi: </h3>\r\n            <LatexComponent :content=\"infoQuestion.question.content\" :isUpdate=\"pressUpdate\"\r\n                @update=\"updateContentQuestion\" :id=\"'question_' + infoQuestion.question.question_id\" />\r\n            <!-- <CommentQuestionComponent :answers=\"question.answers\" /> -->\r\n            <h3 v-if=\"(infoQuestion.question.type == 1 || infoQuestion.question.type == 3) && (type == 3 || type == 2)\">\r\n                Đáp\r\n                án đúng:</h3>\r\n            <LatexComponent :isUpdate=\"canEssay\" @update=\"answerQuestion\"\r\n                :content=\"infoQuestion.question.contentResult != null ? infoQuestion.question.contentResult : ''\"\r\n                :id=\"infoQuestion.question.question_id + '_result_' + infoQuestion.question.result_id\"\r\n                v-if=\"(infoQuestion.question.type == 1 || infoQuestion.question.type == 3) && (type == 3 || type == 2)\"\r\n                class=\"border-green\" />\r\n            <h3 v-if=\"type != 2 && type != 0\">Đáp án của bạn là:</h3>\r\n            <span v-if=\"canUpdate && type != 2 && type != 0\">Bạn hãy nhập đáp án của câu hỏi</span>\r\n            <LatexComponent :isUpdate=\"canEssay\" @update=\"answerQuestion\"\r\n                :content=\"infoQuestion.question.answer != null ? infoQuestion.question.answer : ''\"\r\n                :id=\"infoQuestion.question.question_id + '_answer'\"\r\n                v-if=\"(infoQuestion.question.type == 1 || infoQuestion.question.type == 3) && (type == 1 || type == 3)\" />\r\n            <ChooseComponent :ref=\"'chooses_' + infoQuestion.question.question_id\" :choices=\"infoQuestion.choices\"\r\n                :isUpdate=\"pressUpdate\" doTest=\"true\" @update=\"updateChoose\" @create=\"createChoose\"\r\n                @delete=\"deleteAnswer\" @chooseAnswer=\"answerQuestion\" v-if=\"(infoQuestion.question.type == 2)\"\r\n                :type=\"type\" :linkNavbar=\"'page_' + infoQuestion.question.page + '_' + index\"\r\n                :question=\"infoQuestion.question.question_id\" :canChoose=\"canChoose\" />\r\n            <!-- <LatexComponent v-if=\"(infoQuestion.question.type == 1)\" :isUpdate=\"isUpdateEssay\"\r\n            @update=\"data => updateResultEssay(infoQuestion.question.result_id, data)\" /> -->\r\n\r\n            <div class=\"action-question\" v-if=\"pressUpdate\">\r\n                <button class=\"tool-button-test\" @click=\"back\">\r\n                    Trở lại\r\n                </button>\r\n                <button class=\"tool-button-test margin-bottom6px\" @click=\"confirmUpdate\">\r\n                    Lưu\r\n                </button>\r\n            </div>\r\n            <ConfirmComponent v-if=\"confirmModal\" content=\"Bạn có chắc chắn muốn xóa?\" @close=\"confirmModal = false\"\r\n                @confirm=\"confirmDelete\" />\r\n            <CommentQuestionComponent v-if=\"this.infoQuestion.question.scope == 0\" :solutions=\"infoQuestion.solutions\"\r\n                :question=\"{ 'id': infoQuestion.question.question_id, 'content': infoQuestion.question.content }\" />\r\n        </div>\r\n        <div class=\"note\" v-if=\"type == 2 || type == 3\">\r\n            <div class=\"note-icon\" @click=\"displayNote = !displayNote\">\r\n                <i class=\"fa-solid fa-circle-exclamation brand-color\"></i>\r\n                <!-- <i class=\"fa-solid fa-caret-left\" v-if=\"!displayNote\"></i>\r\n                <i class=\"fa-solid fa-caret-right\" v-if=\"displayNote\"></i> -->\r\n            </div>\r\n            <Transition name=\"slide-fade\">\r\n                <div class=\"note-teacher-student\" v-if=\"displayNote\">\r\n                    <NoteComponent>\r\n                        <template v-slot:note>\r\n                            <div class=\"note-content\">\r\n                                <h4 class=\"title-note\">Ghi chú giáo viên</h4>\r\n                                <LatexComponent :isUpdate=\"isOwner ? isOwner : false\" @update=\"updateNoteQuestion\" />\r\n                            </div>\r\n                        </template>\r\n                    </NoteComponent>\r\n                    <NoteComponent>\r\n                        <template v-slot:notes>\r\n                            <div class=\"note-content\">\r\n                                <h4 class=\"title-note\">Ghi chú học sinh</h4>\r\n                                <LatexComponent :isUpdate=\"isOwner ? !isOwner : false\" @update=\"noteStudent\" />\r\n                            </div>\r\n                        </template>\r\n                    </NoteComponent>\r\n\r\n                </div>\r\n            </Transition>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport ChooseComponent from \"./ChooseComponent.vue\";\r\nimport CommentQuestionComponent from \"./CommentQuestionComponent.vue\";\r\nimport LatexComponent from \"../LatexComponent.vue\";\r\nimport ConfirmComponent from '../common/ConfirmComponent.vue'\r\nimport { ref } from '@vue/reactivity'\r\nimport { handleQuestionTest } from '../../services/question'\r\nimport { Transition } from \"vue\";\r\nimport NoteComponent from \"../common/NoteComponent.vue\";\r\nimport VueMultiselect from 'vue-multiselect'\r\nexport default {\r\n    name: \"QuestionComponent\",\r\n    components: {\r\n        ChooseComponent,\r\n        LatexComponent,\r\n        ConfirmComponent,\r\n        CommentQuestionComponent,\r\n        Transition,\r\n        NoteComponent,\r\n        VueMultiselect\r\n    },\r\n    props: ['question', 'index', 'isNormal', 'type', 'isOwner'],\r\n    setup() {\r\n        const render = ref(true)\r\n        const confirmModal = ref(false)\r\n        const infoQuestion = ref([])\r\n        const pressUpdate = ref(false)\r\n        const canEssay = ref(false)\r\n        const canUpdate = ref(false)\r\n        const handleQuestion = ref({ 'question': {}, 'answer': {} })\r\n        const writeResult = ref({})\r\n        const result = ref(-1)\r\n        const essayAnswer = ref({})\r\n        const answerUpdate = ref(new Map())\r\n        const answerDelete = ref(new Set())\r\n        const answerCreate = ref(new Map())\r\n        const page = ref(1)\r\n        const canChoose = ref(false)\r\n        const answer = ref(-1)\r\n        const displayNote = ref(false)\r\n        const styleObject = ref({\r\n            \"box-shadow\": \"0 5px #666\",\r\n            \"transform\": \"translateY(4px)\"\r\n        })\r\n        const styleQuestion = ref(\"info-question\")\r\n        const itemsSubject = ref({ 'value': [], 'options': [] })\r\n        return {\r\n            render, result, writeResult, handleQuestion, essayAnswer, answerUpdate, answerDelete, answerCreate, styleQuestion, confirmModal, pressUpdate, page, styleObject, infoQuestion, canEssay, canUpdate, canChoose, answer, displayNote, itemsSubject\r\n        }\r\n    },\r\n\r\n    created() {\r\n        // Câu hỏi thường\r\n        if (this.type == 0) {\r\n            this.canEssay = this.isUpdateEssay;\r\n            this.canChoose = false;\r\n\r\n        }\r\n        // Câu hỏi thi\r\n        if (this.type == 1) {\r\n            this.canUpdate = false\r\n            this.canEssay = true\r\n            this.canChoose = true;\r\n        }\r\n        // Câu hỏi cập nhật\r\n        if (this.type == 2) {\r\n            this.canUpdate = true\r\n            this.canEssay = true\r\n            this.canChoose = true;\r\n            this.itemsSubject = {\r\n                value: [],\r\n                options: [\r\n                    { name: 'Vue.js', language: 'JavaScript' },\r\n                    { name: 'Adonis', language: 'JavaScript' },\r\n                    { name: 'Rails', language: 'Ruby' },\r\n                    { name: 'Sinatra', language: 'Ruby' },\r\n                    { name: 'Laravel', language: 'PHP' },\r\n                    { name: 'Phoenix', language: 'Elixir' }\r\n                ]\r\n            }\r\n        }\r\n        // Câu hỏi lịch sử làm bài\r\n        if (this.type == 3) {\r\n            this.canEssay = false\r\n            this.canChoose = false\r\n        }\r\n\r\n        this.infoQuestion = JSON.parse(JSON.stringify(this.question));\r\n        this.handleQuestion.question = this.question.question\r\n        this.page = this.question.page\r\n    },\r\n    mounted() {\r\n\r\n        if (this.type == 1) {\r\n            if (this.question.question.type == 2) {\r\n                if (this.question.question?.answer != null) {\r\n                    let choose = document.getElementById(this.question.question.question_id + '_choose_' + this.question.question.answer)\r\n                    choose.click()\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type == 2) {\r\n            if (this.question.question.type == 2) {\r\n                if (this.question.question?.result_id != null && this.question.question?.result_id != \"\") {\r\n                    let choose = document.getElementById(this.question.question.question_id + '_choose_' + this.question.question.result_id)\r\n                    choose.click()\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type == 3) {\r\n            if (this.question.question?.result_id != null) {\r\n                if (this.question.question.type == 2) {\r\n                    if (this.question.question.answer != null) {\r\n                        console.log(\"OK\")\r\n                        if (this.question.question.result_id == this.question.question.answer) {\r\n                            let choose = document.getElementById(this.question.question.question_id + '_choose_' + this.infoQuestion.question.answer)\r\n                            choose.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                            let question = document.getElementById(\"question_\" + this.question.question.question_id)\r\n                            question.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                        } else {\r\n                            let chooseCorrect = document.getElementById(this.question.question.question_id + '_choose_' + this.infoQuestion.question.result_id)\r\n                            chooseCorrect.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                            let chooseFalse = document.getElementById(this.question.question.question_id + '_choose_' + this.infoQuestion.question.answer)\r\n                            chooseFalse.style.border = \"4px solid red\"\r\n\r\n                            let question = document.getElementById(\"question_\" + this.question.question.question_id)\r\n                            question.style.border = \"4px solid red\"\r\n                        }\r\n                    } else {\r\n                        let chooseCorrect = document.getElementById(this.question.question.question_id + '_choose_' + this.infoQuestion.question.result_id)\r\n                        chooseCorrect.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                    }\r\n                }\r\n                if (this.question.question.type == 1) {\r\n                    if (this.question.question.contentResult == this.question.question.answer) {\r\n                        let chooseCorrect = document.getElementById(this.question.question.question_id + '_result_' + this.infoQuestion.question.result_id)\r\n                        chooseCorrect.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                        let chooseAnswer = document.getElementById(this.question.question.question_id + '_answer')\r\n                        chooseAnswer.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                    } else {\r\n                        let chooseCorrect = document.getElementById(this.question.question.question_id + '_result_' + this.infoQuestion.question.result_id)\r\n                        chooseCorrect.style.border = \"4px solid rgb(16, 249, 4)\"\r\n                        let chooseFalse = document.getElementById(this.question.question.question_id + '_answer')\r\n                        chooseFalse.style.border = \"4px solid red\"\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        back() {\r\n            this.pressUpdate = false\r\n            this.canEssay = false\r\n            this.render = false\r\n            this.canChoose = false\r\n            this.handleQuestion = ref({})\r\n            this.writeResult = ref({})\r\n            this.essayAnswer = ref({})\r\n            this.answerUpdate = ref(new Map())\r\n            this.answerDelete = ref(new Set())\r\n            this.answerCreate = ref(new Map())\r\n            this.answer = ref(-1)\r\n            this.$nextTick(() => {\r\n                this.render = true\r\n            })\r\n        },\r\n        answerQuestion(answer) {\r\n            this.answer = answer\r\n        },\r\n\r\n        publicQuestion() {\r\n\r\n        },\r\n        updateQuestion() {\r\n            this.pressUpdate = true;\r\n            this.canEssay = true;\r\n            this.canChoose = true\r\n        },\r\n        updateContentQuestion(data) {\r\n            // this.questionUpdate.id = this.infoQuestion.question.question_id\r\n            this.handleQuestion.question.content = data\r\n            // this.questionUpdate.id = this.infoQuestion.question.question_id\r\n        },\r\n        updateChoose(choose) {\r\n            if (('' + choose.id).includes('new')) {\r\n                choose.question_id = this.infoQuestion.question.question_id\r\n                this.answerCreate.set(choose.id, choose)\r\n            } else {\r\n                choose.question_id = this.infoQuestion.question.question_id\r\n                this.answerUpdate.set(choose.id, choose)\r\n            }\r\n        },\r\n\r\n        createChoose(data) {\r\n            data.question_id = this.infoQuestion.question.question_id\r\n            this.answerCreate.set(data.id, data)\r\n        },\r\n        deleteAnswer(id) {\r\n            if (this.infoQuestion.question.type == 2) {\r\n                if (id == this.infoQuestion.question.result_id || this.infoQuestion.question.result_id == null) {\r\n                    this.answer = null\r\n                }\r\n            }\r\n            if (('' + id).includes('new')) {\r\n                // Xóa câu hỏi trắc nghiệm mới tạo\r\n                this.answerCreate.delete(id)\r\n            } else {\r\n                if (this.answerUpdate.get(id) != undefined) {\r\n                    this.answerUpdate.delete(id)\r\n                }\r\n                this.answerDelete.add(id)\r\n            }\r\n\r\n        },\r\n        deleteQuestion() {\r\n            this.pressUpdate = false;\r\n            this.confirmModal = true;\r\n        },\r\n        confirmDelete() {\r\n            const idQuestion = this.question.question.question_id\r\n            const deleteQuestion = {\r\n                'id': idQuestion,\r\n                'index': this.index,\r\n            }\r\n            if (this.infoQuestion.question.type == 2) {\r\n                this.infoQuestion.choices.forEach(choose => {\r\n                    this.deleteAnswer(choose.id)\r\n                });\r\n            } else {\r\n                this.deleteAnswer(this.infoQuestion.question.result_id)\r\n\r\n            }\r\n            this.$emit(\"delete\", deleteQuestion);\r\n            this.confirmModal = false;\r\n        },\r\n        async confirmUpdate() {\r\n            this.pressUpdate = false\r\n            this.canEssay = false\r\n            this.canChoose = false\r\n            if (this.infoQuestion.question.type == 2) {\r\n                this.handleQuestion.question.result_id = this.answer\r\n            } else {\r\n                this.handleQuestion.question.contentResult = this.answer\r\n                if (Number.isInteger(this.infoQuestion.question.result_id)) {\r\n                    let data = {\r\n                        question_id: this.infoQuestion.question.question_id,\r\n                        id: this.infoQuestion.question.result_id,\r\n                        content: this.answer\r\n                    }\r\n                    this.answerUpdate.set(this.infoQuestion.question.result_id, data)\r\n                } else {\r\n                    let data = {\r\n                        question_id: this.infoQuestion.question.question_id,\r\n                        id: this.infoQuestion.question.result_id,\r\n                        content: this.answer\r\n                    }\r\n                    this.answerCreate.set(this.infoQuestion.question.result_id, data)\r\n                }\r\n            }\r\n            this.handleQuestion.answer.create = Array.from(this.answerCreate.values())\r\n            this.handleQuestion.answer.update = Array.from(this.answerUpdate.values())\r\n            console.log(\"Update choose\")\r\n            console.log(this.handleQuestion.answer.update)\r\n            this.handleQuestion.answer.delete = Array.from(this.answerDelete.values())\r\n            console.log(\"Send Data\")\r\n            console.log(this.handleQuestion)\r\n            const response = await handleQuestionTest(this.handleQuestion)\r\n            this.infoQuestion = response.data\r\n            this.render = false\r\n            this.$nextTick(() => {\r\n                this.render = true\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.info-question {\r\n    background-color: #222;\r\n    color: white;\r\n    margin-top: 15px;\r\n    padding: 15px;\r\n    border-style: solid;\r\n    border-color: #666363;\r\n    display: flex;\r\n}\r\n\r\n.question-not-note {\r\n    flex: 1 1 70%;\r\n}\r\n\r\n.note-icon {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background-color: #545151;\r\n    margin-left: 2px;\r\n    margin-right: 2px;\r\n    border-start-start-radius: 60%;\r\n    border-end-start-radius: 60%;\r\n}\r\n\r\n.note {\r\n    display: flex;\r\n    margin-left: 2px;\r\n}\r\n\r\n.note-teacher-student {\r\n    width: 100%;\r\n    min-width: 300px;\r\n    flex: 1 1 30%;\r\n}\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Kalam&display=swap');\r\n\r\n.title-note {\r\n    font-family: 'Kalam', cursive;\r\n}\r\n\r\n.note-content {\r\n    width: 100%;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    overflow-y: scroll;\r\n}\r\n\r\n.slide-fade-enter-active {\r\n    transition: all 0.3s ease-out;\r\n}\r\n\r\n.slide-fade-leave-active {\r\n    transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);\r\n}\r\n\r\n.slide-fade-enter-from,\r\n.slide-fade-leave-to {\r\n    transform: translateX(20px);\r\n    opacity: 0;\r\n}\r\n\r\n.info-question-correct {\r\n    background-color: #222;\r\n    color: white;\r\n    margin-top: 15px;\r\n    padding: 15px;\r\n    border-style: solid;\r\n    border-color: #666363;\r\n}\r\n\r\n.action-question {\r\n    margin-top: 2px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.info-question-false {\r\n    background-color: #222;\r\n    color: white;\r\n    margin-top: 15px;\r\n    padding: 15px;\r\n    border-style: solid;\r\n    border-color: #666363;\r\n}\r\n\r\n.brand-color {\r\n    color: #ea4f4c;\r\n}\r\n\r\n.tool-button-test {\r\n    margin-left: 2px;\r\n    margin-top: 2px;\r\n    height: 35px;\r\n    box-shadow: 0 8px #999;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.tool-button-test:active {\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n}\r\n\r\n.margin-bottom6px {\r\n    margin-bottom: 6px;\r\n}\r\n\r\n.border-green {\r\n    border: 2px solid rgb(8, 196, 40);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}