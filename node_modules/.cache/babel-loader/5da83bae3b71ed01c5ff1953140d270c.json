{"ast":null,"code":"import router from '@/router';\nimport { createExam } from '@/services/exam';\nimport { ref } from 'vue';\nexport default {\n  name: \"TestComponent\",\n  props: ['test', 'type'],\n\n  setup() {\n    const displayDo = ref(false);\n    const displayUpdate = ref(false);\n    const displayDelete = ref(false);\n    const displayTry = ref(false);\n    const displayContinue = ref(false);\n    const displayHistory = ref(false);\n    const displayMark = ref(false);\n    return {\n      displayDo,\n      displayUpdate,\n      displayDelete,\n      displayTry,\n      displayContinue,\n      displayHistory,\n      displayMark\n    };\n  },\n\n  created() {\n    if (this.type == 0) {\n      this.displayDo = true;\n      this.displayHistory = true;\n      this.displayUpdate = true;\n      this.displayMark = true;\n    }\n\n    if (this.type == 1) {\n      this.displayHistory = true;\n      this.displayDo = true;\n      this.displayUpdate = true;\n      this.displayMark = true;\n    }\n\n    if (this.type == 2) {\n      this.displayContinue = true;\n      this.displayHistory = true;\n      this.displayUpdate = true;\n      this.displayMark = true;\n    }\n  },\n\n  methods: {\n    tryTest() {},\n\n    async doTest(testId) {\n      // console.log(testId)\n      await createExam({\n        'test_id': testId\n      });\n      router.push({\n        name: 'doExam',\n        params: {\n          idTest: testId\n        }\n      });\n    },\n\n    continueTest(testId) {\n      router.push({\n        name: 'doExam',\n        params: {\n          idTest: testId\n        }\n      });\n    },\n\n    updateTest(testId) {\n      router.push({\n        name: 'updateTest',\n        params: {\n          idTest: testId\n        }\n      });\n    },\n\n    historyTest(testId) {\n      router.push({\n        name: 'historyTest',\n        params: {\n          idTest: testId\n        }\n      });\n    },\n\n    deleteTest(testId) {\n      router.push({\n        name: 'deleteTest',\n        params: {\n          idTest: testId\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2EA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,eAAe;EACXC,IAAI,EAAE,eADK;EAEXC,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,CAFI;;EAGXC,KAAK,GAAG;IACJ,MAAMC,SAAQ,GAAIJ,GAAG,CAAC,KAAD,CAArB;IACA,MAAMK,aAAY,GAAIL,GAAG,CAAC,KAAD,CAAzB;IACA,MAAMM,aAAY,GAAIN,GAAG,CAAC,KAAD,CAAzB;IACA,MAAMO,UAAS,GAAIP,GAAG,CAAC,KAAD,CAAtB;IACA,MAAMQ,eAAc,GAAIR,GAAG,CAAC,KAAD,CAA3B;IACA,MAAMS,cAAa,GAAIT,GAAG,CAAC,KAAD,CAA1B;IACA,MAAMU,WAAU,GAAIV,GAAG,CAAC,KAAD,CAAvB;IACA,OAAO;MACHI,SADG;MACQC,aADR;MACuBC,aADvB;MACsCC,UADtC;MACkDC,eADlD;MACmEC,cADnE;MACmFC;IADnF,CAAP;EAGH,CAdU;;EAeXC,OAAO,GAAG;IACN,IAAI,KAAKC,IAAL,IAAa,CAAjB,EAAoB;MAChB,KAAKR,SAAL,GAAiB,IAAjB;MACA,KAAKK,cAAL,GAAsB,IAAtB;MACA,KAAKJ,aAAL,GAAqB,IAArB;MACA,KAAKK,WAAL,GAAmB,IAAnB;IACJ;;IACA,IAAI,KAAKE,IAAL,IAAa,CAAjB,EAAoB;MAChB,KAAKH,cAAL,GAAsB,IAAtB;MACA,KAAKL,SAAL,GAAiB,IAAjB;MACA,KAAKC,aAAL,GAAqB,IAArB;MACA,KAAKK,WAAL,GAAmB,IAAnB;IACJ;;IACA,IAAI,KAAKE,IAAL,IAAa,CAAjB,EAAoB;MAChB,KAAKJ,eAAL,GAAuB,IAAvB;MACA,KAAKC,cAAL,GAAsB,IAAtB;MACA,KAAKJ,aAAL,GAAqB,IAArB;MACA,KAAKK,WAAL,GAAmB,IAAnB;IACJ;EAEH,CAnCU;;EAqCXG,OAAO,EAAE;IAELC,OAAO,GAAG,CAET,CAJI;;IAKL,MAAMC,MAAN,CAAaC,MAAb,EAAqB;MACjB;MACA,MAAMjB,UAAU,CAAC;QAAE,WAAWiB;MAAb,CAAD,CAAhB;MACAlB,MAAM,CAACmB,IAAP,CAAY;QAAEhB,IAAI,EAAE,QAAR;QAAkBiB,MAAM,EAAE;UAAEC,MAAM,EAAEH;QAAV;MAA1B,CAAZ;IACH,CATI;;IAULI,YAAY,CAACJ,MAAD,EAAS;MACjBlB,MAAM,CAACmB,IAAP,CAAY;QAAEhB,IAAI,EAAE,QAAR;QAAkBiB,MAAM,EAAE;UAAEC,MAAM,EAAEH;QAAV;MAA1B,CAAZ;IACH,CAZI;;IAaLK,UAAU,CAACL,MAAD,EAAS;MACflB,MAAM,CAACmB,IAAP,CAAY;QAAEhB,IAAI,EAAE,YAAR;QAAsBiB,MAAM,EAAE;UAAEC,MAAM,EAAEH;QAAV;MAA9B,CAAZ;IACH,CAfI;;IAgBLM,WAAW,CAACN,MAAD,EAAS;MAChBlB,MAAM,CAACmB,IAAP,CAAY;QAAEhB,IAAI,EAAE,aAAR;QAAuBiB,MAAM,EAAE;UAAEC,MAAM,EAAEH;QAAV;MAA/B,CAAZ;IACH,CAlBI;;IAmBLO,UAAU,CAACP,MAAD,EAAS;MACflB,MAAM,CAACmB,IAAP,CAAY;QAAEhB,IAAI,EAAE,YAAR;QAAsBiB,MAAM,EAAE;UAAEC,MAAM,EAAEH;QAAV;MAA9B,CAAZ;IACH;;EArBI;AArCE,CAAf","names":["router","createExam","ref","name","props","setup","displayDo","displayUpdate","displayDelete","displayTry","displayContinue","displayHistory","displayMark","created","type","methods","tryTest","doTest","testId","push","params","idTest","continueTest","updateTest","historyTest","deleteTest"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Test\\TestComponent.vue"],"sourcesContent":["<template>\r\n\r\n    <div class=\"grid-item\">\r\n\r\n        <div class=\"header-test\">\r\n            <div class=\"mask\">\r\n                <button class=\"tool-button\" @click=\"tryTest(test.id)\" v-if=\"displayTry\">\r\n                    Thi thử\r\n                </button>\r\n                <button class=\"tool-button-do\" @click=\"doTest(test.id)\" v-if=\"displayDo\">\r\n                    <span class=\"fee\">5 xu</span>\r\n                    <span class=\"do\">Làm đề</span>\r\n                </button>\r\n                <button class=\"tool-button\" @click=\"continueTest(test.id)\" v-if=\"displayContinue\">\r\n                    Làm tiếp\r\n                </button>\r\n                <button class=\"tool-button\" @click=\"tryTest(test.id)\" v-if=\"displayTry\">\r\n                    Chấm điểm\r\n                </button>\r\n                <button class=\"tool-button\" @click=\"updateTest(test.id)\" v-if=\"displayUpdate\">\r\n                    Sửa\r\n                </button>\r\n                <button class=\"tool-button\" @click=\"historyTest(test.id)\" v-if=\"displayHistory\">\r\n                    Lịch sử\r\n                </button>\r\n                <button class=\"tool-button\" @click=\"deleteTest(test.id)\" v-if=\"displayDelete\">\r\n                    Xóa\r\n                </button>\r\n            </div>\r\n            <div class=\"information-user\">\r\n                <!-- Khối thông tin User -->\r\n                <div class=\"avatar\">\r\n                    <a href=\"\" class=\"circle\">\r\n                        <img width=\"64\" height=\"64\"\r\n                            src=\"http://www.gravatar.com/avatar/9017a5f22556ae0eb7fb0710711ec125?s=128\" />\r\n                    </a>\r\n                </div>\r\n\r\n                <div class=\"information\">\r\n                    <!-- Thông tin tên, giờ post bài -->\r\n                    <span>\r\n                        Nguyễn Văn A\r\n                    </span>\r\n                    <span>\r\n                        10/01/2022\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <!-- Khối thông tin người tạo đề thi -->\r\n        </div>\r\n        <div>\r\n            Kì thi: {{ test.name }}\r\n        </div>\r\n        <div>\r\n            Mã đề thi: {{ test.id }}\r\n        </div>\r\n        <div>\r\n            Số câu hỏi:\r\n        </div>\r\n        <div>\r\n            Thời gian\r\n        </div>\r\n        <div>\r\n            Thời gian mở đề: {{ test.time_start }}\r\n        </div>\r\n        <div>\r\n            Ghi chú: {{ test.note }}\r\n        </div>\r\n\r\n        <div>\r\n            Số học sinh tham gia: {{ test.candidates }}\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport router from '@/router';\r\nimport { createExam } from '@/services/exam';\r\nimport { ref } from 'vue';\r\nexport default {\r\n    name: \"TestComponent\",\r\n    props: ['test', 'type'],\r\n    setup() {\r\n        const displayDo = ref(false)\r\n        const displayUpdate = ref(false)\r\n        const displayDelete = ref(false)\r\n        const displayTry = ref(false)\r\n        const displayContinue = ref(false)\r\n        const displayHistory = ref(false)\r\n        const displayMark = ref(false)\r\n        return {\r\n            displayDo, displayUpdate, displayDelete, displayTry, displayContinue, displayHistory, displayMark\r\n        }\r\n    },\r\n    created() {\r\n        if (this.type == 0) {\r\n            this.displayDo = true\r\n            this.displayHistory = true\r\n            this.displayUpdate = true\r\n            this.displayMark = true\r\n        }\r\n        if (this.type == 1) {\r\n            this.displayHistory = true\r\n            this.displayDo = true\r\n            this.displayUpdate = true\r\n            this.displayMark = true\r\n        }\r\n        if (this.type == 2) {\r\n            this.displayContinue = true\r\n            this.displayHistory = true\r\n            this.displayUpdate = true\r\n            this.displayMark = true\r\n        }\r\n\r\n    },\r\n\r\n    methods: {\r\n\r\n        tryTest() {\r\n\r\n        },\r\n        async doTest(testId) {\r\n            // console.log(testId)\r\n            await createExam({ 'test_id': testId })\r\n            router.push({ name: 'doExam', params: { idTest: testId } })\r\n        },\r\n        continueTest(testId) {\r\n            router.push({ name: 'doExam', params: { idTest: testId } })\r\n        },\r\n        updateTest(testId) {\r\n            router.push({ name: 'updateTest', params: { idTest: testId } })\r\n        },\r\n        historyTest(testId) {\r\n            router.push({ name: 'historyTest', params: { idTest: testId } })\r\n        },\r\n        deleteTest(testId) {\r\n            router.push({ name: 'deleteTest', params: { idTest: testId } })\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n<style>\r\n.header-tests {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.mask {\r\n    display: none;\r\n}\r\n\r\n.grid-item:hover .mask {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    box-sizing: border-box;\r\n    background-color: #3f3e3eda;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    color: white;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n.tool-button {\r\n    margin-top: 5px;\r\n    min-height: 35px;\r\n    width: 40%;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n\r\n}\r\n\r\n.tool-button-do {\r\n    margin-top: 5px;\r\n    min-height: 35px;\r\n    width: 40%;\r\n    border-radius: 5px;\r\n    border: 2px solid #ea4f4c;\r\n    background-color: #222;\r\n    color: white;\r\n    text-align: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.fee {\r\n    display: none;\r\n}\r\n\r\n.tool-button-do:hover .fee {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    /* background-color: #0fde0cda; */\r\n    color: white;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n}\r\n\r\n.tool-button-do:hover .do {\r\n    display: none;\r\n}\r\n\r\n.information-user {\r\n    display: flex;\r\n}\r\n\r\n.information {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n}\r\n\r\n.circle {\r\n    display: inline-block;\r\n    height: 64px;\r\n    width: 64px;\r\n    border: 4px solid rgba(200, 200, 200, 0.4);\r\n    border-radius: 50%;\r\n}\r\n\r\n.circle img {\r\n    border-radius: 50%;\r\n}\r\n\r\n.circle:hover {\r\n    transition: ease-out 0.2s;\r\n    border: 4px solid rgba(203, 31, 31, 0.25);\r\n}\r\n\r\n.grid-item {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    background-color: #222;\r\n    border: 2px solid #ea4f4c;\r\n    width: 24.5%;\r\n    color: white;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    padding: 20px;\r\n    padding-top: 10px;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    margin-left: 2px;\r\n    margin-top: 5px;\r\n    text-decoration: none;\r\n}\r\n\r\n.header-test {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}