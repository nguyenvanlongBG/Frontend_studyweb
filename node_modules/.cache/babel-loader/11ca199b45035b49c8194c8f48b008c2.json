{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"nav-question\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"overview-exam\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"nameUser\"\n}, \" Họ và tên: Nguyễn Văn A \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"navbar-list-question\"\n}, \" Danh sách câu hỏi \", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  class: \"list-numerical-question\"\n};\nconst _hoisted_6 = [\"id\", \"onClick\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"fa-solid fa-caret-left\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"fa-solid fa-caret-right\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_Transition, {\n    name: \"slide-fade\"\n  }, {\n    default: _withCtx(() => [$setup.displayShrink ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", null, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.numericalQuestion.data, (question, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass($setup.classType[parseInt(question.type)]),\n        id: 'link_' + question.id,\n        onClick: $event => $options.moveToQuestion(question.page, question.id)\n      }, _toDisplayString(index + 1), 11\n      /* TEXT, CLASS, PROPS */\n      , _hoisted_6);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1\n    /* STABLE */\n\n  }), _createElementVNode(\"div\", {\n    class: \"nav-hiden-display\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.displayShrink = !$setup.displayShrink)\n  }, [$setup.displayShrink ? (_openBlock(), _createElementBlock(\"i\", _hoisted_7)) : _createCommentVNode(\"v-if\", true), !$setup.displayShrink ? (_openBlock(), _createElementBlock(\"i\", _hoisted_8)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;;EAEEA,KAAK,EAAC;;;gCACPC,oBAEO,MAFP,EAEO;EAFDD,KAAK,EAAC;AAEL,CAFP,EAAuB,2BAAvB,EAEA;AAAA;AAFA;;gCAIIC,oBAEO,MAFP,EAEO;EAFDD,KAAK,EAAC;AAEL,CAFP,EAAmC,qBAAnC,EAEA;AAAA;AAFA;;;EAGKA,KAAK,EAAC;;;;;EAahBA,KAAK,EAAC;;;;EACNA,KAAK,EAAC;;;uBAxBjBE,oBA0BM,KA1BN,cA0BM,CAzBFC,aAoBaC,WApBb,EAoBa;IApBDC,IAAI,EAAC;EAoBJ,CApBb,EAA6B;sBACzB,MAkBM,CAlB2BC,sCAAjCJ,oBAkBM,KAlBN,cAkBM,CAjBFK,UAiBE,EAdFN,oBAaM,KAbN,EAaM,IAbN,EAaM,CAZFO,UAYE,EATFP,oBAQM,KARN,cAQM,oBAPFC,oBAKWO,SALX,EAKW,IALX,EAKWC,YAL2BC,yBAAkBC,IAK7C,EALiD,CAA1CC,QAA0C,EAAhCC,KAAgC,KAA3B;2BAC7BZ,oBAGM,KAHN,EAGM;aAJ0DY,KAI1D;QAHAd,KAAK,kBAAEM,iBAAUS,QAAQ,CAACF,QAAQ,CAACG,IAAV,CAAlB,CAAF,CAGL;QAH4CC,EAAE,YAAYJ,QAAQ,CAACI,EAGnE;QAFDC,OAAK,YAAEC,wBAAeN,QAAQ,CAACO,IAAxB,EAA8BP,QAAQ,CAACI,EAAvC;MAEN,CAHN,mBAEOH,KAAK,KAFZ,EAEY;MAAA;MAFZ,EAEYO,UAFZ;KAIO,CALX;;IAAA,CAOE,EARN,CASE,CAbN,CAcE,CAlBN,sCAkBM,EAnBmB;;;;EAAA,CAA7B,CAyBE,EAJFpB,oBAGM,KAHN,EAGM;IAHDD,KAAK,EAAC,mBAGL;IAH0BkB,OAAK,sCAAEZ,uBAAa,CAAIA,oBAAnB;EAG/B,CAHN,GAC4CA,sCAAxCJ,oBAA2D,GAA3D,qDAC0CI,sCAA1CJ,oBAA6D,GAA7D,mDAFJ,CAIE,CA1BN","names":["class","_createElementVNode","_createElementBlock","_createVNode","_Transition","name","$setup","_hoisted_3","_hoisted_4","_Fragment","_renderList","$props","data","question","index","parseInt","type","id","onClick","$options","page","_hoisted_6"],"sourceRoot":"","sources":["G:\\Dự án Web học tập\\studyweb\\src\\components\\Test\\NavbarListComponent.vue"],"sourcesContent":["<template v-if=\"reload\">\r\n    <div class=\"nav-question\">\r\n        <Transition name=\"slide-fade\">\r\n            <div class=\"overview-exam\" v-if=\"displayShrink\">\r\n                <span class=\"nameUser\">\r\n                    Họ và tên: Nguyễn Văn A\r\n                </span>\r\n                <div>\r\n                    <span class=\"navbar-list-question\">\r\n                        Danh sách câu hỏi\r\n                    </span>\r\n                    <div class=\"list-numerical-question\">\r\n                        <template v-for=\"(question, index) in numericalQuestion.data\" :key=\"index\">\r\n                            <div :class=\"classType[parseInt(question.type)]\" :id=\"'link_' + question.id\"\r\n                                @click=\"moveToQuestion(question.page, question.id)\">\r\n                                {{ index + 1 }}\r\n                            </div>\r\n                        </template>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Transition>\r\n        <div class=\"nav-hiden-display\" @click=\"displayShrink = !displayShrink\">\r\n            <i class=\"fa-solid fa-caret-left\" v-if=\"displayShrink\"></i>\r\n            <i class=\"fa-solid fa-caret-right\" v-if=\"!displayShrink\"></i>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref, Transition } from 'vue';\r\n\r\nexport default {\r\n    name: \"NavbarListComponent\",\r\n    props: [\"numericalQuestion\", \"render\"],\r\n    watch: {\r\n        render() {\r\n            this.reload = false;\r\n            console.log(\"OK\");\r\n            this.$nextTick(() => {\r\n                this.reload = true;\r\n            });\r\n        }\r\n    },\r\n    setup() {\r\n        // console.log(this.questions)\r\n        const reload = ref(true);\r\n        const classType = ref([\"stt-question answer-content-choice\", \"stt-question answer-content-choice-checked\", \"stt-question answer-content-choice-true\", \"stt-question answer-content-choice-wrong\"]);\r\n        const displayShrink = ref(true);\r\n        const classNav = ref(\"class-nav\");\r\n        return {\r\n            classType,\r\n            reload,\r\n            displayShrink,\r\n            classNav\r\n        };\r\n    },\r\n    methods: {\r\n        moveToQuestion(page, id) {\r\n            console.log(\"In navbar\");\r\n            console.log(\"Navbar page \" + page);\r\n            this.$emit(\"moveQuestion\", page, \"question_\" + id);\r\n            // this.$emit('clickQuestion', page, index);\r\n        }\r\n    },\r\n    components: { Transition }\r\n}\r\n</script>\r\n<style>\r\n.slide-fade-enter-active {\r\n    transition: all 0.3s ease-out;\r\n}\r\n\r\n.slide-fade-leave-active {\r\n    transition: all 0.8s ease-out;\r\n}\r\n\r\n.slide-fade-enter-from,\r\n.slide-fade-leave-to {\r\n    transform: translateX(20px);\r\n    opacity: 0;\r\n}\r\n\r\n.nav-question {\r\n    display: flex;\r\n    border-style: solid;\r\n    min-width: 20%;\r\n    min-height: 250px;\r\n    position: fixed;\r\n}\r\n\r\n.class-nav {\r\n    flex-basis: 15px;\r\n}\r\n\r\n.nav-hiden-display {\r\n    text-align: center;\r\n    overflow-x: hidden;\r\n    min-width: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #e2dfdf;\r\n    right: 0px;\r\n}\r\n\r\n.overview-exam {\r\n    border-style: solid;\r\n    width: 100%;\r\n    /* position: fixed; */\r\n    /* border-top: 5px solid #ea4f4c; */\r\n}\r\n\r\n\r\n\r\n.list-numerical-question {\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 20%);\r\n    margin-top: 10px;\r\n    padding-top: 5px;\r\n    border-top: 5px solid #ea4f4c;\r\n\r\n}\r\n\r\n.navbar-list-question {\r\n    font-weight: bold;\r\n}\r\n\r\n.stt-question {\r\n    display: inline-grid;\r\n    text-align: center;\r\n    align-items: center;\r\n    margin: 1px;\r\n    height: 40px;\r\n    min-width: 60px;\r\n    border-style: solid;\r\n    border-radius: 5px;\r\n}\r\n\r\n.answer-content-choice {\r\n    background-color: white;\r\n    border-color: #222;\r\n    color: #222;\r\n}\r\n\r\n.answer-content-choice-checked {\r\n    background-color: #222;\r\n    border-color: #222;\r\n    color: white;\r\n}\r\n\r\n.answer-content-choice-true {\r\n    background-color: rgb(24, 247, 13);\r\n    border-color: #222;\r\n    color: white;\r\n}\r\n\r\n.answer-content-choice-wrong {\r\n    background-color: rgb(236, 10, 10);\r\n    border-color: #222;\r\n    color: white;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}