import { openBlock as h, createElementBlock as S, createElementVNode as J, reactive as pt, computed as U, unref as s, ref as W, onMounted as Ue, nextTick as kt, watch as wt, toRef as tn, defineComponent as He, renderSlot as H, createCommentVNode as D, normalizeClass as he, withKeys as re, createBlock as ue, withModifiers as Ge, normalizeStyle as ut, Fragment as se, createTextVNode as ze, toDisplayString as Se, renderList as $e, createVNode as qe, Transition as ft, withCtx as le, onBeforeUpdate as Zn, onUnmounted as rn, withDirectives as Tt, vShow as St, mergeProps as Te, createSlots as Ye, normalizeProps as Ve, isRef as nt, guardReactiveProps as Ze, resolveDynamicComponent as Ct, useSlots as on, getCurrentScope as Xn, onScopeDispose as qn, Teleport as Jn } from "vue";
import { isBefore as sn, isEqual as On, isAfter as un, setHours as Bn, setMinutes as Yn, setSeconds as Vn, setMilliseconds as cn, parse as nn, isValid as Pt, isDate as Qn, format as yt, getMonth as ve, getDay as ea, getYear as me, getHours as Ke, getMinutes as xe, getSeconds as dt, parseISO as ta, startOfWeek as gn, endOfWeek as na, setMonth as Nt, setYear as rt, addDays as ct, set as Ie, add as En, addMonths as at, subMonths as ht, getISOWeek as aa, differenceInCalendarDays as la, eachDayOfInterval as pn, addYears as ra, subYears as oa, sub as sa } from "date-fns";
const ot = (e, n) => {
  const a = e.__vccOpts || e;
  for (const [t, r] of n)
    a[t] = r;
  return a;
}, ia = {}, ua = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, ca = /* @__PURE__ */ J("path", { d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z" }, null, -1), da = /* @__PURE__ */ J("path", { d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), fa = /* @__PURE__ */ J("path", { d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), va = /* @__PURE__ */ J("path", { d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z" }, null, -1), ma = [
  ca,
  da,
  fa,
  va
];
function ya(e, n) {
  return h(), S("svg", ua, ma);
}
const Et = /* @__PURE__ */ ot(ia, [["render", ya]]), ha = {}, ga = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, pa = /* @__PURE__ */ J("path", { d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z" }, null, -1), ka = /* @__PURE__ */ J("path", { d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z" }, null, -1), wa = [
  pa,
  ka
];
function ba(e, n) {
  return h(), S("svg", ga, wa);
}
const $a = /* @__PURE__ */ ot(ha, [["render", ba]]), Da = {}, Ma = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, _a = /* @__PURE__ */ J("path", { d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z" }, null, -1), Aa = [
  _a
];
function Ta(e, n) {
  return h(), S("svg", Ma, Aa);
}
const kn = /* @__PURE__ */ ot(Da, [["render", Ta]]), Sa = {}, Ca = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Pa = /* @__PURE__ */ J("path", { d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z" }, null, -1), Na = [
  Pa
];
function Ra(e, n) {
  return h(), S("svg", Ca, Na);
}
const wn = /* @__PURE__ */ ot(Sa, [["render", Ra]]), Ia = {}, Oa = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Ba = /* @__PURE__ */ J("path", { d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z" }, null, -1), Ya = /* @__PURE__ */ J("path", { d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), Va = [
  Ba,
  Ya
];
function Ea(e, n) {
  return h(), S("svg", Oa, Va);
}
const Ln = /* @__PURE__ */ ot(Ia, [["render", Ea]]), La = {}, Fa = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Ua = /* @__PURE__ */ J("path", { d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z" }, null, -1), Ha = [
  Ua
];
function Wa(e, n) {
  return h(), S("svg", Fa, Ha);
}
const Fn = /* @__PURE__ */ ot(La, [["render", Wa]]), za = {}, ja = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Ka = /* @__PURE__ */ J("path", { d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z" }, null, -1), xa = [
  Ka
];
function Ga(e, n) {
  return h(), S("svg", ja, xa);
}
const Un = /* @__PURE__ */ ot(za, [["render", Ga]]), bn = (e, n) => {
  const a = nn(e, n.slice(0, e.length), new Date());
  return Pt(a) && Qn(a) ? a : null;
}, Za = (e, n) => {
  if (typeof n == "string")
    return bn(e, n);
  if (Array.isArray(n)) {
    let a = null;
    for (const t of n)
      if (a = bn(e, t), a)
        break;
    return a;
  }
  return typeof n == "function" ? n(e) : null;
}, b = (e) => e ? new Date(e) : new Date(), Xa = (e, n) => {
  if (n) {
    const t = (e.getMonth() + 1).toString().padStart(2, "0"), r = e.getDate().toString().padStart(2, "0"), u = e.getHours().toString().padStart(2, "0"), p = e.getMinutes().toString().padStart(2, "0");
    return `${e.getFullYear()}-${t}-${r}T${u}:${p}:00.000Z`;
  }
  const a = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(a).toISOString();
}, je = (e) => {
  let n = b(JSON.parse(JSON.stringify(e)));
  return n = Bn(n, 0), n = Yn(n, 0), n = Vn(n, 0), n = cn(n, 0), n;
}, Le = (e, n, a, t) => {
  let r = e ? b(e) : b();
  return (n || n === 0) && (r = Bn(r, +n)), (a || a === 0) && (r = Yn(r, +a)), (t || t === 0) && (r = Vn(r, +t)), cn(r, 0);
}, Pe = (e, n) => !e || !n ? !1 : sn(je(e), je(n)), ye = (e, n) => !e || !n ? !1 : On(je(e), je(n)), Be = (e, n) => !e || !n ? !1 : un(je(e), je(n)), Hn = (e, n, a) => e && e[0] && e[1] ? Be(a, e[0]) && Pe(a, e[1]) : e && e[0] && n ? Be(a, e[0]) && Pe(a, n) || Pe(a, e[0]) && Be(a, n) : !1, mt = pt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), Wn = () => {
  const e = (t) => {
    mt.menuFocused = t;
  }, n = (t) => {
    mt.shiftKeyInMenu !== t && (mt.shiftKeyInMenu = t);
  };
  return {
    control: U(() => ({ shiftKeyInMenu: mt.shiftKeyInMenu, menuFocused: mt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: n
  };
};
function dn(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var It = {}, qa = {
  get exports() {
    return It;
  },
  set exports(e) {
    It = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    if (t === null || t === !0 || t === !1)
      return NaN;
    var r = Number(t);
    return isNaN(r) ? r : r < 0 ? Math.ceil(r) : Math.floor(r);
  }
  e.exports = n.default;
})(qa, It);
const Ja = /* @__PURE__ */ dn(It);
var Ot = {}, Qa = {
  get exports() {
    return Ot;
  },
  set exports(e) {
    Ot = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t) {
    var r = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
    return r.setUTCFullYear(t.getFullYear()), t.getTime() - r.getTime();
  }
  e.exports = n.default;
})(Qa, Ot);
const $n = /* @__PURE__ */ dn(Ot);
function el(e, n) {
  var a = ll(n);
  return a.formatToParts ? nl(a, e) : al(a, e);
}
var tl = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function nl(e, n) {
  try {
    for (var a = e.formatToParts(n), t = [], r = 0; r < a.length; r++) {
      var u = tl[a[r].type];
      u >= 0 && (t[u] = parseInt(a[r].value, 10));
    }
    return t;
  } catch (p) {
    if (p instanceof RangeError)
      return [NaN];
    throw p;
  }
}
function al(e, n) {
  var a = e.format(n).replace(/\u200E/g, ""), t = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(a);
  return [t[3], t[1], t[2], t[4], t[5], t[6]];
}
var jt = {};
function ll(e) {
  if (!jt[e]) {
    var n = new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: "America/New_York",
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }).format(new Date("2014-06-25T04:00:00.123Z")), a = n === "06/25/2014, 00:00:00" || n === "‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";
    jt[e] = a ? new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }) : new Intl.DateTimeFormat("en-US", {
      hourCycle: "h23",
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return jt[e];
}
function fn(e, n, a, t, r, u, p) {
  var $ = new Date(0);
  return $.setUTCFullYear(e, n, a), $.setUTCHours(t, r, u, p), $;
}
var Dn = 36e5, rl = 6e4, Kt = {
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-]\d{2})$/,
  timezoneHHMM: /^([+-]\d{2}):?(\d{2})$/
};
function vn(e, n, a) {
  var t, r;
  if (e === "" || (t = Kt.timezoneZ.exec(e), t))
    return 0;
  var u;
  if (t = Kt.timezoneHH.exec(e), t)
    return u = parseInt(t[1], 10), Mn(u) ? -(u * Dn) : NaN;
  if (t = Kt.timezoneHHMM.exec(e), t) {
    u = parseInt(t[1], 10);
    var p = parseInt(t[2], 10);
    return Mn(u, p) ? (r = Math.abs(u) * Dn + p * rl, u > 0 ? -r : r) : NaN;
  }
  if (il(e)) {
    n = new Date(n || Date.now());
    var $ = a ? n : ol(n), Y = an($, e), L = a ? Y : sl(n, Y, e);
    return -L;
  }
  return NaN;
}
function ol(e) {
  return fn(
    e.getFullYear(),
    e.getMonth(),
    e.getDate(),
    e.getHours(),
    e.getMinutes(),
    e.getSeconds(),
    e.getMilliseconds()
  );
}
function an(e, n) {
  var a = el(e, n), t = fn(
    a[0],
    a[1] - 1,
    a[2],
    a[3] % 24,
    a[4],
    a[5],
    0
  ).getTime(), r = e.getTime(), u = r % 1e3;
  return r -= u >= 0 ? u : 1e3 + u, t - r;
}
function sl(e, n, a) {
  var t = e.getTime(), r = t - n, u = an(new Date(r), a);
  if (n === u)
    return n;
  r -= u - n;
  var p = an(new Date(r), a);
  return u === p ? u : Math.max(u, p);
}
function Mn(e, n) {
  return -23 <= e && e <= 23 && (n == null || 0 <= n && n <= 59);
}
var _n = {};
function il(e) {
  if (_n[e])
    return !0;
  try {
    return new Intl.DateTimeFormat(void 0, { timeZone: e }), _n[e] = !0, !0;
  } catch {
    return !1;
  }
}
var zn = /(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/, xt = 36e5, An = 6e4, ul = 2, Oe = {
  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,
  datePattern: /^([0-9W+-]+)(.*)/,
  plainTime: /:/,
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/,
    /^([+-]\d{3})$/,
    /^([+-]\d{4})$/
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/,
    /^([+-]\d{5})/,
    /^([+-]\d{6})/
  ],
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,
  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
  timeZone: zn
};
function ln(e, n) {
  if (arguments.length < 1)
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  if (e === null)
    return new Date(NaN);
  var a = n || {}, t = a.additionalDigits == null ? ul : Ja(a.additionalDigits);
  if (t !== 2 && t !== 1 && t !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]")
    return new Date(e.getTime());
  if (typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]")
    return new Date(e);
  if (!(typeof e == "string" || Object.prototype.toString.call(e) === "[object String]"))
    return new Date(NaN);
  var r = cl(e), u = dl(r.date, t), p = u.year, $ = u.restDateString, Y = fl($, p);
  if (isNaN(Y))
    return new Date(NaN);
  if (Y) {
    var L = Y.getTime(), V = 0, i;
    if (r.time && (V = vl(r.time), isNaN(V)))
      return new Date(NaN);
    if (r.timeZone || a.timeZone) {
      if (i = vn(r.timeZone || a.timeZone, new Date(L + V)), isNaN(i))
        return new Date(NaN);
    } else
      i = $n(new Date(L + V)), i = $n(new Date(L + V + i));
    return new Date(L + V + i);
  } else
    return new Date(NaN);
}
function cl(e) {
  var n = {}, a = Oe.dateTimePattern.exec(e), t;
  if (a ? (n.date = a[1], t = a[3]) : (a = Oe.datePattern.exec(e), a ? (n.date = a[1], t = a[2]) : (n.date = null, t = e)), t) {
    var r = Oe.timeZone.exec(t);
    r ? (n.time = t.replace(r[1], ""), n.timeZone = r[1].trim()) : n.time = t;
  }
  return n;
}
function dl(e, n) {
  var a = Oe.YYY[n], t = Oe.YYYYY[n], r;
  if (r = Oe.YYYY.exec(e) || t.exec(e), r) {
    var u = r[1];
    return {
      year: parseInt(u, 10),
      restDateString: e.slice(u.length)
    };
  }
  if (r = Oe.YY.exec(e) || a.exec(e), r) {
    var p = r[1];
    return {
      year: parseInt(p, 10) * 100,
      restDateString: e.slice(p.length)
    };
  }
  return {
    year: null
  };
}
function fl(e, n) {
  if (n === null)
    return null;
  var a, t, r, u;
  if (e.length === 0)
    return t = new Date(0), t.setUTCFullYear(n), t;
  if (a = Oe.MM.exec(e), a)
    return t = new Date(0), r = parseInt(a[1], 10) - 1, Sn(n, r) ? (t.setUTCFullYear(n, r), t) : new Date(NaN);
  if (a = Oe.DDD.exec(e), a) {
    t = new Date(0);
    var p = parseInt(a[1], 10);
    return hl(n, p) ? (t.setUTCFullYear(n, 0, p), t) : new Date(NaN);
  }
  if (a = Oe.MMDD.exec(e), a) {
    t = new Date(0), r = parseInt(a[1], 10) - 1;
    var $ = parseInt(a[2], 10);
    return Sn(n, r, $) ? (t.setUTCFullYear(n, r, $), t) : new Date(NaN);
  }
  if (a = Oe.Www.exec(e), a)
    return u = parseInt(a[1], 10) - 1, Cn(n, u) ? Tn(n, u) : new Date(NaN);
  if (a = Oe.WwwD.exec(e), a) {
    u = parseInt(a[1], 10) - 1;
    var Y = parseInt(a[2], 10) - 1;
    return Cn(n, u, Y) ? Tn(n, u, Y) : new Date(NaN);
  }
  return null;
}
function vl(e) {
  var n, a, t;
  if (n = Oe.HH.exec(e), n)
    return a = parseFloat(n[1].replace(",", ".")), Gt(a) ? a % 24 * xt : NaN;
  if (n = Oe.HHMM.exec(e), n)
    return a = parseInt(n[1], 10), t = parseFloat(n[2].replace(",", ".")), Gt(a, t) ? a % 24 * xt + t * An : NaN;
  if (n = Oe.HHMMSS.exec(e), n) {
    a = parseInt(n[1], 10), t = parseInt(n[2], 10);
    var r = parseFloat(n[3].replace(",", "."));
    return Gt(a, t, r) ? a % 24 * xt + t * An + r * 1e3 : NaN;
  }
  return null;
}
function Tn(e, n, a) {
  n = n || 0, a = a || 0;
  var t = new Date(0);
  t.setUTCFullYear(e, 0, 4);
  var r = t.getUTCDay() || 7, u = n * 7 + a + 1 - r;
  return t.setUTCDate(t.getUTCDate() + u), t;
}
var ml = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], yl = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function jn(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function Sn(e, n, a) {
  if (n < 0 || n > 11)
    return !1;
  if (a != null) {
    if (a < 1)
      return !1;
    var t = jn(e);
    if (t && a > yl[n] || !t && a > ml[n])
      return !1;
  }
  return !0;
}
function hl(e, n) {
  if (n < 1)
    return !1;
  var a = jn(e);
  return !(a && n > 366 || !a && n > 365);
}
function Cn(e, n, a) {
  return !(n < 0 || n > 52 || a != null && (a < 0 || a > 6));
}
function Gt(e, n, a) {
  return !(e != null && (e < 0 || e >= 25) || n != null && (n < 0 || n >= 60) || a != null && (a < 0 || a >= 60));
}
var Bt = {}, gl = {
  get exports() {
    return Bt;
  },
  set exports(e) {
    Bt = e;
  }
}, Yt = {}, pl = {
  get exports() {
    return Yt;
  },
  set exports(e) {
    Yt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = a;
  function a(t, r) {
    if (t == null)
      throw new TypeError("assign requires that input parameter not be null or undefined");
    for (var u in r)
      Object.prototype.hasOwnProperty.call(r, u) && (t[u] = r[u]);
    return t;
  }
  e.exports = n.default;
})(pl, Yt);
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = r;
  var a = t(Yt);
  function t(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function r(u) {
    return (0, a.default)({}, u);
  }
  e.exports = n.default;
})(gl, Bt);
const kl = /* @__PURE__ */ dn(Bt);
function wl(e, n, a) {
  var t = ln(e, a), r = vn(n, t, !0), u = new Date(t.getTime() - r), p = new Date(0);
  return p.setFullYear(u.getUTCFullYear(), u.getUTCMonth(), u.getUTCDate()), p.setHours(u.getUTCHours(), u.getUTCMinutes(), u.getUTCSeconds(), u.getUTCMilliseconds()), p;
}
function bl(e, n, a) {
  if (typeof e == "string" && !e.match(zn)) {
    var t = kl(a);
    return t.timeZone = n, ln(e, t);
  }
  var r = ln(e, a), u = fn(
    r.getFullYear(),
    r.getMonth(),
    r.getDate(),
    r.getHours(),
    r.getMinutes(),
    r.getSeconds(),
    r.getMilliseconds()
  ).getTime(), p = vn(n, new Date(u));
  return new Date(u + p);
}
const $l = (e, n = 3) => {
  const a = [];
  for (let t = 0; t < e.length; t += n)
    a.push([e[t], e[t + 1], e[t + 2]]);
  return a;
}, Dl = (e, n) => {
  const a = [1, 2, 3, 4, 5, 6, 7].map((u) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(new Date(`2017-01-0${u}T00:00:00+00:00`)).slice(0, 2)), t = a.slice(0, n), r = a.slice(n + 1, a.length);
  return [a[n]].concat(...r).concat(...t);
}, Ml = (e) => {
  const n = [];
  for (let a = +e[0]; a <= +e[1]; a++)
    n.push({ value: +a, text: `${a}` });
  return n;
}, _l = (e, n) => {
  const a = new Intl.DateTimeFormat(e, { month: n, timeZone: "UTC" });
  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((r) => {
    const u = r < 10 ? `0${r}` : r;
    return new Date(`2017-${u}-01T00:00:00+00:00`);
  }).map((r, u) => ({
    text: a.format(r),
    value: u
  }));
}, Al = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Ce = (e) => {
  const n = s(e);
  return (n == null ? void 0 : n.$el) ?? n;
}, Tl = (e) => Object.assign({ type: "dot" }, e), Kn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Vt = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, _e = (e) => e, Pn = (e) => Object.assign(
  {
    menuAppear: "dp-menu-appear",
    open: "dp-slide-down",
    close: "dp-slide-up",
    next: "calendar-next",
    previous: "calendar-prev",
    vNext: "dp-slide-up",
    vPrevious: "dp-slide-down"
  },
  e
), Sl = (e) => Object.assign(
  {
    toggleOverlay: "Toggle overlay",
    menu: "Datepicker menu",
    input: "Datepicker input",
    calendarWrap: "Calendar wrapper",
    calendarDays: "Calendar days",
    openTimePicker: "Open time picker",
    closeTimePicker: "Close time Picker",
    incrementValue: (n) => `Increment ${n}`,
    decrementValue: (n) => `Decrement ${n}`,
    openTpOverlay: (n) => `Open ${n} overlay`,
    amPmButton: "Switch AM/PM mode",
    openYearsOverlay: "Open years overlay",
    openMonthsOverlay: "Open months overlay",
    nextMonth: "Next month",
    prevMonth: "Previous month",
    day: () => ""
  },
  e
), Cl = (e) => e === null ? 0 : typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2, Pl = (e, n, a) => e || (typeof a == "string" ? a : n), Nl = (e) => typeof e == "boolean" ? e ? Pn({}) : !1 : Pn(e), Rl = () => ({
  enterSubmit: !0,
  tabSubmit: !0,
  openMenu: !0,
  rangeSeparator: " - "
}), Il = (e) => Object.assign({ months: [], years: [], times: { hours: [], minutes: [], seconds: [] } }, e), Ee = (e) => {
  const n = () => {
    if (e.partialRange)
      return null;
    throw new Error(Vt.prop("partial-range"));
  }, a = U(() => ({
    ariaLabels: Sl(e.ariaLabels),
    textInputOptions: Object.assign(Rl(), e.textInputOptions),
    multiCalendars: Cl(e.multiCalendars),
    previewFormat: Pl(e.previewFormat, e.format, u()),
    filters: Il(e.filters),
    transitions: Nl(e.transitions),
    startTime: _()
  })), t = (l) => {
    if (e.range)
      return l();
    throw new Error(Vt.prop("range"));
  }, r = () => {
    const l = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${l}` : `hh:mm${l} aa`;
  }, u = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? r() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${r()}` : "MM/dd/yyyy", p = (l, f) => {
    if (typeof e.format == "function")
      return e.format(l);
    const k = f || u(), R = e.formatLocale ? { locale: e.formatLocale } : void 0;
    return Array.isArray(l) ? `${yt(l[0], k, R)} ${e.modelAuto && !l[1] ? "" : a.value.textInputOptions.rangeSeparator || "-"} ${l[1] ? yt(l[1], k, R) : ""}` : yt(l, k, R);
  }, $ = (l) => e.timezone ? wl(l, e.timezone) : l, Y = (l) => e.timezone ? bl(l, e.timezone) : l, L = U(() => (l) => {
    var f;
    return (f = e.hideNavigation) == null ? void 0 : f.includes(l);
  }), V = (l) => {
    const f = e.maxDate ? Be($(l), $(b(e.maxDate))) : !1, k = e.minDate ? Pe($(l), $(b(e.minDate))) : !1, R = C(l, e.disabledDates), ce = a.value.filters.months.map((De) => +De).includes(ve(l)), v = e.disabledWeekDays.length ? e.disabledWeekDays.some((De) => +De === ea(l)) : !1, d = e.allowedDates.length ? !e.allowedDates.some((De) => ye($(b(De)), $(l))) : !1, O = me(l), de = O < +e.yearRange[0] || O > +e.yearRange[1];
    return !(f || k || R || ce || de || v || d);
  }, i = (l) => {
    const f = {
      hours: Ke(b()),
      minutes: xe(b()),
      seconds: dt(b())
    };
    return Object.assign(f, l);
  }, _ = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [i(e.startTime[0]), i(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? i(e.startTime) : null, I = (l) => !V(l), B = (l) => Array.isArray(l) ? Pt(l[0]) && (l[1] ? Pt(l[1]) : !0) : l ? Pt(l) : !1, X = (l) => l instanceof Date ? l : ta(l), Q = (l) => {
    const f = gn($(l), { weekStartsOn: +e.weekStart }), k = na($(l), { weekStartsOn: +e.weekStart });
    return [f, k];
  }, C = (l, f) => Array.isArray(f) ? f.some((k) => ye($(b(k)), $(l))) : f(l), M = (l, f, k) => {
    let R = l ? b(l) : b();
    return (f || f === 0) && (R = Nt(R, f)), k && (R = rt(R, k)), R;
  }, Z = (l) => Ie(b(), { hours: Ke(l), minutes: xe(l), seconds: dt(l) }), ae = (l) => Ie(b(), {
    hours: +l.hours || 0,
    minutes: +l.minutes || 0,
    seconds: +l.seconds || 0
  }), ne = (l, f, k, R) => {
    if (!l)
      return !0;
    if (R) {
      const ie = k === "max" ? sn(l, f) : un(l, f), ce = { seconds: 0, milliseconds: 0 };
      return ie || On(Ie(l, ce), Ie(f, ce));
    }
    return k === "max" ? l.getTime() <= f.getTime() : l.getTime() >= f.getTime();
  }, P = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, m = (l) => Array.isArray(l) ? [l[0] ? Z(l[0]) : null, l[1] ? Z(l[1]) : null] : Z(l), N = (l) => {
    const f = e.maxTime ? ae(e.maxTime) : b(e.maxDate);
    return Array.isArray(l) ? ne(l[0], f, "max", !!e.maxDate) && ne(l[1], f, "max", !!e.maxDate) : ne(l, f, "max", !!e.maxDate);
  }, j = (l, f) => {
    const k = e.minTime ? ae(e.minTime) : b(e.minDate);
    return Array.isArray(l) ? ne(l[0], k, "min", !!e.minDate) && ne(l[1], k, "min", !!e.minDate) && f : ne(l, k, "min", !!e.minDate) && f;
  }, ee = (l) => {
    let f = !0;
    if (!l || P())
      return !0;
    const k = !e.minDate && !e.maxDate ? m(l) : l;
    return (e.maxTime || e.maxDate) && (f = N(_e(k))), (e.minTime || e.minDate) && (f = j(_e(k), f)), f;
  }, E = (l, f) => {
    const k = b(JSON.parse(JSON.stringify(l))), R = [];
    for (let ie = 0; ie < 7; ie++) {
      const ce = ct(k, ie), v = ve(ce) !== f;
      R.push({
        text: e.hideOffsetDates && v ? "" : ce.getDate(),
        value: ce,
        current: !v,
        classData: {}
      });
    }
    return R;
  }, z = (l, f) => {
    const k = [], R = b($(new Date(f, l))), ie = b($(new Date(f, l + 1, 0))), ce = gn(R, { weekStartsOn: e.weekStart }), v = (d) => {
      const O = E(d, l);
      if (k.push({ days: O }), !k[k.length - 1].days.some(
        (de) => ye(je(de.value), je(ie))
      )) {
        const de = ct(d, 7);
        v(de);
      }
    };
    if (v(ce), e.sixWeeks && k.length < 6) {
      const d = 6 - k.length;
      for (let O = 1; O <= d; O++) {
        const de = k[k.length - 1], De = de.days[de.days.length - 1], we = E(ct(De.value, 1), ve(R));
        k.push({ days: we });
      }
    }
    return k;
  }, g = (l, f, k) => [Ie(b(l), { date: 1 }), Ie(b(), { month: f, year: k, date: 1 })], c = (l, f) => Pe(...g(e.minDate, l, f)) || ye(...g(e.minDate, l, f)), A = (l, f) => Be(...g(e.maxDate, l, f)) || ye(...g(e.maxDate, l, f)), T = (l, f, k) => {
    let R = !1;
    return e.maxDate && k && A(l, f) && (R = !0), e.minDate && !k && c(l, f) && (R = !0), R;
  };
  return {
    checkPartialRangeValue: n,
    checkRangeEnabled: t,
    getZonedDate: $,
    getZonedToUtc: Y,
    formatDate: p,
    getDefaultPattern: u,
    validateDate: V,
    getDefaultStartTime: _,
    isDisabled: I,
    isValidDate: B,
    sanitizeDate: X,
    getWeekFromDate: Q,
    matchDate: C,
    setDateMonthOrYear: M,
    isValidTime: ee,
    getCalendarDays: z,
    validateMonthYearInRange: (l, f, k, R) => {
      let ie = !1;
      return R ? e.minDate && e.maxDate ? ie = T(l, f, k) : (e.minDate && c(l, f) || e.maxDate && A(l, f)) && (ie = !0) : ie = !0, ie;
    },
    validateMaxDate: A,
    validateMinDate: c,
    defaults: a,
    hideNavigationButtons: L
  };
}, fe = pt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), Zt = W(null), At = W(!1), Xt = W(!1), qt = W(!1), Jt = W(!1), Re = W(0), Ae = W(0), Je = () => {
  const e = U(() => At.value ? [...fe.selectionGrid, fe.actionRow].filter((C) => C.length) : Xt.value ? [
    ...fe.timePicker[0],
    ...fe.timePicker[1],
    Jt.value ? [] : [Zt.value],
    fe.actionRow
  ].filter((C) => C.length) : qt.value ? [...fe.monthPicker, fe.actionRow] : [fe.monthYear, ...fe.calendar, fe.time, fe.actionRow].filter((C) => C.length)), n = (C) => {
    Re.value = C ? Re.value + 1 : Re.value - 1;
    let M = null;
    e.value[Ae.value] && (M = e.value[Ae.value][Re.value]), M || (Re.value = C ? Re.value - 1 : Re.value + 1);
  }, a = (C) => {
    if (Ae.value === 0 && !C || Ae.value === e.value.length && C)
      return;
    Ae.value = C ? Ae.value + 1 : Ae.value - 1, e.value[Ae.value] ? e.value[Ae.value] && !e.value[Ae.value][Re.value] && Re.value !== 0 && (Re.value = e.value[Ae.value].length - 1) : Ae.value = C ? Ae.value - 1 : Ae.value + 1;
  }, t = (C) => {
    let M = null;
    e.value[Ae.value] && (M = e.value[Ae.value][Re.value]), M ? M.focus({ preventScroll: !At.value }) : Re.value = C ? Re.value - 1 : Re.value + 1;
  }, r = () => {
    n(!0), t(!0);
  }, u = () => {
    n(!1), t(!1);
  }, p = () => {
    a(!1), t(!0);
  }, $ = () => {
    a(!0), t(!0);
  }, Y = (C, M) => {
    fe[M] = C;
  }, L = (C, M) => {
    fe[M] = C;
  }, V = () => {
    Re.value = 0, Ae.value = 0;
  };
  return {
    buildMatrix: Y,
    buildMultiLevelMatrix: L,
    setTimePickerBackRef: (C) => {
      Zt.value = C;
    },
    setSelectionGrid: (C) => {
      At.value = C, V(), C || (fe.selectionGrid = []);
    },
    setTimePicker: (C, M = !1) => {
      Xt.value = C, Jt.value = M, V(), C || (fe.timePicker[0] = [], fe.timePicker[1] = []);
    },
    setTimePickerElements: (C, M = 0) => {
      fe.timePicker[M] = C;
    },
    arrowRight: r,
    arrowLeft: u,
    arrowUp: p,
    arrowDown: $,
    clearArrowNav: () => {
      fe.monthYear = [], fe.calendar = [], fe.time = [], fe.actionRow = [], fe.selectionGrid = [], fe.timePicker[0] = [], fe.timePicker[1] = [], At.value = !1, Xt.value = !1, Jt.value = !1, qt.value = !1, V(), Zt.value = null;
    },
    setMonthPicker: (C) => {
      qt.value = C, V();
    },
    refSets: fe
  };
}, Nn = (e) => Array.isArray(e), tt = (e) => Array.isArray(e), Rn = (e) => Array.isArray(e) && e.length === 2, Ol = (e, n, a, t) => {
  const {
    getDefaultStartTime: r,
    isDisabled: u,
    sanitizeDate: p,
    getWeekFromDate: $,
    setDateMonthOrYear: Y,
    validateMonthYearInRange: L,
    defaults: V
  } = Ee(e), i = U({
    get: () => e.internalModelValue,
    set: (o) => {
      !e.readonly && !e.disabled && n("update:internal-model-value", o);
    }
  }), _ = W([]), I = W([{ month: ve(b()), year: me(b()) }]), B = pt({
    hours: e.range ? [Ke(b()), Ke(b())] : Ke(b()),
    minutes: e.range ? [xe(b()), xe(b())] : xe(b()),
    seconds: e.range ? [0, 0] : 0
  }), X = U(
    () => (o) => I.value[o] ? I.value[o].month : 0
  ), Q = U(
    () => (o) => I.value[o] ? I.value[o].year : 0
  ), C = (o, w, x) => {
    I.value[o].month = w === null ? I.value[o].month : w, I.value[o].year = x === null ? I.value[o].year : x;
  }, M = (o, w) => {
    B[o] = w;
  };
  Ue(() => {
    i.value || (e.startDate && (C(0, ve(b(e.startDate)), me(b(e.startDate))), V.value.multiCalendars && Fe(0)), V.value.startTime && g()), Z(!0);
  });
  const Z = (o = !1) => {
    if (i.value)
      return Array.isArray(i.value) ? N(o) : ne(i.value);
    if (e.timePicker)
      return j();
    if (e.monthPicker && !e.range)
      return ee();
    if (e.yearPicker && !e.range)
      return E();
    if (V.value.multiCalendars)
      return ae(b(), o);
  }, ae = (o, w = !1) => {
    if ((!V.value.multiCalendars || !e.multiStatic || w) && C(0, ve(o), me(o)), V.value.multiCalendars)
      for (let x = 1; x < V.value.multiCalendars; x++) {
        const te = Ie(b(), { month: X.value(x - 1), year: Q.value(x - 1) }), ge = En(te, { months: 1 });
        I.value[x] = { month: ve(ge), year: me(ge) };
      }
  }, ne = (o) => {
    ae(o), M("hours", Ke(o)), M("minutes", xe(o)), M("seconds", dt(o));
  }, P = (o, w) => {
    ae(o[0], w);
    const x = (te, ge) => [
      te(o[0]),
      o[1] ? te(o[1]) : B[ge][1]
    ];
    M("hours", x(Ke, "hours")), M("minutes", x(xe, "minutes")), M("seconds", x(dt, "seconds"));
  }, m = (o, w) => {
    if (e.range && !e.multiDates)
      return P(o, w);
    if (e.multiDates) {
      const x = o[o.length - 1];
      return ne(x);
    }
  }, N = (o) => {
    const w = i.value;
    m(w, o), V.value.multiCalendars && e.multiCalendarsSolo && A();
  }, j = () => {
    if (g(), !e.range)
      i.value = Le(b(), B.hours, B.minutes, z());
    else {
      const o = B.hours, w = B.minutes;
      i.value = [
        Le(b(), o[0], w[0], z()),
        Le(b(), o[1], w[1], z(!1))
      ];
    }
  }, ee = () => {
    i.value = Y(b(), X.value(0), Q.value(0));
  }, E = () => {
    i.value = b();
  }, z = (o = !0) => e.enableSeconds ? Array.isArray(B.seconds) ? o ? B.seconds[0] : B.seconds[1] : B.seconds : 0, g = () => {
    const o = r();
    if (o) {
      const w = Array.isArray(o), x = w ? [+o[0].hours, +o[1].hours] : +o.hours, te = w ? [+o[0].minutes, +o[1].minutes] : +o.minutes, ge = w ? [+o[0].seconds, +o[1].seconds] : +o.seconds;
      M("hours", x), M("minutes", te), e.enableSeconds && M("seconds", ge);
    }
  }, c = () => Array.isArray(i.value) && i.value.length ? i.value[i.value.length - 1] : null, A = () => {
    if (Array.isArray(i.value) && i.value.length === 2) {
      const o = b(
        b(i.value[1] ? i.value[1] : at(i.value[0], 1))
      ), [w, x] = [ve(i.value[0]), me(i.value[0])], [te, ge] = [ve(i.value[1]), me(i.value[1])];
      (w !== te || w === te && x !== ge) && e.multiCalendarsSolo && C(1, ve(o), me(o));
    }
  }, T = (o) => {
    const w = at(o, 1);
    return { month: ve(w), year: me(w) };
  }, K = (o) => {
    const w = ve(b(o)), x = me(b(o));
    if (C(0, w, x), V.value.multiCalendars > 0)
      for (let te = 1; te < V.value.multiCalendars; te++) {
        const ge = T(
          Ie(b(o), { year: X.value(te - 1), month: Q.value(te - 1) })
        );
        C(te, ge.month, ge.year);
      }
  }, l = (o) => {
    if (i.value && Array.isArray(i.value))
      if (i.value.some((w) => ye(o, w))) {
        const w = i.value.filter((x) => !ye(x, o));
        i.value = w.length ? w : null;
      } else
        (e.multiDatesLimit && +e.multiDatesLimit > i.value.length || !e.multiDatesLimit) && i.value.push(o);
    else
      i.value = [o];
  }, f = (o, w) => {
    const x = Be(o, w) ? w : o, te = Be(w, o) ? w : o;
    return pn({ start: x, end: te });
  }, k = (o) => {
    if (Array.isArray(i.value) && i.value[0]) {
      const w = la(o, i.value[0]), x = f(i.value[0], o), te = x.length === 1 ? 0 : x.filter((y) => u(y)).length, ge = Math.abs(w) - te;
      if (e.minRange && e.maxRange)
        return ge >= +e.minRange && ge <= +e.maxRange;
      if (e.minRange)
        return ge >= +e.minRange;
      if (e.maxRange)
        return ge <= +e.maxRange;
    }
    return !0;
  }, R = (o) => Array.isArray(i.value) && i.value.length === 2 ? e.fixedStart && (Be(o, i.value[0]) || ye(o, i.value[0])) ? [i.value[0], o] : e.fixedEnd && (Pe(o, i.value[1]) || ye(o, i.value[1])) ? [o, i.value[1]] : i.value : [], ie = () => {
    e.autoApply && n("auto-apply");
  }, ce = () => {
    e.autoApply && n("select-date");
  }, v = (o) => !pn({ start: o[0], end: o[1] }).some((x) => u(x)), d = (o) => (i.value = $(b(o.value)), ie()), O = (o) => {
    const w = Le(b(o.value), B.hours, B.minutes, z());
    e.multiDates ? l(w) : i.value = w, a(), ie();
  }, de = () => {
    _.value = i.value ? i.value.slice() : [], _.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (_.value = []);
  }, De = (o, w) => {
    const x = [b(o.value), ct(b(o.value), +e.autoRange)];
    v(x) && (w && K(o.value), _.value = x);
  }, we = (o) => {
    _.value = R(b(o.value));
  }, We = (o) => e.noDisabledRange ? f(_.value[0], o).some((x) => u(x)) : !1, Xe = (o, w) => {
    if (de(), e.autoRange)
      return De(o, w);
    if (e.fixedStart || e.fixedEnd)
      return we(o);
    _.value[0] ? k(b(o.value)) && !We(o.value) && (Pe(b(o.value), b(_.value[0])) ? _.value.unshift(b(o.value)) : _.value[1] = b(o.value)) : _.value[0] = b(o.value);
  }, F = (o) => {
    _.value[o] = Le(
      _.value[o],
      B.hours[o],
      B.minutes[o],
      z(o !== 1)
    );
  }, be = () => {
    _.value.length && (_.value[0] && !_.value[1] ? F(0) : (F(0), F(1), a()), i.value = _.value.slice(), _.value[0] && _.value[1] && e.autoApply && n("auto-apply"), _.value[0] && !_.value[1] && e.modelAuto && e.autoApply && n("auto-apply"));
  }, pe = (o, w = !1) => {
    if (!(u(o.value) || !o.current && e.hideOffsetDates)) {
      if (e.weekPicker)
        return d(o);
      if (!e.range)
        return O(o);
      tt(B.hours) && tt(B.minutes) && !e.multiDates && (Xe(o, w), be());
    }
  }, Ne = (o) => {
    const w = o.find((x) => x.current);
    return w ? aa(w.value) : "";
  }, Fe = (o) => {
    for (let w = o - 1; w >= 0; w--) {
      const x = ht(Ie(b(), { month: X.value(w + 1), year: Q.value(w + 1) }), 1);
      C(w, ve(x), me(x));
    }
    for (let w = o + 1; w <= V.value.multiCalendars - 1; w++) {
      const x = at(Ie(b(), { month: X.value(w - 1), year: Q.value(w - 1) }), 1);
      C(w, ve(x), me(x));
    }
  }, et = (o) => Y(b(), X.value(o), Q.value(o)), bt = (o) => Le(o, B.hours, B.minutes, z()), $t = (o, w) => {
    const x = e.monthPicker ? X.value(o) !== w.month || !w.fromNav : Q.value(o) !== w.year;
    if (C(o, w.month, w.year), V.value.multiCalendars && !e.multiCalendarsSolo && Fe(o), e.monthPicker || e.yearPicker)
      if (e.range) {
        if (x) {
          let te = i.value ? i.value.slice() : [];
          te.length === 2 && te[1] !== null && (te = []), te.length ? Pe(et(o), te[0]) ? te.unshift(et(o)) : te[1] = et(o) : te = [et(o)], i.value = te;
        }
      } else
        i.value = et(o);
    n("update-month-year", { instance: o, month: w.month, year: w.year }), t(e.multiCalendarsSolo ? o : void 0);
  }, Ft = async (o = !1) => {
    if (e.autoApply && (e.monthPicker || e.yearPicker)) {
      await kt();
      const w = e.monthPicker ? o : !1;
      e.range ? n("auto-apply", w || !i.value || i.value.length === 1) : n("auto-apply", w);
    }
    a();
  }, Dt = (o, w) => {
    const x = Ie(b(), { month: X.value(w), year: Q.value(w) }), te = o < 0 ? at(x, 1) : ht(x, 1);
    L(ve(te), me(te), o < 0, e.preventMinMaxNavigation) && (C(w, ve(te), me(te)), V.value.multiCalendars && !e.multiCalendarsSolo && Fe(w), t());
  }, vt = (o) => {
    Nn(o) && Nn(i.value) && tt(B.hours) && tt(B.minutes) ? (o[0] && i.value[0] && (i.value[0] = Le(o[0], B.hours[0], B.minutes[0], z())), o[1] && i.value[1] && (i.value[1] = Le(o[1], B.hours[1], B.minutes[1], z(!1)))) : e.multiDates && Array.isArray(i.value) ? i.value[i.value.length - 1] = bt(o) : !e.range && !Rn(o) && (i.value = bt(o)), n("time-update");
  }, Ut = (o, w = !0, x = !1) => {
    const te = w ? o : B.hours, ge = !w && !x ? o : B.minutes, y = x ? o : B.seconds;
    if (e.range && Rn(i.value) && tt(te) && tt(ge) && tt(y) && !e.disableTimeRangeValidation) {
      const G = (ke) => Le(i.value[ke], te[ke], ge[ke], y[ke]), Me = (ke) => cn(i.value[ke], 0);
      if (ye(i.value[0], i.value[1]) && (un(G(0), Me(1)) || sn(G(1), Me(0))))
        return;
    }
    if (M("hours", te), M("minutes", ge), M("seconds", y), i.value)
      if (e.multiDates) {
        const G = c();
        G && vt(G);
      } else
        vt(i.value);
    else
      e.timePicker && vt(e.range ? [b(), b()] : b());
    a();
  }, Ht = (o, w) => {
    e.monthChangeOnScroll && Dt(e.monthChangeOnScroll !== "inverse" ? -o.deltaY : o.deltaY, w);
  }, Wt = (o, w, x = !1) => {
    e.monthChangeOnArrows && e.vertical === x && Mt(o, w);
  }, Mt = (o, w) => {
    Dt(o === "right" ? -1 : 1, w);
  };
  return {
    time: B,
    month: X,
    year: Q,
    modelValue: i,
    calendars: I,
    monthYearSelect: Ft,
    isDisabled: u,
    updateTime: Ut,
    getWeekNum: Ne,
    selectDate: pe,
    updateMonthYear: $t,
    handleScroll: Ht,
    getMarker: (o) => e.markers.find((w) => ye(p(o.value), p(w.date))),
    handleArrow: Wt,
    handleSwipe: Mt,
    selectCurrentDate: () => {
      e.range ? i.value && Array.isArray(i.value) && i.value[0] ? i.value = Pe(b(), i.value[0]) ? [b(), i.value[0]] : [i.value[0], b()] : i.value = [b()] : i.value = b(), ce();
    },
    presetDateRange: (o, w) => {
      w || o.length && o.length <= 2 && e.range && (i.value = o.map((x) => b(x)), ce());
    }
  };
}, Bl = (e, n, a) => {
  const t = W(), {
    getZonedToUtc: r,
    getZonedDate: u,
    formatDate: p,
    getDefaultPattern: $,
    checkRangeEnabled: Y,
    checkPartialRangeValue: L,
    isValidDate: V,
    setDateMonthOrYear: i,
    defaults: _
  } = Ee(n), I = W("");
  wt(t, () => {
    e("internal-model-change", t.value);
  });
  const B = (v) => {
    const d = v || b();
    return {
      hours: Ke(d),
      minutes: xe(d),
      seconds: n.enableSeconds ? dt(d) : 0
    };
  }, X = (v) => ({ month: ve(v), year: me(v) }), Q = (v) => Array.isArray(v) ? Y(() => [
    rt(b(), v[0]),
    v[1] ? rt(b(), v[1]) : L()
  ]) : rt(b(), +v), C = (v) => Array.isArray(v) ? [
    Le(null, +v[0].hours, +v[0].minutes, v[0].seconds),
    Le(null, +v[1].hours, +v[1].minutes, v[1].seconds)
  ] : Le(null, v.hours, v.minutes, v == null ? void 0 : v.seconds), M = (v) => Array.isArray(v) ? Y(() => [
    i(null, +v[0].month, +v[0].year),
    v[1] ? i(null, +v[1].month, +v[1].year) : L()
  ]) : i(null, +v.month, +v.year), Z = (v) => {
    if (Array.isArray(v))
      return v.map((d) => K(d));
    throw new Error(Vt.dateArr("multi-dates"));
  }, ae = (v) => {
    if (Array.isArray(v))
      return [b(v[0]), b(v[1])];
    throw new Error(Vt.dateArr("week-picker"));
  }, ne = (v) => n.modelAuto ? Array.isArray(v) ? [K(v[0]), K(v[1])] : n.autoApply ? [K(v)] : [K(v), null] : Array.isArray(v) ? Y(() => [
    K(v[0]),
    v[1] ? K(v[1]) : L()
  ]) : K(v), P = () => {
    Array.isArray(t.value) && n.range && t.value.length === 1 && t.value.push(L());
  }, m = () => {
    const v = t.value;
    return [
      l(v[0]),
      v[1] ? l(v[1]) : L()
    ];
  }, N = () => t.value[1] ? m() : l(_e(t.value[0])), j = () => t.value.map((v) => l(v)), ee = () => (P(), n.modelAuto ? N() : n.multiDates ? j() : Array.isArray(t.value) ? Y(() => m()) : l(_e(t.value))), E = (v) => v ? n.timePicker ? C(_e(v)) : n.monthPicker ? M(_e(v)) : n.yearPicker ? Q(_e(v)) : n.multiDates ? Z(_e(v)) : n.weekPicker ? ae(_e(v)) : ne(_e(v)) : null, z = (v) => {
    const d = E(v);
    V(_e(d)) ? (t.value = _e(d), T()) : (t.value = null, I.value = "");
  }, g = () => {
    var d;
    const v = (O) => {
      var de;
      return yt(O, (de = _.value.textInputOptions) == null ? void 0 : de.format);
    };
    return `${v(t.value[0])} ${(d = _.value.textInputOptions) == null ? void 0 : d.rangeSeparator} ${t.value[1] ? v(t.value[1]) : ""}`;
  }, c = () => {
    var v;
    return a.value && t.value ? Array.isArray(t.value) ? g() : yt(t.value, (v = _.value.textInputOptions) == null ? void 0 : v.format) : p(t.value);
  }, A = () => {
    var v;
    return t.value ? n.multiDates ? t.value.map((d) => p(d)).join("; ") : n.textInput && typeof ((v = _.value.textInputOptions) == null ? void 0 : v.format) == "string" ? c() : p(t.value) : "";
  }, T = () => {
    !n.format || typeof n.format == "string" ? I.value = A() : I.value = n.format(t.value);
  }, K = (v) => {
    if (n.utc) {
      const d = new Date(v);
      return n.utc === "preserve" ? new Date(d.getTime() + d.getTimezoneOffset() * 6e4) : d;
    }
    return n.modelType ? n.modelType === "date" || n.modelType === "timestamp" ? u(new Date(v)) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? nn(v, $(), new Date()) : u(nn(v, n.modelType, new Date())) : u(new Date(v));
  }, l = (v) => n.utc ? Xa(v, n.utc === "preserve") : n.modelType ? n.modelType === "timestamp" ? +r(v) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? p(r(v)) : p(r(v), n.modelType) : r(v), f = (v) => {
    e("update:model-value", v);
  }, k = (v) => Array.isArray(t.value) ? [
    v(t.value[0]),
    t.value[1] ? v(t.value[1]) : L()
  ] : v(_e(t.value)), R = (v) => f(_e(k(v)));
  return {
    inputValue: I,
    internalModelValue: t,
    checkBeforeEmit: () => t.value ? n.range ? n.partialRange ? t.value.length >= 1 : t.value.length === 2 : !!t.value : !1,
    parseExternalModelValue: z,
    formatInputValue: T,
    emitModelValue: () => (T(), n.monthPicker ? R(X) : n.timePicker ? R(B) : n.yearPicker ? R(me) : n.weekPicker ? f(t.value) : f(ee()))
  };
}, Yl = (e, n) => {
  const { validateMonthYearInRange: a, validateMaxDate: t, validateMinDate: r, defaults: u } = Ee(e), p = (i, _) => {
    let I = i;
    return u.value.filters.months.includes(ve(I)) ? (I = _ ? at(i, 1) : ht(i, 1), p(I, _)) : I;
  }, $ = (i, _) => {
    let I = i;
    return u.value.filters.years.includes(me(I)) ? (I = _ ? ra(i, 1) : oa(i, 1), $(I, _)) : I;
  }, Y = (i) => {
    const _ = Ie(new Date(), { month: e.month, year: e.year });
    let I = i ? at(_, 1) : ht(_, 1), B = ve(I), X = me(I);
    u.value.filters.months.includes(B) && (I = p(I, i), B = ve(I), X = me(I)), u.value.filters.years.includes(X) && (I = $(I, i), X = me(I)), a(B, X, i, e.preventMinMaxNavigation) && L(B, X);
  }, L = (i, _) => {
    n("update-month-year", { month: i, year: _ });
  }, V = U(() => (i) => {
    if (!e.preventMinMaxNavigation || i && !e.maxDate || !i && !e.minDate)
      return !1;
    const _ = Ie(new Date(), { month: e.month, year: e.year }), I = i ? at(_, 1) : ht(_, 1), B = [ve(I), me(I)];
    return i ? !t(...B) : !r(...B);
  });
  return { handleMonthYearChange: Y, isDisabled: V, updateMonthYear: L };
};
var Rt = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(Rt || {});
const Vl = (e, n, a, t) => {
  const r = W({
    top: "0",
    left: "0",
    transform: "none"
  }), u = W(!1), p = tn(t, "teleportCenter");
  wt(p, () => {
    Q();
  });
  const $ = (P) => {
    const m = P.getBoundingClientRect();
    return {
      left: m.left + window.scrollX,
      top: m.top + window.scrollY
    };
  }, Y = (P) => {
    const m = P.getBoundingClientRect();
    let N = 0, j = 0;
    for (; P && !isNaN(P.offsetLeft) && !isNaN(P.offsetTop); )
      N += P.offsetLeft - P.scrollLeft, j = m.top + P.scrollTop, P = P.offsetParent;
    return { top: j, left: N };
  }, L = (P, m) => {
    r.value.left = `${P + m}px`, r.value.transform = "translateX(-100%)";
  }, V = (P) => {
    r.value.left = `${P}px`, r.value.transform = "translateX(0)";
  }, i = (P, m, N = !1) => {
    t.position === Rt.left && V(P), t.position === Rt.right && L(P, m), t.position === Rt.center && (r.value.left = `${P + m / 2}px`, r.value.transform = N ? "translate(-50%, -50%)" : "translateX(-50%)");
  }, _ = (P) => {
    const { width: m, height: N } = P.getBoundingClientRect(), { top: j, left: ee } = t.altPosition ? Y(P) : $(P);
    return { top: j, left: ee, width: m, height: N };
  }, I = () => {
    const P = Ce(n);
    if (P) {
      const { top: m, left: N, width: j, height: ee } = _(P);
      r.value.top = `${m + ee / 2}px`, r.value.transform = "translateY(-50%)", i(N, j, !0);
    }
  }, B = () => {
    r.value.left = "50%", r.value.top = "50%", r.value.transform = "translate(-50%, -50%)", r.value.position = "fixed";
  }, X = () => {
    const P = Ce(n);
    r.value = t.altPosition(P);
  }, Q = (P = !0) => {
    if (!t.inline)
      return p.value ? B() : t.altPosition && typeof t.altPosition != "boolean" ? X() : (P && a("recalculate-position"), ne());
  }, C = (P, m) => {
    const { top: N, left: j, height: ee, width: E } = _(P);
    r.value.top = `${ee + N + +t.offset}px`, i(j, E), Z(P, m), u.value = !1;
  }, M = (P, m) => {
    const { top: N, left: j, width: ee } = _(P), { height: E } = m.getBoundingClientRect();
    r.value.top = `${N - E - +t.offset}px`, i(j, ee), Z(P, m), u.value = !0;
  }, Z = (P, m) => {
    if (t.autoPosition) {
      const { left: N, width: j } = _(P), { left: ee, right: E } = m.getBoundingClientRect();
      if (ee < 0)
        return V(N);
      if (E > document.documentElement.clientWidth)
        return L(N, j);
    }
  }, ae = (P, m) => {
    const { height: N } = m.getBoundingClientRect(), { top: j, height: ee } = P.getBoundingClientRect(), z = window.innerHeight - j - ee, g = j;
    return N <= z ? C(P, m) : N > z && N <= g ? M(P, m) : z >= g ? C(P, m) : M(P, m);
  }, ne = () => {
    const P = Ce(n), m = Ce(e);
    if (P && m)
      return t.autoPosition ? ae(P, m) : C(P, m);
  };
  return { openOnTop: u, menuPosition: r, setMenuPosition: Q, setInitialPosition: I };
}, it = [
  { name: "clock-icon", use: ["time", "calendar"] },
  { name: "arrow-left", use: ["month-year", "calendar"] },
  { name: "arrow-right", use: ["month-year", "calendar"] },
  { name: "arrow-up", use: ["time", "calendar"] },
  { name: "arrow-down", use: ["time", "calendar"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar"] },
  { name: "day", use: ["calendar"] },
  { name: "month-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay", use: ["month-year"] },
  { name: "month-overlay", use: ["month-year"] },
  { name: "month-overlay-header", use: ["month-year"] },
  { name: "year-overlay-header", use: ["month-year"] },
  { name: "hours-overlay-value", use: ["calendar", "time"] },
  { name: "minutes-overlay-value", use: ["calendar", "time"] },
  { name: "seconds-overlay-value", use: ["calendar", "time"] },
  { name: "hours", use: ["calendar", "time"] },
  { name: "minutes", use: ["calendar", "time"] },
  { name: "month", use: ["calendar", "month-year"] },
  { name: "year", use: ["calendar", "month-year"] },
  { name: "action-select", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar"] },
  { name: "marker-tooltip", use: ["calendar"] },
  { name: "now-button", use: [] },
  { name: "time-picker-overlay", use: ["calendar", "time"] },
  { name: "am-pm-button", use: ["calendar", "time"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year"] },
  { name: "time-picker", use: ["menu"] },
  { name: "action-row", use: ["menu"] }
], El = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], Ll = {
  all: () => it,
  monthYear: () => it.filter((e) => e.use.includes("month-year")),
  input: () => El,
  timePicker: () => it.filter((e) => e.use.includes("time")),
  action: () => it.filter((e) => e.use.includes("action")),
  calendar: () => it.filter((e) => e.use.includes("calendar")),
  menu: () => it.filter((e) => e.use.includes("menu"))
}, lt = (e, n, a) => {
  const t = [];
  return Ll[n]().forEach((r) => {
    e[r.name] && t.push(r.name);
  }), a && a.length && a.forEach((r) => {
    r.slot && t.push(r.slot);
  }), t;
}, Lt = (e) => ({ transitionName: U(() => (a) => e && typeof e != "boolean" ? a ? e.open : e.close : ""), showTransition: !!e }), Qe = {
  multiCalendars: { type: [Boolean, Number, String], default: null },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  closeOnScroll: { type: Boolean, default: !1 },
  autoPosition: { type: Boolean, default: !0 },
  closeOnAutoApply: { type: Boolean, default: !0 },
  teleport: { type: [String, Object], default: "body" },
  altPosition: { type: [Boolean, Function], default: !1 },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  multiCalendarsSolo: { type: Boolean, default: !1 },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  monthYearComponent: { type: Object, default: null },
  timePickerComponent: { type: Object, default: null },
  actionRowComponent: { type: Object, default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: () => [] },
  showNowButton: { type: Boolean, default: !1 },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  modeHeight: { type: [Number, String], default: 255 },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetRanges: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  keepActionRow: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  multiStatic: { type: Boolean, default: !0 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: { type: Boolean, default: !1 },
  calendarClassName: { type: String, default: null },
  noSwipe: { type: Boolean, default: !1 },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  inlineWithInput: { type: Boolean, default: !1 },
  textInputOptions: { type: Object, default: () => null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: Boolean, default: !1 },
  textInput: { type: Boolean, default: !1 },
  onClickOutside: { type: Function, default: null },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: Boolean, default: !1 }
}, Fl = ["aria-label", "aria-disabled", "aria-readonly"], Ul = {
  key: 1,
  class: "dp__input_wrap"
}, Hl = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "onKeydown"], Wl = {
  key: 2,
  class: "dp__input_icon"
}, zl = {
  key: 4,
  class: "dp__clear_icon"
}, jl = /* @__PURE__ */ He({
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...Qe
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { getDefaultPattern: r, isValidDate: u, defaults: p } = Ee(t), $ = W(), Y = W(null), L = W(!1), V = U(
      () => ({
        dp__pointer: !t.disabled && !t.readonly && !t.textInput,
        dp__disabled: t.disabled,
        dp__input_readonly: !t.textInput,
        dp__input: !0,
        dp__input_icon_pad: !t.hideInputIcon,
        dp__input_valid: t.state,
        dp__input_invalid: t.state === !1,
        dp__input_focus: L.value || t.isMenuOpen,
        dp__input_reg: !t.textInput,
        [t.inputClassName]: !!t.inputClassName
      })
    ), i = () => {
      a("set-input-date", null), t.autoApply && (a("set-empty-date"), $.value = null);
    }, _ = (m) => {
      var N;
      return Za(m, ((N = p.value.textInputOptions) == null ? void 0 : N.format) || r());
    }, I = (m) => {
      const { rangeSeparator: N } = p.value.textInputOptions;
      if (t.range) {
        const [j, ee] = m.split(`${N}`);
        if (j && ee) {
          const E = _(j.trim()), z = _(ee.trim());
          $.value = E && z ? [E, z] : null;
        }
      } else
        $.value = _(m);
    }, B = (m) => {
      var j;
      const { value: N } = m.target;
      N !== "" ? (((j = p.value.textInputOptions) == null ? void 0 : j.openMenu) && !t.isMenuOpen && a("open"), I(N), a("set-input-date", $.value)) : i(), a("update:input-value", N);
    }, X = () => {
      var m, N;
      ((m = p.value.textInputOptions) == null ? void 0 : m.enterSubmit) && u($.value) && t.inputValue !== "" ? (a("set-input-date", $.value, !0), $.value = null) : ((N = p.value.textInputOptions) == null ? void 0 : N.enterSubmit) && t.inputValue === "" && ($.value = null, a("clear"));
    }, Q = () => {
      var m, N;
      ((m = p.value.textInputOptions) == null ? void 0 : m.tabSubmit) && u($.value) && t.inputValue !== "" ? (a("set-input-date", $.value, !0), $.value = null) : ((N = p.value.textInputOptions) == null ? void 0 : N.tabSubmit) && t.inputValue === "" && ($.value = null, a("clear"));
    }, C = () => {
      L.value = !0, a("focus");
    }, M = (m) => {
      var N;
      m.preventDefault(), m.stopImmediatePropagation(), m.stopPropagation(), t.textInput && ((N = p.value.textInputOptions) == null ? void 0 : N.openMenu) && !t.inlineWithInput ? t.isMenuOpen ? p.value.textInputOptions.enterSubmit && a("select-date") : a("open") : t.textInput || a("toggle");
    }, Z = () => {
      L.value = !1, t.isMenuOpen || a("blur"), t.autoApply && t.textInput && $.value && (a("set-input-date", $.value), a("select-date"), $.value = null);
    }, ae = () => {
      a("clear");
    }, ne = (m) => {
      t.textInput || m.preventDefault();
    };
    return n({
      focusInput: () => {
        Y.value && Y.value.focus({ preventScroll: !0 });
      }
    }), (m, N) => {
      var j;
      return h(), S("div", {
        onClick: M,
        "aria-label": (j = s(p).ariaLabels) == null ? void 0 : j.input,
        role: "textbox",
        "aria-multiline": "false",
        "aria-disabled": m.disabled,
        "aria-readonly": m.readonly
      }, [
        m.$slots.trigger && !m.$slots["dp-input"] && !m.inline ? H(m.$slots, "trigger", { key: 0 }) : D("", !0),
        !m.$slots.trigger && (!m.inline || m.inlineWithInput) ? (h(), S("div", Ul, [
          m.$slots["dp-input"] && !m.$slots.trigger && !m.inline ? H(m.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            onInput: B,
            onEnter: X,
            onTab: Q,
            onClear: ae
          }) : D("", !0),
          m.$slots["dp-input"] ? D("", !0) : (h(), S("input", {
            key: 1,
            ref_key: "inputRef",
            ref: Y,
            id: m.uid ? `dp-input-${m.uid}` : void 0,
            name: m.name,
            class: he(s(V)),
            inputmode: m.textInput ? "text" : "none",
            placeholder: m.placeholder,
            disabled: m.disabled,
            readonly: m.readonly,
            required: m.required,
            value: e.inputValue,
            autocomplete: m.autocomplete,
            onInput: B,
            onKeydown: [
              re(M, ["enter"]),
              re(Q, ["tab"])
            ],
            onBlur: Z,
            onFocus: C,
            onKeypress: ne
          }, null, 42, Hl)),
          m.$slots["input-icon"] && !m.hideInputIcon ? (h(), S("span", Wl, [
            H(m.$slots, "input-icon")
          ])) : D("", !0),
          !m.$slots["input-icon"] && !m.hideInputIcon && !m.$slots["dp-input"] ? (h(), ue(s(Et), {
            key: 3,
            class: "dp__input_icon dp__input_icons"
          })) : D("", !0),
          m.$slots["clear-icon"] && e.inputValue && m.clearable && !m.disabled && !m.readonly ? (h(), S("span", zl, [
            H(m.$slots, "clear-icon", { clear: ae })
          ])) : D("", !0),
          m.clearable && !m.$slots["clear-icon"] && e.inputValue && !m.disabled && !m.readonly ? (h(), ue(s($a), {
            key: 5,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: Ge(ae, ["stop", "prevent"])
          }, null, 8, ["onClick"])) : D("", !0)
        ])) : D("", !0)
      ], 8, Fl);
    };
  }
}), Kl = { class: "dp__selection_preview" }, xl = { class: "dp__action_buttons" }, Gl = ["onKeydown"], Zl = /* @__PURE__ */ He({
  __name: "ActionRow",
  props: {
    calendarWidth: { type: Number, default: 0 },
    menuMount: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...Qe
  },
  emits: ["close-picker", "select-date", "invalid-select"],
  setup(e, { emit: n }) {
    const a = e, { formatDate: t, isValidTime: r, defaults: u } = Ee(a), { buildMatrix: p } = Je(), $ = W(null), Y = W(null);
    Ue(() => {
      a.arrowNavigation && p([Ce($), Ce(Y)], "actionRow");
    });
    const L = U(() => a.range && !a.partialRange && a.internalModelValue ? a.internalModelValue.length === 2 : !0), V = U(() => ({
      dp__action: !0,
      dp__select: !0,
      dp__action_disabled: !i.value || !_.value || !L.value
    })), i = U(() => !a.enableTimePicker || a.ignoreTimeValidation ? !0 : r(a.internalModelValue)), _ = U(() => a.monthPicker ? Q(a.internalModelValue) : !0), I = () => {
      const M = u.value.previewFormat;
      return a.timePicker || a.monthPicker, M(_e(a.internalModelValue));
    }, B = () => {
      const M = a.internalModelValue;
      return u.value.multiCalendars > 0 ? `${t(M[0])} - ${t(M[1])}` : [t(M[0]), t(M[1])];
    }, X = U(() => !a.internalModelValue || !a.menuMount ? "" : typeof u.value.previewFormat == "string" ? Array.isArray(a.internalModelValue) ? a.internalModelValue.length === 2 && a.internalModelValue[1] ? B() : a.multiDates ? a.internalModelValue.map((M) => `${t(M)}`) : a.modelAuto ? `${t(a.internalModelValue[0])}` : `${t(a.internalModelValue[0])} -` : t(a.internalModelValue) : I()), Q = (M) => {
      if (!a.monthPicker)
        return !0;
      let Z = !0;
      return a.minDate && a.maxDate ? Be(b(M), b(a.minDate)) && Pe(b(M), b(a.maxDate)) : (a.minDate && (Z = Be(b(M), b(a.minDate))), a.maxDate && (Z = Pe(b(M), b(a.maxDate))), Z);
    }, C = () => {
      i.value && _.value && L.value ? n("select-date") : n("invalid-select");
    };
    return (M, Z) => (h(), S("div", {
      class: "dp__action_row",
      style: ut(e.calendarWidth ? { width: `${e.calendarWidth}px` } : {})
    }, [
      J("div", Kl, [
        M.$slots["action-preview"] ? H(M.$slots, "action-preview", {
          key: 0,
          value: e.internalModelValue
        }) : D("", !0),
        M.$slots["action-preview"] ? D("", !0) : (h(), S(se, { key: 1 }, [
          Array.isArray(s(X)) ? D("", !0) : (h(), S(se, { key: 0 }, [
            ze(Se(s(X)), 1)
          ], 64)),
          Array.isArray(s(X)) ? (h(!0), S(se, { key: 1 }, $e(s(X), (ae, ne) => (h(), S("div", { key: ne }, Se(ae), 1))), 128)) : D("", !0)
        ], 64))
      ]),
      J("div", xl, [
        M.$slots["action-select"] ? H(M.$slots, "action-select", {
          key: 0,
          value: e.internalModelValue
        }) : D("", !0),
        M.$slots["action-select"] ? D("", !0) : (h(), S(se, { key: 1 }, [
          M.inline ? D("", !0) : (h(), S("span", {
            key: 0,
            class: "dp__action dp__cancel",
            ref_key: "cancelButtonRef",
            ref: $,
            tabindex: "0",
            onClick: Z[0] || (Z[0] = (ae) => M.$emit("close-picker")),
            onKeydown: [
              Z[1] || (Z[1] = re((ae) => M.$emit("close-picker"), ["enter"])),
              Z[2] || (Z[2] = re((ae) => M.$emit("close-picker"), ["space"]))
            ]
          }, Se(M.cancelText), 545)),
          J("span", {
            class: he(s(V)),
            tabindex: "0",
            onKeydown: [
              re(C, ["enter"]),
              re(C, ["space"])
            ],
            onClick: C,
            "data-test": "select-button",
            ref_key: "selectButtonRef",
            ref: Y
          }, Se(M.selectText), 43, Gl)
        ], 64))
      ])
    ], 4));
  }
}), Xl = ["aria-label"], ql = {
  class: "dp__calendar_header",
  role: "row"
}, Jl = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, Ql = /* @__PURE__ */ J("div", { class: "dp__calendar_header_separator" }, null, -1), er = ["aria-label"], tr = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, nr = { class: "dp__cell_inner" }, ar = ["aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseover"], lr = /* @__PURE__ */ J("div", { class: "dp__arrow_bottom_tp" }, null, -1), rr = /* @__PURE__ */ He({
  __name: "Calendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    getWeekNum: {
      type: Function,
      default: () => ""
    },
    specificMode: { type: Boolean, default: !1 },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...Qe
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMultiLevelMatrix: r } = Je(), { setDateMonthOrYear: u, defaults: p } = Ee(t), $ = W(null), Y = W({ bottom: "", left: "", transform: "" }), L = W([]), V = W(null), i = W(!0), _ = W(""), I = W({ startX: 0, endX: 0, startY: 0, endY: 0 }), B = U(() => t.dayNames ? Array.isArray(t.dayNames) ? t.dayNames : t.dayNames(t.locale, +t.weekStart) : Dl(t.locale, +t.weekStart));
    Ue(() => {
      a("mount", { cmp: "calendar", refs: L }), t.noSwipe || V.value && (V.value.addEventListener("touchstart", N, { passive: !1 }), V.value.addEventListener("touchend", j, { passive: !1 }), V.value.addEventListener("touchmove", ee, { passive: !1 })), t.monthChangeOnScroll && V.value && V.value.addEventListener("wheel", g, { passive: !1 });
    });
    const X = (c) => c ? t.vertical ? "vNext" : "next" : t.vertical ? "vPrevious" : "previous", Q = (c, A) => {
      if (t.transitions) {
        const T = je(u(b(), t.month, t.year));
        _.value = Be(je(u(b(), c, A)), T) ? p.value.transitions[X(!0)] : p.value.transitions[X(!1)], i.value = !1, kt(() => {
          i.value = !0;
        });
      }
    }, C = U(
      () => ({
        dp__calendar_wrap: !0,
        [t.calendarClassName]: !!t.calendarClassName
      })
    ), M = U(() => (c) => {
      const A = Tl(c);
      return {
        dp__marker_dot: A.type === "dot",
        dp__marker_line: A.type === "line"
      };
    }), Z = U(() => (c) => ye(c, $.value)), ae = U(() => ({
      dp__calendar: !0,
      dp__calendar_next: p.value.multiCalendars > 0 && t.instance !== 0
    })), ne = U(() => t.specificMode ? { height: `${t.modeHeight}px` } : void 0), P = (c, A, T) => {
      var K, l;
      if (a("set-hover-date", c), (l = (K = c.marker) == null ? void 0 : K.tooltip) != null && l.length) {
        const f = Ce(L.value[A][T]);
        if (f) {
          const { width: k, height: R } = f.getBoundingClientRect();
          Y.value = {
            bottom: `${R}px`,
            left: `${k / 2}px`,
            transform: "translateX(-50%)"
          }, $.value = c.value;
        }
      }
    }, m = () => {
      $.value = null;
    }, N = (c) => {
      I.value.startX = c.changedTouches[0].screenX, I.value.startY = c.changedTouches[0].screenY;
    }, j = (c) => {
      I.value.endX = c.changedTouches[0].screenX, I.value.endY = c.changedTouches[0].screenY, E();
    }, ee = (c) => {
      t.vertical && !t.inline && c.preventDefault();
    }, E = () => {
      const c = t.vertical ? "Y" : "X";
      Math.abs(I.value[`start${c}`] - I.value[`end${c}`]) > 10 && a("handle-swipe", I.value[`start${c}`] > I.value[`end${c}`] ? "right" : "left");
    }, z = (c, A, T) => {
      c && (Array.isArray(L.value[A]) ? L.value[A][T] = c : L.value[A] = [c]), t.arrowNavigation && r(L.value, "calendar");
    }, g = (c) => {
      t.monthChangeOnScroll && (c.preventDefault(), a("handle-scroll", c));
    };
    return n({ triggerTransition: Q }), (c, A) => {
      var T;
      return h(), S("div", {
        class: he(s(ae))
      }, [
        J("div", {
          style: ut(s(ne))
        }, [
          e.specificMode ? D("", !0) : (h(), S("div", {
            key: 0,
            ref_key: "calendarWrapRef",
            ref: V,
            class: he(s(C)),
            role: "grid",
            "aria-label": (T = s(p).ariaLabels) == null ? void 0 : T.calendarWrap
          }, [
            J("div", ql, [
              c.weekNumbers ? (h(), S("div", Jl, Se(c.weekNumName), 1)) : D("", !0),
              (h(!0), S(se, null, $e(s(B), (K, l) => (h(), S("div", {
                class: "dp__calendar_header_item",
                role: "gridcell",
                key: l,
                "data-test": "calendar-header"
              }, [
                c.$slots["calendar-header"] ? H(c.$slots, "calendar-header", {
                  key: 0,
                  day: K,
                  index: l
                }) : D("", !0),
                c.$slots["calendar-header"] ? D("", !0) : (h(), S(se, { key: 1 }, [
                  ze(Se(K), 1)
                ], 64))
              ]))), 128))
            ]),
            Ql,
            qe(ft, {
              name: _.value,
              css: !!c.transitions
            }, {
              default: le(() => {
                var K;
                return [
                  i.value ? (h(), S("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "grid",
                    "aria-label": (K = s(p).ariaLabels) == null ? void 0 : K.calendarDays
                  }, [
                    (h(!0), S(se, null, $e(e.mappedDates, (l, f) => (h(), S("div", {
                      class: "dp__calendar_row",
                      role: "row",
                      key: f
                    }, [
                      c.weekNumbers ? (h(), S("div", tr, [
                        J("div", nr, Se(e.getWeekNum(l.days)), 1)
                      ])) : D("", !0),
                      (h(!0), S(se, null, $e(l.days, (k, R) => {
                        var ie, ce, v;
                        return h(), S("div", {
                          role: "gridcell",
                          class: "dp__calendar_item",
                          ref_for: !0,
                          ref: (d) => z(d, f, R),
                          key: R + f,
                          "aria-selected": k.classData.dp__active_date || k.classData.dp__range_start || k.classData.dp__range_start,
                          "aria-disabled": k.classData.dp__cell_disabled,
                          "aria-label": (ce = (ie = s(p).ariaLabels) == null ? void 0 : ie.day) == null ? void 0 : ce.call(ie, k),
                          tabindex: "0",
                          "data-test": k.value,
                          onClick: Ge((d) => c.$emit("select-date", k), ["stop", "prevent"]),
                          onKeydown: [
                            re((d) => c.$emit("select-date", k), ["enter"]),
                            re((d) => c.$emit("handle-space", k), ["space"])
                          ],
                          onMouseover: (d) => P(k, f, R),
                          onMouseleave: m
                        }, [
                          J("div", {
                            class: he(["dp__cell_inner", k.classData])
                          }, [
                            c.$slots.day ? H(c.$slots, "day", {
                              key: 0,
                              day: +k.text,
                              date: k.value
                            }) : D("", !0),
                            c.$slots.day ? D("", !0) : (h(), S(se, { key: 1 }, [
                              ze(Se(k.text), 1)
                            ], 64)),
                            k.marker ? (h(), S("div", {
                              key: 2,
                              class: he(s(M)(k.marker)),
                              style: ut(k.marker.color ? { backgroundColor: k.marker.color } : {})
                            }, null, 6)) : D("", !0),
                            s(Z)(k.value) ? (h(), S("div", {
                              key: 3,
                              class: "dp__marker_tooltip",
                              style: ut(Y.value)
                            }, [
                              (v = k.marker) != null && v.tooltip ? (h(), S("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: A[0] || (A[0] = Ge(() => {
                                }, ["stop"]))
                              }, [
                                (h(!0), S(se, null, $e(k.marker.tooltip, (d, O) => (h(), S("div", {
                                  key: O,
                                  class: "dp__tooltip_text"
                                }, [
                                  c.$slots["marker-tooltip"] ? H(c.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltop: d,
                                    day: k.value
                                  }) : D("", !0),
                                  c.$slots["marker-tooltip"] ? D("", !0) : (h(), S(se, { key: 1 }, [
                                    J("div", {
                                      class: "dp__tooltip_mark",
                                      style: ut(d.color ? { backgroundColor: d.color } : {})
                                    }, null, 4),
                                    J("div", null, Se(d.text), 1)
                                  ], 64))
                                ]))), 128)),
                                lr
                              ])) : D("", !0)
                            ], 4)) : D("", !0)
                          ], 2)
                        ], 40, ar);
                      }), 128))
                    ]))), 128))
                  ], 8, er)) : D("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 10, Xl))
        ], 4)
      ], 2);
    };
  }
}), or = ["aria-label", "aria-disabled"], Qt = /* @__PURE__ */ He({
  __name: "ActionIcon",
  props: {
    ariaLabel: { type: String, default: "" },
    disabled: { type: Boolean, default: !1 }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: n }) {
    const a = W(null);
    return Ue(() => n("set-ref", a)), (t, r) => (h(), S("div", {
      class: "dp__month_year_col_nav",
      onClick: r[0] || (r[0] = (u) => t.$emit("activate")),
      onKeydown: [
        r[1] || (r[1] = re((u) => t.$emit("activate"), ["enter"])),
        r[2] || (r[2] = re((u) => t.$emit("activate"), ["space"]))
      ],
      tabindex: "0",
      role: "button",
      "aria-label": e.ariaLabel,
      "aria-disabled": e.disabled,
      ref_key: "elRef",
      ref: a
    }, [
      J("div", {
        class: he(["dp__inner_nav", { dp__inner_nav_disabled: e.disabled }])
      }, [
        H(t.$slots, "default")
      ], 2)
    ], 40, or));
  }
}), sr = ["onKeydown"], ir = { class: "dp__selection_grid_header" }, ur = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], cr = ["aria-label", "onKeydown"], gt = /* @__PURE__ */ He({
  __name: "SelectionGrid",
  props: {
    items: { type: Array, default: () => [] },
    modelValue: { type: [String, Number], default: null },
    multiModelValue: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: [Number, String], default: null },
    maxValue: { type: [Number, String], default: null },
    year: { type: Number, default: 0 },
    skipActive: { type: Boolean, default: !1 },
    headerRefs: { type: Array, default: () => [] },
    skipButtonRef: { type: Boolean, default: !1 },
    monthPicker: { type: Boolean, default: !1 },
    yearPicker: { type: Boolean, default: !1 },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "selected", "toggle", "reset-flow"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setSelectionGrid: r, buildMultiLevelMatrix: u, setMonthPicker: p } = Je(), { hideNavigationButtons: $ } = Ee(t), Y = W(!1), L = W(null), V = W(null), i = W([]), _ = W(), I = W(null);
    Zn(() => {
      L.value = null;
    }), Ue(() => {
      kt().then(() => m()), X(), B(!0);
    }), rn(() => B(!1));
    const B = (c) => {
      var A;
      t.arrowNavigation && ((A = t.headerRefs) != null && A.length ? p(c) : r(c));
    }, X = () => {
      const c = Ce(V);
      c && (t.textInput || c.focus({ preventScroll: !0 }), Y.value = c.clientHeight < c.scrollHeight);
    }, Q = U(
      () => ({
        dp__overlay: !0
      })
    ), C = U(() => ({
      dp__overlay_col: !0
    })), M = (c) => t.skipActive ? !1 : c.value === t.modelValue, Z = U(() => t.items.map((c) => c.filter((A) => A).map((A) => {
      var l, f, k;
      const T = t.disabledValues.some((R) => R === A.value) || P(A.value), K = (l = t.multiModelValue) != null && l.length ? (f = t.multiModelValue) == null ? void 0 : f.some(
        (R) => ye(
          R,
          rt(
            t.monthPicker ? Nt(new Date(), A.value) : new Date(),
            t.monthPicker ? t.year : A.value
          )
        )
      ) : M(A);
      return {
        ...A,
        className: {
          dp__overlay_cell_active: K,
          dp__overlay_cell: !K,
          dp__overlay_cell_disabled: T,
          dp__overlay_cell_active_disabled: T && K,
          dp__overlay_cell_pad: !0,
          dp__cell_in_between: (k = t.multiModelValue) != null && k.length ? j(A.value) : !1
        }
      };
    }))), ae = U(
      () => ({
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: Y.value,
        dp__button_bottom: t.autoApply
      })
    ), ne = U(() => {
      var c, A;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((c = t.items) == null ? void 0 : c.length) <= 6,
        dp__container_block: ((A = t.items) == null ? void 0 : A.length) > 6
      };
    }), P = (c) => {
      const A = t.maxValue || t.maxValue === 0, T = t.minValue || t.minValue === 0;
      return !A && !T ? !1 : A && T ? +c > +t.maxValue || +c < +t.minValue : A ? +c > +t.maxValue : T ? +c < +t.minValue : !1;
    }, m = () => {
      const c = Ce(L);
      if (c) {
        const A = Ce(V);
        A && (A.scrollTop = c.offsetTop - A.offsetTop - (A.getBoundingClientRect().height / 2 - c.getBoundingClientRect().height));
      }
    }, N = (c) => {
      !t.disabledValues.some((A) => A === c) && !P(c) && (a("update:model-value", c), a("selected"));
    }, j = (c) => {
      const A = t.monthPicker ? t.year : c;
      return Hn(
        t.multiModelValue,
        rt(
          t.monthPicker ? Nt(new Date(), _.value || 0) : new Date(),
          t.monthPicker ? A : _.value || A
        ),
        rt(t.monthPicker ? Nt(new Date(), c) : new Date(), A)
      );
    }, ee = () => {
      a("toggle"), a("reset-flow");
    }, E = () => {
      t.escClose && ee();
    }, z = (c, A, T, K) => {
      c && (A.value === +t.modelValue && !t.disabledValues.includes(A.value) && (L.value = c), t.arrowNavigation && (Array.isArray(i.value[T]) ? i.value[T][K] = c : i.value[T] = [c], g()));
    }, g = () => {
      var A, T;
      const c = (A = t.headerRefs) != null && A.length ? [t.headerRefs].concat(i.value) : i.value.concat([t.skipButtonRef ? [] : [I.value]]);
      u(_e(c), (T = t.headerRefs) != null && T.length ? "monthPicker" : "selectionGrid");
    };
    return n({ focusGrid: X }), (c, A) => {
      var T;
      return h(), S("div", {
        ref_key: "gridWrapRef",
        ref: V,
        class: he(s(Q)),
        role: "dialog",
        tabindex: "0",
        onKeydown: re(E, ["esc"])
      }, [
        J("div", {
          class: he(s(ne)),
          role: "grid"
        }, [
          J("div", ir, [
            H(c.$slots, "header")
          ]),
          c.$slots.overlay ? H(c.$slots, "overlay", { key: 0 }) : (h(), S(se, { key: 1 }, [
            (h(!0), S(se, null, $e(s(Z), (K, l) => (h(), S("div", {
              class: "dp__overlay_row",
              key: l,
              role: "row"
            }, [
              (h(!0), S(se, null, $e(K, (f, k) => (h(), S("div", {
                role: "gridcell",
                class: he(s(C)),
                key: f.value,
                "aria-selected": f.value === e.modelValue && !e.disabledValues.includes(f.value),
                "aria-disabled": f.className.dp__overlay_cell_disabled,
                ref_for: !0,
                ref: (R) => z(R, f, l, k),
                tabindex: "0",
                "data-test": f.text,
                onClick: (R) => N(f.value),
                onKeydown: [
                  re((R) => N(f.value), ["enter"]),
                  re((R) => N(f.value), ["space"])
                ],
                onMouseover: (R) => _.value = f.value
              }, [
                J("div", {
                  class: he(f.className)
                }, [
                  c.$slots.item ? H(c.$slots, "item", {
                    key: 0,
                    item: f
                  }) : D("", !0),
                  c.$slots.item ? D("", !0) : (h(), S(se, { key: 1 }, [
                    ze(Se(f.text), 1)
                  ], 64))
                ], 2)
              ], 42, ur))), 128))
            ]))), 128)),
            c.$slots["button-icon"] ? Tt((h(), S("div", {
              key: 0,
              role: "button",
              "aria-label": (T = e.ariaLabels) == null ? void 0 : T.toggleOverlay,
              class: he(s(ae)),
              tabindex: "0",
              ref_key: "toggleButton",
              ref: I,
              onClick: ee,
              onKeydown: re(ee, ["enter"])
            }, [
              H(c.$slots, "button-icon")
            ], 42, cr)), [
              [St, !s($)(e.type)]
            ]) : D("", !0)
          ], 64))
        ], 2)
      ], 42, sr);
    };
  }
}), dr = ["aria-label"], In = /* @__PURE__ */ He({
  __name: "RegularPicker",
  props: {
    ariaLabel: { type: String, default: "" },
    showSelectionGrid: { type: Boolean, default: !1 },
    modelValue: { type: Number, default: null },
    items: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: Number, default: null },
    maxValue: { type: Number, default: null },
    slotName: { type: String, default: "" },
    overlaySlot: { type: String, default: "" },
    headerRefs: { type: Array, default: () => [] },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    transitions: { type: [Object, Boolean], default: !1 },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "toggle", "set-ref"],
  setup(e, { emit: n }) {
    const a = e, { transitionName: t, showTransition: r } = Lt(a.transitions), u = W(null);
    return Ue(() => n("set-ref", u)), (p, $) => (h(), S(se, null, [
      J("div", {
        class: "dp__month_year_select",
        onClick: $[0] || ($[0] = (Y) => p.$emit("toggle")),
        onKeydown: [
          $[1] || ($[1] = re((Y) => p.$emit("toggle"), ["enter"])),
          $[2] || ($[2] = re((Y) => p.$emit("toggle"), ["space"]))
        ],
        role: "button",
        "aria-label": e.ariaLabel,
        tabindex: "0",
        ref_key: "elRef",
        ref: u
      }, [
        H(p.$slots, "default")
      ], 40, dr),
      qe(ft, {
        name: s(t)(e.showSelectionGrid),
        css: s(r)
      }, {
        default: le(() => [
          e.showSelectionGrid ? (h(), ue(gt, Te({ key: 0 }, {
            modelValue: e.modelValue,
            items: e.items,
            disabledValues: e.disabledValues,
            minValue: e.minValue,
            maxValue: e.maxValue,
            escClose: e.escClose,
            type: e.type,
            arrowNavigation: e.arrowNavigation,
            textInput: e.textInput,
            autoApply: e.autoApply,
            ariaLabels: e.ariaLabels,
            hideNavigation: e.hideNavigation
          }, {
            "header-refs": [],
            "onUpdate:modelValue": $[3] || ($[3] = (Y) => p.$emit("update:model-value", Y)),
            onToggle: $[4] || ($[4] = (Y) => p.$emit("toggle"))
          }), Ye({
            "button-icon": le(() => [
              p.$slots["calendar-icon"] ? H(p.$slots, "calendar-icon", { key: 0 }) : D("", !0),
              p.$slots["calendar-icon"] ? D("", !0) : (h(), ue(s(Et), { key: 1 }))
            ]),
            _: 2
          }, [
            p.$slots[e.slotName] ? {
              name: "item",
              fn: le(({ item: Y }) => [
                H(p.$slots, e.slotName, { item: Y })
              ]),
              key: "0"
            } : void 0,
            p.$slots[e.overlaySlot] ? {
              name: "overlay",
              fn: le(() => [
                H(p.$slots, e.overlaySlot)
              ]),
              key: "1"
            } : void 0,
            p.$slots[`${e.overlaySlot}-header`] ? {
              name: "header",
              fn: le(() => [
                H(p.$slots, `${e.overlaySlot}-header`)
              ]),
              key: "2"
            } : void 0
          ]), 1040)) : D("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 64));
  }
}), fr = { class: "dp__month_year_row" }, vr = { class: "dp__month_year_wrap" }, mr = { class: "dp__month_picker_header" }, yr = ["aria-label"], hr = ["aria-label"], gr = ["aria-label"], pr = /* @__PURE__ */ He({
  __name: "MonthYearPicker",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    internalModelValue: { type: [Date, Array], default: null },
    ...Qe
  },
  emits: ["update-month-year", "month-year-select", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: n, emit: a }) {
    const t = e, { defaults: r } = Ee(t), { transitionName: u, showTransition: p } = Lt(r.value.transitions), { buildMatrix: $ } = Je(), { handleMonthYearChange: Y, isDisabled: L, updateMonthYear: V } = Yl(t, a), i = W(!1), _ = W(!1), I = W([null, null, null, null]), B = W(null), X = W(null), Q = W(null);
    Ue(() => {
      a("mount");
    });
    const C = (d) => ({
      get: () => t[d],
      set: (O) => {
        const de = d === "month" ? "year" : "month";
        a("update-month-year", { [d]: O, [de]: t[de] }), a("month-year-select", d === "year"), d === "month" ? k(!0) : R(!0);
      }
    }), M = U(C("month")), Z = U(C("year")), ae = (d) => {
      const O = me(b(d));
      return t.year === O;
    }, ne = U(() => t.monthPicker ? Array.isArray(t.disabledDates) ? t.disabledDates.map((d) => b(d)).filter((d) => ae(d)).map((d) => ve(d)) : [] : []), P = U(() => (d) => {
      const O = d === "month";
      return {
        showSelectionGrid: (O ? i : _).value,
        items: (O ? T : K).value,
        disabledValues: r.value.filters[O ? "months" : "years"].concat(ne.value),
        minValue: (O ? ee : N).value,
        maxValue: (O ? E : j).value,
        headerRefs: O && t.monthPicker ? [B.value, X.value, Q.value] : [],
        escClose: t.escClose,
        transitions: r.value.transitions,
        ariaLabels: r.value.ariaLabels,
        textInput: t.textInput,
        autoApply: t.autoApply,
        arrowNavigation: t.arrowNavigation,
        hideNavigation: t.hideNavigation
      };
    }), m = U(() => (d) => ({
      month: t.month,
      year: t.year,
      items: d === "month" ? t.months : t.years,
      instance: t.instance,
      updateMonthYear: V,
      toggle: d === "month" ? k : R
    })), N = U(() => t.minDate ? me(b(t.minDate)) : null), j = U(() => t.maxDate ? me(b(t.maxDate)) : null), ee = U(() => {
      if (t.minDate && N.value) {
        if (N.value > t.year)
          return 12;
        if (N.value === t.year)
          return ve(b(t.minDate));
      }
      return null;
    }), E = U(() => t.maxDate && j.value ? j.value < t.year ? -1 : j.value === t.year ? ve(b(t.maxDate)) : null : null), z = U(() => t.range && t.internalModelValue && (t.monthPicker || t.yearPicker) ? t.internalModelValue : []), g = (d) => d.reverse(), c = (d, O = !1) => {
      const de = [], De = (we) => O ? g(we) : we;
      for (let we = 0; we < d.length; we += 3) {
        const We = [d[we], d[we + 1], d[we + 2]];
        de.push(De(We));
      }
      return O ? de.reverse() : de;
    }, A = U(() => {
      const d = t.months.find((O) => O.value === t.month);
      return d || { text: "", value: 0 };
    }), T = U(() => c(t.months)), K = U(() => c(t.years, t.reverseYears)), l = U(() => r.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === 0 : !0), f = U(() => r.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === r.value.multiCalendars - 1 : !0), k = (d = !1) => {
      ie(d), i.value = !i.value, i.value || a("overlay-closed");
    }, R = (d = !1) => {
      ie(d), _.value = !_.value, _.value || a("overlay-closed");
    }, ie = (d) => {
      d || a("reset-flow");
    }, ce = (d = !1) => {
      a("update-month-year", {
        year: d ? t.year + 1 : t.year - 1,
        month: t.month,
        fromNav: !0
      });
    }, v = (d, O) => {
      t.arrowNavigation && (I.value[O] = Ce(d), $(I.value, "monthYear"));
    };
    return n({
      toggleMonthPicker: k,
      toggleYearPicker: R
    }), (d, O) => {
      var de, De, we, We, Xe;
      return h(), S("div", fr, [
        d.$slots["month-year"] ? H(d.$slots, "month-year", Ve(Te({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: s(V), handleMonthYearChange: s(Y), instance: e.instance }))) : (h(), S(se, { key: 1 }, [
          !d.monthPicker && !d.yearPicker ? (h(), S(se, { key: 0 }, [
            s(l) && !d.vertical ? (h(), ue(Qt, {
              key: 0,
              "aria-label": (de = s(r).ariaLabels) == null ? void 0 : de.prevMonth,
              disabled: s(L)(!1),
              onActivate: O[0] || (O[0] = (F) => s(Y)(!1)),
              onSetRef: O[1] || (O[1] = (F) => v(F, 0))
            }, {
              default: le(() => [
                d.$slots["arrow-left"] ? H(d.$slots, "arrow-left", { key: 0 }) : D("", !0),
                d.$slots["arrow-left"] ? D("", !0) : (h(), ue(s(kn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : D("", !0),
            J("div", vr, [
              qe(In, Te({
                type: "month",
                "slot-name": "month-overlay-val",
                "overlay-slot": "overlay-month",
                "aria-label": (De = s(r).ariaLabels) == null ? void 0 : De.openMonthsOverlay,
                modelValue: s(M),
                "onUpdate:modelValue": O[2] || (O[2] = (F) => nt(M) ? M.value = F : null)
              }, s(P)("month"), {
                onToggle: k,
                onSetRef: O[3] || (O[3] = (F) => v(F, 1))
              }), Ye({
                default: le(() => [
                  d.$slots.month ? H(d.$slots, "month", Ve(Te({ key: 0 }, s(A)))) : D("", !0),
                  d.$slots.month ? D("", !0) : (h(), S(se, { key: 1 }, [
                    ze(Se(s(A).text), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                d.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: le(() => [
                    H(d.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                d.$slots["month-overlay-value"] ? {
                  name: "month-overlay-val",
                  fn: le(({ item: F }) => [
                    H(d.$slots, "month-overlay-value", {
                      text: F.text,
                      value: F.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                d.$slots["month-overlay"] ? {
                  name: "overlay-month",
                  fn: le(() => [
                    H(d.$slots, "month-overlay", Ve(Ze(s(m)("month"))))
                  ]),
                  key: "2"
                } : void 0,
                d.$slots["month-overlay-header"] ? {
                  name: "overlay-month-header",
                  fn: le(() => [
                    H(d.$slots, "month-overlay-header", { toggle: k })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]),
              qe(In, Te({
                type: "year",
                "slot-name": "year-overlay-val",
                "overlay-slot": "overlay-year",
                "aria-label": (we = s(r).ariaLabels) == null ? void 0 : we.openYearsOverlay,
                modelValue: s(Z),
                "onUpdate:modelValue": O[4] || (O[4] = (F) => nt(Z) ? Z.value = F : null)
              }, s(P)("year"), {
                onToggle: R,
                onSetRef: O[5] || (O[5] = (F) => v(F, 2))
              }), Ye({
                default: le(() => [
                  d.$slots.year ? H(d.$slots, "year", {
                    key: 0,
                    year: e.year
                  }) : D("", !0),
                  d.$slots.year ? D("", !0) : (h(), S(se, { key: 1 }, [
                    ze(Se(e.year), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                d.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: le(() => [
                    H(d.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                d.$slots["year-overlay-value"] ? {
                  name: "year-overlay-val",
                  fn: le(({ item: F }) => [
                    H(d.$slots, "year-overlay-value", {
                      text: F.text,
                      value: F.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                d.$slots["year-overlay"] ? {
                  name: "overlay-year",
                  fn: le(() => [
                    H(d.$slots, "year-overlay", Ve(Ze(s(m)("year"))))
                  ]),
                  key: "2"
                } : void 0,
                d.$slots["year-overlay-header"] ? {
                  name: "overlay-year-header",
                  fn: le(() => [
                    H(d.$slots, "year-overlay-header", { toggle: R })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"])
            ]),
            s(l) && d.vertical ? (h(), ue(Qt, {
              key: 1,
              "aria-label": (We = s(r).ariaLabels) == null ? void 0 : We.prevMonth,
              disabled: s(L)(!1),
              onActivate: O[6] || (O[6] = (F) => s(Y)(!1))
            }, {
              default: le(() => [
                d.$slots["arrow-up"] ? H(d.$slots, "arrow-up", { key: 0 }) : D("", !0),
                d.$slots["arrow-up"] ? D("", !0) : (h(), ue(s(Fn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : D("", !0),
            s(f) ? (h(), ue(Qt, {
              key: 2,
              ref: "rightIcon",
              disabled: s(L)(!0),
              "aria-label": (Xe = s(r).ariaLabels) == null ? void 0 : Xe.nextMonth,
              onActivate: O[7] || (O[7] = (F) => s(Y)(!0)),
              onSetRef: O[8] || (O[8] = (F) => v(F, 3))
            }, {
              default: le(() => [
                d.$slots[d.vertical ? "arrow-down" : "arrow-right"] ? H(d.$slots, d.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : D("", !0),
                d.$slots[d.vertical ? "arrow-down" : "arrow-right"] ? D("", !0) : (h(), ue(Ct(d.vertical ? s(Un) : s(wn)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : D("", !0)
          ], 64)) : D("", !0),
          d.monthPicker ? (h(), ue(gt, Te({ key: 1 }, s(P)("month"), {
            "skip-active": d.range,
            year: e.year,
            "multi-model-value": s(z),
            "month-picker": "",
            modelValue: s(M),
            "onUpdate:modelValue": O[17] || (O[17] = (F) => nt(M) ? M.value = F : null),
            onToggle: k,
            onSelected: O[18] || (O[18] = (F) => d.$emit("overlay-closed"))
          }), Ye({
            header: le(() => {
              var F, be, pe;
              return [
                J("div", mr, [
                  J("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpPrevIconRef",
                    ref: B,
                    onClick: O[9] || (O[9] = (Ne) => ce(!1)),
                    onKeydown: O[10] || (O[10] = re((Ne) => ce(!1), ["enter"]))
                  }, [
                    J("div", {
                      class: "dp__inner_nav",
                      role: "button",
                      "aria-label": (F = s(r).ariaLabels) == null ? void 0 : F.prevMonth
                    }, [
                      d.$slots["arrow-left"] ? H(d.$slots, "arrow-left", { key: 0 }) : D("", !0),
                      d.$slots["arrow-left"] ? D("", !0) : (h(), ue(s(kn), { key: 1 }))
                    ], 8, yr)
                  ], 544),
                  J("div", {
                    class: "dp__pointer",
                    role: "button",
                    ref_key: "mpYearButtonRef",
                    ref: X,
                    "aria-label": (be = s(r).ariaLabels) == null ? void 0 : be.openYearsOverlay,
                    tabindex: "0",
                    onClick: O[11] || (O[11] = () => R(!1)),
                    onKeydown: O[12] || (O[12] = re(() => R(!1), ["enter"]))
                  }, [
                    d.$slots.year ? H(d.$slots, "year", {
                      key: 0,
                      year: e.year
                    }) : D("", !0),
                    d.$slots.year ? D("", !0) : (h(), S(se, { key: 1 }, [
                      ze(Se(e.year), 1)
                    ], 64))
                  ], 40, hr),
                  J("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpNextIconRef",
                    ref: Q,
                    onClick: O[13] || (O[13] = (Ne) => ce(!0)),
                    onKeydown: O[14] || (O[14] = re((Ne) => ce(!0), ["enter"]))
                  }, [
                    J("div", {
                      class: "dp__inner_nav",
                      role: "button",
                      "aria-label": (pe = s(r).ariaLabels) == null ? void 0 : pe.nextMonth
                    }, [
                      d.$slots["arrow-right"] ? H(d.$slots, "arrow-right", { key: 0 }) : D("", !0),
                      d.$slots["arrow-right"] ? D("", !0) : (h(), ue(s(wn), { key: 1 }))
                    ], 8, gr)
                  ], 544)
                ]),
                qe(ft, {
                  name: s(u)(_.value),
                  css: s(p)
                }, {
                  default: le(() => [
                    _.value ? (h(), ue(gt, Te({ key: 0 }, s(P)("year"), {
                      modelValue: s(Z),
                      "onUpdate:modelValue": O[15] || (O[15] = (Ne) => nt(Z) ? Z.value = Ne : null),
                      onToggle: R,
                      onSelected: O[16] || (O[16] = (Ne) => d.$emit("overlay-closed"))
                    }), Ye({
                      "button-icon": le(() => [
                        d.$slots["calendar-icon"] ? H(d.$slots, "calendar-icon", { key: 0 }) : D("", !0),
                        d.$slots["calendar-icon"] ? D("", !0) : (h(), ue(s(Et), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      d.$slots["year-overlay-value"] ? {
                        name: "item",
                        fn: le(({ item: Ne }) => [
                          H(d.$slots, "year-overlay-value", {
                            text: Ne.text,
                            value: Ne.value
                          })
                        ]),
                        key: "0"
                      } : void 0
                    ]), 1040, ["modelValue"])) : D("", !0)
                  ]),
                  _: 3
                }, 8, ["name", "css"])
              ];
            }),
            _: 2
          }, [
            d.$slots["month-overlay-value"] ? {
              name: "item",
              fn: le(({ item: F }) => [
                H(d.$slots, "month-overlay-value", {
                  text: F.text,
                  value: F.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["skip-active", "year", "multi-model-value", "modelValue"])) : D("", !0),
          d.yearPicker ? (h(), ue(gt, Te({ key: 2 }, s(P)("year"), {
            modelValue: s(Z),
            "onUpdate:modelValue": O[19] || (O[19] = (F) => nt(Z) ? Z.value = F : null),
            "multi-model-value": s(z),
            "skip-active": d.range,
            "skip-button-ref": "",
            "year-picker": "",
            onToggle: R,
            onSelected: O[20] || (O[20] = (F) => d.$emit("overlay-closed"))
          }), Ye({ _: 2 }, [
            d.$slots["year-overlay-value"] ? {
              name: "item",
              fn: le(({ item: F }) => [
                H(d.$slots, "year-overlay-value", {
                  text: F.text,
                  value: F.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["modelValue", "multi-model-value", "skip-active"])) : D("", !0)
        ], 64))
      ]);
    };
  }
}), kr = {
  key: 0,
  class: "dp__time_input"
}, wr = ["aria-label", "onKeydown", "onClick"], br = ["aria-label", "onKeydown", "onClick"], $r = ["aria-label", "onKeydown", "onClick"], Dr = { key: 0 }, Mr = ["aria-label", "onKeydown"], _r = /* @__PURE__ */ He({
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    ...Qe
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { setTimePickerElements: r, setTimePickerBackRef: u } = Je(), { defaults: p } = Ee(t), { transitionName: $, showTransition: Y } = Lt(p.value.transitions), L = pt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), V = W("AM"), i = W(null), _ = W([]);
    Ue(() => {
      a("mounted");
    });
    const I = (g, c) => En(Ie(b(), g), c), B = (g, c) => sa(Ie(b(), g), c), X = U(
      () => ({
        dp__time_col: !0,
        dp__time_col_reg: !t.enableSeconds && t.is24,
        dp__time_col_reg_with_button: !t.enableSeconds && !t.is24,
        dp__time_col_sec: t.enableSeconds && t.is24,
        dp__time_col_sec_with_button: t.enableSeconds && !t.is24
      })
    ), Q = U(() => {
      const g = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return t.enableSeconds ? g.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : g;
    }), C = U(() => Q.value.filter((g) => !g.separator)), M = U(() => (g) => {
      if (g === "hours") {
        const c = N(t.hours);
        return { text: c < 10 ? `0${c}` : `${c}`, value: c };
      }
      return { text: t[g] < 10 ? `0${t[g]}` : `${t[g]}`, value: t[g] };
    }), Z = (g) => {
      const c = t.is24 ? 24 : 12, A = g === "hours" ? c : 60, T = +t[`${g}GridIncrement`], K = g === "hours" && !t.is24 ? T : 0, l = [];
      for (let f = K; f < A; f += T)
        l.push({ value: f, text: f < 10 ? `0${f}` : `${f}` });
      return g === "hours" && !t.is24 && l.push({ value: 0, text: "12" }), $l(l);
    }, ae = (g) => t[`no${g[0].toUpperCase() + g.slice(1)}Overlay`], ne = (g) => {
      ae(g) || (L[g] = !L[g], L[g] || a("overlay-closed"));
    }, P = (g) => g === "hours" ? Ke : g === "minutes" ? xe : dt, m = (g, c = !0) => {
      const A = c ? I : B;
      a(
        `update:${g}`,
        P(g)(A({ [g]: +t[g] }, { [g]: +t[`${g}Increment`] }))
      );
    }, N = (g) => t.is24 ? g : (g >= 12 ? V.value = "PM" : V.value = "AM", Al(g)), j = () => {
      V.value === "PM" ? (V.value = "AM", a("update:hours", t.hours - 12)) : (V.value = "PM", a("update:hours", t.hours + 12));
    }, ee = (g) => {
      L[g] = !0;
    }, E = (g, c, A) => {
      if (g && t.arrowNavigation) {
        Array.isArray(_.value[c]) ? _.value[c][A] = g : _.value[c] = [g];
        const T = _.value.reduce(
          (K, l) => l.map((f, k) => [...K[k] || [], l[k]]),
          []
        );
        u(t.closeTimePickerBtn), i.value && (T[1] = T[1].concat(i.value)), r(T, t.order);
      }
    }, z = (g, c) => g === "hours" && !t.is24 ? a(`update:${g}`, V.value === "PM" ? c + 12 : c) : a(`update:${g}`, c);
    return n({ openChildCmp: ee }), (g, c) => {
      var A;
      return g.disabled ? D("", !0) : (h(), S("div", kr, [
        (h(!0), S(se, null, $e(s(Q), (T, K) => {
          var l, f, k;
          return h(), S("div", {
            key: K,
            class: he(s(X))
          }, [
            T.separator ? (h(), S(se, { key: 0 }, [
              ze(" : ")
            ], 64)) : (h(), S(se, { key: 1 }, [
              J("div", {
                class: "dp__inc_dec_button",
                role: "button",
                "aria-label": (l = s(p).ariaLabels) == null ? void 0 : l.incrementValue(T.type),
                tabindex: "0",
                onKeydown: [
                  re((R) => m(T.type), ["enter"]),
                  re((R) => m(T.type), ["space"])
                ],
                onClick: (R) => m(T.type),
                ref_for: !0,
                ref: (R) => E(R, K, 0)
              }, [
                g.$slots["arrow-up"] ? H(g.$slots, "arrow-up", { key: 0 }) : D("", !0),
                g.$slots["arrow-up"] ? D("", !0) : (h(), ue(s(Fn), { key: 1 }))
              ], 40, wr),
              J("div", {
                role: "button",
                "aria-label": (f = s(p).ariaLabels) == null ? void 0 : f.openTpOverlay(T.type),
                class: he(ae(T.type) ? "" : "dp__time_display"),
                tabindex: "0",
                onKeydown: [
                  re((R) => ne(T.type), ["enter"]),
                  re((R) => ne(T.type), ["space"])
                ],
                onClick: (R) => ne(T.type),
                ref_for: !0,
                ref: (R) => E(R, K, 1)
              }, [
                g.$slots[T.type] ? H(g.$slots, T.type, {
                  key: 0,
                  text: s(M)(T.type).text,
                  value: s(M)(T.type).value
                }) : D("", !0),
                g.$slots[T.type] ? D("", !0) : (h(), S(se, { key: 1 }, [
                  ze(Se(s(M)(T.type).text), 1)
                ], 64))
              ], 42, br),
              J("div", {
                class: "dp__inc_dec_button",
                role: "button",
                "aria-label": (k = s(p).ariaLabels) == null ? void 0 : k.decrementValue(T.type),
                tabindex: "0",
                onKeydown: [
                  re((R) => m(T.type, !1), ["enter"]),
                  re((R) => m(T.type, !1), ["space"])
                ],
                onClick: (R) => m(T.type, !1),
                ref_for: !0,
                ref: (R) => E(R, K, 2)
              }, [
                g.$slots["arrow-down"] ? H(g.$slots, "arrow-down", { key: 0 }) : D("", !0),
                g.$slots["arrow-down"] ? D("", !0) : (h(), ue(s(Un), { key: 1 }))
              ], 40, $r)
            ], 64))
          ], 2);
        }), 128)),
        g.is24 ? D("", !0) : (h(), S("div", Dr, [
          g.$slots["am-pm-button"] ? H(g.$slots, "am-pm-button", {
            key: 0,
            toggle: j,
            value: V.value
          }) : D("", !0),
          g.$slots["am-pm-button"] ? D("", !0) : (h(), S("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: i,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (A = s(p).ariaLabels) == null ? void 0 : A.amPmButton,
            tabindex: "0",
            onClick: j,
            onKeydown: [
              re(Ge(j, ["prevent"]), ["enter"]),
              re(Ge(j, ["prevent"]), ["space"])
            ]
          }, Se(V.value), 41, Mr))
        ])),
        (h(!0), S(se, null, $e(s(C), (T, K) => (h(), ue(ft, {
          key: K,
          name: s($)(L[T.type]),
          css: s(Y)
        }, {
          default: le(() => [
            L[T.type] ? (h(), ue(gt, {
              key: 0,
              items: Z(T.type),
              "disabled-values": s(p).filters.times[T.type],
              "esc-close": g.escClose,
              "aria-labels": s(p).ariaLabels,
              "hide-navigation": g.hideNavigation,
              "onUpdate:modelValue": (l) => z(T.type, l),
              onSelected: (l) => ne(T.type),
              onToggle: (l) => ne(T.type),
              onResetFlow: c[0] || (c[0] = (l) => g.$emit("reset-flow")),
              type: T.type
            }, Ye({
              "button-icon": le(() => [
                g.$slots["clock-icon"] ? H(g.$slots, "clock-icon", { key: 0 }) : D("", !0),
                g.$slots["clock-icon"] ? D("", !0) : (h(), ue(s(Ln), { key: 1 }))
              ]),
              _: 2
            }, [
              g.$slots[`${T.type}-overlay-value`] ? {
                name: "item",
                fn: le(({ item: l }) => [
                  H(g.$slots, `${T.type}-overlay-value`, {
                    text: l.text,
                    value: l.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "disabled-values", "esc-close", "aria-labels", "hide-navigation", "onUpdate:modelValue", "onSelected", "onToggle", "type"])) : D("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), Ar = ["aria-label"], Tr = { class: "dp__overlay_container dp__container_flex" }, Sr = {
  key: 1,
  class: "dp__overlay_row"
}, Cr = ["aria-label"], Pr = /* @__PURE__ */ He({
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    internalModelValue: { type: [Date, Array], default: null },
    ...Qe
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, { buildMatrix: r, setTimePicker: u } = Je(), p = on(), { hideNavigationButtons: $, defaults: Y } = Ee(t), { transitionName: L, showTransition: V } = Lt(Y.value.transitions), i = W(null), _ = W(null), I = W([]), B = W(null);
    Ue(() => {
      a("mount"), !t.timePicker && t.arrowNavigation ? r([Ce(i.value)], "time") : u(!0, t.timePicker);
    });
    const X = U(() => t.range && t.modelAuto ? Kn(t.internalModelValue) : !0), Q = W(!1), C = (E) => ({
      hours: Array.isArray(t.hours) ? t.hours[E] : t.hours,
      minutes: Array.isArray(t.minutes) ? t.minutes[E] : t.minutes,
      seconds: Array.isArray(t.seconds) ? t.seconds[E] : t.seconds
    }), M = U(() => {
      const E = [];
      if (t.range)
        for (let z = 0; z < 2; z++)
          E.push(C(z));
      else
        E.push(C(0));
      return E;
    }), Z = (E, z = !1, g = "") => {
      z || a("reset-flow"), Q.value = E, t.arrowNavigation && (u(E), E || a("overlay-closed")), kt(() => {
        g !== "" && I.value[0] && I.value[0].openChildCmp(g);
      });
    }, ae = U(() => ({
      dp__button: !0,
      dp__button_bottom: t.autoApply
    })), ne = lt(p, "timePicker"), P = (E, z, g) => t.range ? z === 0 ? [E, M.value[1][g]] : [M.value[0][g], E] : E, m = (E) => {
      a("update:hours", E);
    }, N = (E) => {
      a("update:minutes", E);
    }, j = (E) => {
      a("update:seconds", E);
    }, ee = () => {
      B.value && t.arrowNavigation && B.value.focus({ preventScroll: !0 });
    };
    return n({ toggleTimePicker: Z }), (E, z) => {
      var g;
      return h(), S("div", null, [
        E.timePicker ? D("", !0) : Tt((h(), S("div", {
          key: 0,
          class: he(s(ae)),
          role: "button",
          "aria-label": (g = s(Y).ariaLabels) == null ? void 0 : g.openTimePicker,
          tabindex: "0",
          ref_key: "openTimePickerBtn",
          ref: i,
          onKeydown: [
            z[0] || (z[0] = re((c) => Z(!0), ["enter"])),
            z[1] || (z[1] = re((c) => Z(!0), ["space"]))
          ],
          onClick: z[2] || (z[2] = (c) => Z(!0))
        }, [
          E.$slots["clock-icon"] ? H(E.$slots, "clock-icon", { key: 0 }) : D("", !0),
          E.$slots["clock-icon"] ? D("", !0) : (h(), ue(s(Ln), { key: 1 }))
        ], 42, Ar)), [
          [St, !s($)("time")]
        ]),
        qe(ft, {
          name: s(L)(Q.value),
          css: s(V)
        }, {
          default: le(() => {
            var c;
            return [
              Q.value || E.timePicker ? (h(), S("div", {
                key: 0,
                class: "dp__overlay",
                ref_key: "overlayRef",
                ref: B,
                tabindex: "0"
              }, [
                J("div", Tr, [
                  E.$slots["time-picker-overlay"] ? H(E.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: m,
                    setMinutes: N,
                    setSeconds: j
                  }) : D("", !0),
                  E.$slots["time-picker-overlay"] ? D("", !0) : (h(), S("div", Sr, [
                    (h(!0), S(se, null, $e(s(M), (A, T) => Tt((h(), ue(_r, Te({ key: T }, {
                      ...E.$props,
                      order: T,
                      hours: A.hours,
                      minutes: A.minutes,
                      seconds: A.seconds,
                      closeTimePickerBtn: _.value,
                      disabled: T === 0 ? E.fixedStart : E.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: I,
                      "onUpdate:hours": (K) => m(P(K, T, "hours")),
                      "onUpdate:minutes": (K) => N(P(K, T, "minutes")),
                      "onUpdate:seconds": (K) => j(P(K, T, "seconds")),
                      onMounted: ee,
                      onOverlayClosed: ee
                    }), Ye({ _: 2 }, [
                      $e(s(ne), (K, l) => ({
                        name: K,
                        fn: le((f) => [
                          H(E.$slots, K, Ve(Ze(f)))
                        ])
                      }))
                    ]), 1040, ["onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [St, T === 0 ? !0 : s(X)]
                    ])), 128))
                  ])),
                  E.timePicker ? D("", !0) : Tt((h(), S("div", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: _,
                    class: he(s(ae)),
                    role: "button",
                    "aria-label": (c = s(Y).ariaLabels) == null ? void 0 : c.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      z[3] || (z[3] = re((A) => Z(!1), ["enter"])),
                      z[4] || (z[4] = re((A) => Z(!1), ["space"]))
                    ],
                    onClick: z[5] || (z[5] = (A) => Z(!1))
                  }, [
                    E.$slots["calendar-icon"] ? H(E.$slots, "calendar-icon", { key: 0 }) : D("", !0),
                    E.$slots["calendar-icon"] ? D("", !0) : (h(), ue(s(Et), { key: 1 }))
                  ], 42, Cr)), [
                    [St, !s($)("time")]
                  ])
                ])
              ], 512)) : D("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Nr = (e, n) => {
  const { isDisabled: a, matchDate: t, getWeekFromDate: r } = Ee(n), u = W(null), p = W(b()), $ = (l) => {
    !l.current && n.hideOffsetDates || (u.value = l.value);
  }, Y = () => {
    u.value = null;
  }, L = (l) => Array.isArray(e.value) && n.range && e.value[0] && u.value ? l ? Be(u.value, e.value[0]) : Pe(u.value, e.value[0]) : !0, V = (l, f) => {
    const k = () => e.value ? f ? e.value[0] || null : e.value[1] : null, R = e.value && Array.isArray(e.value) ? k() : null;
    return ye(b(l.value), R);
  }, i = (l) => {
    const f = Array.isArray(e.value) ? e.value[0] : null;
    return l ? !Pe(u.value || null, f) : !0;
  }, _ = (l, f = !0) => (n.range || n.weekPicker) && Array.isArray(e.value) ? n.hideOffsetDates && !l.current ? !1 : ye(b(l.value), e.value[f ? 0 : 1]) : n.range ? V(l, f) && i(f) || ye(l.value, Array.isArray(e.value) ? e.value[0] : null) && L(f) : !1, I = (l, f, k) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? l ? !1 : k ? Be(e.value[0], f.value) : Pe(e.value[0], f.value) : !1, B = (l) => !e.value || n.hideOffsetDates && !l.current ? !1 : n.range ? n.modelAuto && Array.isArray(e.value) ? ye(l.value, e.value[0] ? e.value[0] : p.value) : !1 : n.multiDates && Array.isArray(e.value) ? e.value.some((f) => ye(f, l.value)) : ye(l.value, e.value ? e.value : p.value), X = (l) => {
    if (n.autoRange || n.weekPicker) {
      if (u.value) {
        if (n.hideOffsetDates && !l.current)
          return !1;
        const f = ct(u.value, +n.autoRange), k = r(b(u.value));
        return n.weekPicker ? ye(k[1], b(l.value)) : ye(f, b(l.value));
      }
      return !1;
    }
    return !1;
  }, Q = (l) => {
    if (n.autoRange || n.weekPicker) {
      if (u.value) {
        const f = ct(u.value, +n.autoRange);
        if (n.hideOffsetDates && !l.current)
          return !1;
        const k = r(b(u.value));
        return n.weekPicker ? Be(l.value, k[0]) && Pe(l.value, k[1]) : Be(l.value, u.value) && Pe(l.value, f);
      }
      return !1;
    }
    return !1;
  }, C = (l) => {
    if (n.autoRange || n.weekPicker) {
      if (u.value) {
        if (n.hideOffsetDates && !l.current)
          return !1;
        const f = r(b(u.value));
        return n.weekPicker ? ye(f[0], l.value) : ye(u.value, l.value);
      }
      return !1;
    }
    return !1;
  }, M = (l) => Hn(e.value, u.value, l.value), Z = () => n.modelAuto && Array.isArray(n.internalModelValue) ? !!n.internalModelValue[0] : !1, ae = () => n.modelAuto ? Kn(n.internalModelValue) : !0, ne = (l) => {
    if (Array.isArray(e.value) && e.value.length || n.weekPicker)
      return !1;
    const f = n.range ? !_(l) && !_(l, !1) : !0;
    return !a(l.value) && !B(l) && !(!l.current && n.hideOffsetDates) && f;
  }, P = (l) => n.range ? n.modelAuto ? Z() && B(l) : !1 : B(l), m = (l) => n.highlight ? t(l.value, n.highlight) : !1, N = (l) => a(l.value) && n.highlightDisabledDays === !1, j = (l) => n.highlightWeekDays && n.highlightWeekDays.includes(l.value.getDay()), ee = (l) => (n.range || n.weekPicker) && (n.multiCalendars > 0 ? l.current : !0) && ae() && !(!l.current && n.hideOffsetDates) && !B(l) ? M(l) : !1, E = (l) => ({
    dp__cell_offset: !l.current,
    dp__pointer: !n.disabled && !(!l.current && n.hideOffsetDates) && !a(l.value),
    dp__cell_disabled: a(l.value),
    dp__cell_highlight: !N(l) && (m(l) || j(l)) && !P(l),
    dp__cell_highlight_active: !N(l) && (m(l) || j(l)) && P(l),
    dp__today: !n.noToday && ye(l.value, p.value) && l.current
  }), z = (l) => ({
    dp__active_date: P(l),
    dp__date_hover: ne(l)
  }), g = (l) => ({
    ...c(l),
    ...A(l),
    dp__range_between_week: ee(l) && n.weekPicker
  }), c = (l) => ({
    dp__range_start: n.multiCalendars > 0 ? l.current && _(l) && ae() : _(l) && ae(),
    dp__range_end: n.multiCalendars > 0 ? l.current && _(l, !1) && ae() : _(l, !1) && ae(),
    dp__range_between: ee(l) && !n.weekPicker,
    dp__date_hover_start: I(ne(l), l, !0),
    dp__date_hover_end: I(ne(l), l, !1)
  }), A = (l) => ({
    ...c(l),
    dp__cell_auto_range: Q(l),
    dp__cell_auto_range_start: C(l),
    dp__cell_auto_range_end: X(l)
  }), T = (l) => n.range ? n.autoRange ? A(l) : n.modelAuto ? { ...z(l), ...c(l) } : c(l) : n.weekPicker ? g(l) : z(l);
  return {
    setHoverDate: $,
    clearHoverDate: Y,
    getDayClassData: (l) => ({
      ...E(l),
      ...T(l),
      [n.dayClass ? n.dayClass(l.value) : ""]: !0,
      [n.calendarCellClassName]: !!n.calendarCellClassName
    })
  };
}, Rr = ["id", "onKeydown"], Ir = {
  key: 0,
  class: "dp__sidebar_left"
}, Or = {
  key: 1,
  class: "dp__preset_ranges"
}, Br = ["onClick"], Yr = {
  key: 2,
  class: "dp__sidebar_right"
}, Vr = {
  key: 3,
  class: "dp__now_wrap"
}, Er = /* @__PURE__ */ He({
  __name: "DatepickerMenu",
  props: {
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...Qe
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position"
  ],
  setup(e, { emit: n }) {
    const a = e, { setMenuFocused: t, setShiftKey: r, control: u } = Wn(), { getCalendarDays: p, defaults: $ } = Ee(a), Y = on(), L = W(null), V = pt({
      timePicker: !!(!a.enableTimePicker || a.timePicker || a.monthPicker),
      monthYearInput: !!a.timePicker,
      calendar: !1
    }), i = W([]), _ = W([]), I = W(null), B = W(null), X = W(0), Q = W(!1), C = W(0);
    Ue(() => {
      var G;
      Q.value = !0, !((G = a.presetRanges) != null && G.length) && !Y["left-sidebar"] && !Y["right-sidebar"] && Fe();
      const y = Ce(B);
      if (y && !a.textInput && !a.inline && (t(!0), m()), y) {
        const Me = (ke) => {
          !a.monthYearComponent && !a.timePickerComponent && !Object.keys(Y).length && ke.preventDefault(), ke.stopImmediatePropagation(), ke.stopPropagation();
        };
        y.addEventListener("pointerdown", Me), y.addEventListener("mousedown", Me);
      }
      document.addEventListener("resize", Fe);
    }), rn(() => {
      document.removeEventListener("resize", Fe);
    });
    const { arrowRight: M, arrowLeft: Z, arrowDown: ae, arrowUp: ne } = Je(), P = (y) => {
      y || y === 0 ? _.value[y].triggerTransition(
        z.value(y),
        g.value(y)
      ) : _.value.forEach(
        (G, Me) => G.triggerTransition(z.value(Me), g.value(Me))
      );
    }, m = () => {
      const y = Ce(B);
      y && y.focus({ preventScroll: !0 });
    }, N = () => {
      var y;
      ((y = a.flow) == null ? void 0 : y.length) && C.value !== -1 && (C.value += 1, n("flow-step", C.value), x());
    }, j = () => {
      C.value = -1;
    }, {
      calendars: ee,
      modelValue: E,
      month: z,
      year: g,
      time: c,
      updateTime: A,
      updateMonthYear: T,
      selectDate: K,
      getWeekNum: l,
      monthYearSelect: f,
      handleScroll: k,
      handleArrow: R,
      handleSwipe: ie,
      getMarker: ce,
      selectCurrentDate: v,
      presetDateRange: d
    } = Ol(a, n, N, P), { setHoverDate: O, clearHoverDate: de, getDayClassData: De } = Nr(E, a);
    wt(
      ee,
      () => {
        a.openOnTop && setTimeout(() => {
          n("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const we = lt(Y, "calendar"), We = lt(Y, "action"), Xe = lt(Y, "timePicker"), F = lt(Y, "monthYear"), be = U(() => a.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), pe = U(() => Ml(a.yearRange)), Ne = U(() => _l(a.locale, a.monthNameFormat)), Fe = () => {
      const y = Ce(L);
      y && (X.value = y.getBoundingClientRect().width);
    }, et = U(() => (y) => p(z.value(y), g.value(y))), bt = U(
      () => $.value.multiCalendars > 0 && a.range ? [...Array($.value.multiCalendars).keys()] : [0]
    ), $t = U(
      () => (y) => y === 1
    ), Ft = U(() => a.monthPicker || a.timePicker || a.yearPicker), Dt = U(
      () => ({
        dp__flex_display: $.value.multiCalendars > 0
      })
    ), vt = U(() => ({
      dp__instance_calendar: $.value.multiCalendars > 0
    })), Ut = U(() => ({
      dp__menu_disabled: a.disabled,
      dp__menu_readonly: a.readonly
    })), Ht = U(
      () => (y) => Mt(et, y)
    ), Wt = U(
      () => ({
        dp__menu: !0,
        dp__menu_index: !a.inline,
        dp__relative: a.inline,
        [a.menuClassName]: !!a.menuClassName
      })
    ), Mt = (y, G) => y.value(G).map((Me) => ({
      ...Me,
      days: Me.days.map((ke) => (ke.marker = ce(ke), ke.classData = De(ke), ke))
    })), mn = (y) => {
      y.stopPropagation(), y.preventDefault(), y.stopImmediatePropagation();
    }, yn = () => {
      a.escClose && n("close-picker");
    }, hn = (y, G = !1) => {
      K(y, G), a.spaceConfirm && n("select-date");
    }, o = (y) => {
      var G;
      (G = a.flow) != null && G.length && (V[y] = !0, Object.keys(V).filter((Me) => !V[Me]).length || x());
    }, w = (y, G, Me, ke, ..._t) => {
      if (a.flow[C.value] === y) {
        const q = ke ? G.value[0] : G.value;
        q && q[Me](..._t);
      }
    }, x = () => {
      w("month", i, "toggleMonthPicker", !0, !0), w("year", i, "toggleYearPicker", !0, !0), w("calendar", I, "toggleTimePicker", !1, !1, !0), w("time", I, "toggleTimePicker", !1, !0, !0);
      const y = a.flow[C.value];
      (y === "hours" || y === "minutes" || y === "seconds") && w(y, I, "toggleTimePicker", !1, !0, !0, y);
    }, te = (y) => {
      if (a.arrowNavigation) {
        if (y === "up")
          return ne();
        if (y === "down")
          return ae();
        if (y === "left")
          return Z();
        if (y === "right")
          return M();
      } else
        y === "left" || y === "up" ? R("left", 0, y === "up") : R("right", 0, y === "down");
    }, ge = (y) => {
      r(y.shiftKey), !a.disableMonthYearSelect && y.code === "Tab" && y.target.classList.contains("dp__menu") && u.value.shiftKeyInMenu && (y.preventDefault(), y.stopImmediatePropagation(), n("close-picker"));
    };
    return (y, G) => {
      var Me;
      return h(), ue(ft, {
        appear: "",
        name: (Me = s($).transitions) == null ? void 0 : Me.menuAppear,
        mode: "out-in",
        css: !!y.transitions
      }, {
        default: le(() => {
          var ke, _t;
          return [
            J("div", {
              id: y.uid ? `dp-menu-${y.uid}` : void 0,
              tabindex: "0",
              ref_key: "dpMenuRef",
              ref: B,
              role: "dialog",
              class: he(s(Wt)),
              onMouseleave: G[12] || (G[12] = (...q) => s(de) && s(de)(...q)),
              onClick: mn,
              onKeydown: [
                re(yn, ["esc"]),
                G[13] || (G[13] = re(Ge((q) => te("left"), ["prevent"]), ["left"])),
                G[14] || (G[14] = re(Ge((q) => te("up"), ["prevent"]), ["up"])),
                G[15] || (G[15] = re(Ge((q) => te("down"), ["prevent"]), ["down"])),
                G[16] || (G[16] = re(Ge((q) => te("right"), ["prevent"]), ["right"])),
                ge
              ]
            }, [
              (y.disabled || y.readonly) && y.inline ? (h(), S("div", {
                key: 0,
                class: he(s(Ut))
              }, null, 2)) : D("", !0),
              !y.inline && !y.teleportCenter ? (h(), S("div", {
                key: 1,
                class: he(s(be))
              }, null, 2)) : D("", !0),
              J("div", {
                class: he({
                  dp__menu_content_wrapper: ((ke = y.presetRanges) == null ? void 0 : ke.length) || !!y.$slots["left-sidebar"] || !!y.$slots["right-sidebar"]
                })
              }, [
                y.$slots["left-sidebar"] ? (h(), S("div", Ir, [
                  H(y.$slots, "left-sidebar")
                ])) : D("", !0),
                (_t = y.presetRanges) != null && _t.length ? (h(), S("div", Or, [
                  (h(!0), S(se, null, $e(y.presetRanges, (q, st) => (h(), S("div", {
                    key: st,
                    style: ut(q.style || {}),
                    class: "dp__preset_range",
                    onClick: (oe) => s(d)(q.range, !!q.slot)
                  }, [
                    q.slot ? H(y.$slots, q.slot, {
                      key: 0,
                      presetDateRange: s(d),
                      label: q.label,
                      range: q.range
                    }) : (h(), S(se, { key: 1 }, [
                      ze(Se(q.label), 1)
                    ], 64))
                  ], 12, Br))), 128))
                ])) : D("", !0),
                J("div", {
                  class: "dp__instance_calendar",
                  ref_key: "calendarWrapperRef",
                  ref: L,
                  role: "document"
                }, [
                  J("div", {
                    class: he(s(Dt))
                  }, [
                    (h(!0), S(se, null, $e(s(bt), (q, st) => (h(), S("div", {
                      key: q,
                      class: he(s(vt))
                    }, [
                      !y.disableMonthYearSelect && !y.timePicker ? (h(), ue(Ct(y.monthYearComponent ? y.monthYearComponent : pr), Te({
                        key: 0,
                        ref_for: !0,
                        ref: (oe) => {
                          oe && (i.value[st] = oe);
                        },
                        months: s(Ne),
                        years: s(pe),
                        month: s(z)(q),
                        year: s(g)(q),
                        instance: q,
                        "internal-model-value": e.internalModelValue
                      }, y.$props, {
                        onMount: G[0] || (G[0] = (oe) => o("monthYearInput")),
                        onResetFlow: j,
                        onUpdateMonthYear: (oe) => s(T)(q, oe),
                        onMonthYearSelect: s(f),
                        onOverlayClosed: m
                      }), Ye({ _: 2 }, [
                        $e(s(F), (oe, Gn) => ({
                          name: oe,
                          fn: le((zt) => [
                            H(y.$slots, oe, Ve(Ze(zt)))
                          ])
                        }))
                      ]), 1040, ["months", "years", "month", "year", "instance", "internal-model-value", "onUpdateMonthYear", "onMonthYearSelect"])) : D("", !0),
                      qe(rr, Te({
                        ref_for: !0,
                        ref: (oe) => {
                          oe && (_.value[st] = oe);
                        },
                        "specific-mode": s(Ft),
                        "get-week-num": s(l),
                        instance: q,
                        "mapped-dates": s(Ht)(q),
                        month: s(z)(q),
                        year: s(g)(q)
                      }, y.$props, {
                        "flow-step": C.value,
                        "onUpdate:flow-step": G[1] || (G[1] = (oe) => C.value = oe),
                        onSelectDate: (oe) => s(K)(oe, !s($t)(q)),
                        onHandleSpace: (oe) => hn(oe, !s($t)(q)),
                        onSetHoverDate: G[2] || (G[2] = (oe) => s(O)(oe)),
                        onHandleScroll: (oe) => s(k)(oe, q),
                        onHandleSwipe: (oe) => s(ie)(oe, q),
                        onMount: G[3] || (G[3] = (oe) => o("calendar")),
                        onResetFlow: j
                      }), Ye({ _: 2 }, [
                        $e(s(we), (oe, Gn) => ({
                          name: oe,
                          fn: le((zt) => [
                            H(y.$slots, oe, Ve(Ze({ ...zt })))
                          ])
                        }))
                      ]), 1040, ["specific-mode", "get-week-num", "instance", "mapped-dates", "month", "year", "flow-step", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
                    ], 2))), 128))
                  ], 2),
                  J("div", null, [
                    y.$slots["time-picker"] ? H(y.$slots, "time-picker", Ve(Te({ key: 0 }, { time: s(c), updateTime: s(A) }))) : (h(), S(se, { key: 1 }, [
                      y.enableTimePicker && !y.monthPicker && !y.weekPicker ? (h(), ue(Ct(y.timePickerComponent ? y.timePickerComponent : Pr), Te({
                        key: 0,
                        ref_key: "timePickerRef",
                        ref: I,
                        hours: s(c).hours,
                        minutes: s(c).minutes,
                        seconds: s(c).seconds,
                        "internal-model-value": e.internalModelValue
                      }, y.$props, {
                        onMount: G[4] || (G[4] = (q) => o("timePicker")),
                        "onUpdate:hours": G[5] || (G[5] = (q) => s(A)(q)),
                        "onUpdate:minutes": G[6] || (G[6] = (q) => s(A)(q, !1)),
                        "onUpdate:seconds": G[7] || (G[7] = (q) => s(A)(q, !1, !0)),
                        onResetFlow: j,
                        onOverlayClosed: m
                      }), Ye({ _: 2 }, [
                        $e(s(Xe), (q, st) => ({
                          name: q,
                          fn: le((oe) => [
                            H(y.$slots, q, Ve(Ze(oe)))
                          ])
                        }))
                      ]), 1040, ["hours", "minutes", "seconds", "internal-model-value"])) : D("", !0)
                    ], 64))
                  ])
                ], 512),
                y.$slots["right-sidebar"] ? (h(), S("div", Yr, [
                  H(y.$slots, "right-sidebar")
                ])) : D("", !0),
                y.showNowButton ? (h(), S("div", Vr, [
                  y.$slots["now-button"] ? H(y.$slots, "now-button", {
                    key: 0,
                    selectCurrentDate: s(v)
                  }) : D("", !0),
                  y.$slots["now-button"] ? D("", !0) : (h(), S("button", {
                    key: 1,
                    type: "button",
                    role: "button",
                    class: "dp__now_button",
                    onClick: G[8] || (G[8] = (...q) => s(v) && s(v)(...q))
                  }, Se(y.nowButtonLabel), 1))
                ])) : D("", !0)
              ], 2),
              y.$slots["action-row"] ? H(y.$slots, "action-row", Ve(Te({ key: 2 }, {
                internalModelValue: e.internalModelValue,
                selectDate: () => y.$emit("select-date"),
                closePicker: () => y.$emit("close-picker")
              }))) : (h(), S(se, { key: 3 }, [
                !y.autoApply || y.keepActionRow ? (h(), ue(Ct(y.actionRowComponent ? y.actionRowComponent : Zl), Te({
                  key: 0,
                  "menu-mount": Q.value,
                  "calendar-width": X.value,
                  "internal-model-value": e.internalModelValue
                }, y.$props, {
                  onClosePicker: G[9] || (G[9] = (q) => y.$emit("close-picker")),
                  onSelectDate: G[10] || (G[10] = (q) => y.$emit("select-date")),
                  onInvalidSelect: G[11] || (G[11] = (q) => y.$emit("invalid-select"))
                }), Ye({ _: 2 }, [
                  $e(s(We), (q, st) => ({
                    name: q,
                    fn: le((oe) => [
                      H(y.$slots, q, Ve(Ze({ ...oe })))
                    ])
                  }))
                ]), 1040, ["menu-mount", "calendar-width", "internal-model-value"])) : D("", !0)
              ], 64))
            ], 42, Rr)
          ];
        }),
        _: 3
      }, 8, ["name", "css"]);
    };
  }
}), Lr = typeof window < "u" ? window : void 0, en = () => {
}, Fr = (e) => Xn() ? (qn(e), !0) : !1, Ur = (e, n, a, t) => {
  if (!e)
    return en;
  let r = en;
  const u = wt(
    () => s(e),
    ($) => {
      r(), $ && ($.addEventListener(n, a, t), r = () => {
        $.removeEventListener(n, a, t), r = en;
      });
    },
    { immediate: !0, flush: "post" }
  ), p = () => {
    u(), r();
  };
  return Fr(p), p;
}, Hr = (e, n, a, t = {}) => {
  const { window: r = Lr, event: u = "pointerdown" } = t;
  return r ? Ur(r, u, ($) => {
    const Y = Ce(e), L = Ce(n);
    !Y || !L || Y === $.target || $.composedPath().includes(Y) || $.composedPath().includes(L) || a($);
  }, { passive: !0 }) : void 0;
}, Wr = /* @__PURE__ */ He({
  __name: "VueDatePicker",
  props: {
    ...Qe
  },
  emits: [
    "update:model-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select"
  ],
  setup(e, { expose: n, emit: a }) {
    const t = e, r = on(), u = W(!1), p = tn(t, "modelValue"), $ = tn(t, "timezone"), Y = W(null), L = W(null), V = W(!1), { setMenuFocused: i, setShiftKey: _ } = Wn(), { clearArrowNav: I } = Je(), { validateDate: B, isValidTime: X, defaults: Q } = Ee(t);
    Ue(() => {
      j(t.modelValue), t.inline || (window.addEventListener("scroll", A), window.addEventListener("resize", T)), t.inline && (u.value = !0);
    }), rn(() => {
      t.inline || (window.removeEventListener("scroll", A), window.removeEventListener("resize", T));
    });
    const C = lt(r, "all", t.presetRanges), M = lt(r, "input");
    wt(
      [p, $],
      () => {
        j(p.value);
      },
      { deep: !0 }
    );
    const { openOnTop: Z, menuPosition: ae, setMenuPosition: ne, setInitialPosition: P } = Vl(
      Y,
      L,
      a,
      t
    ), {
      inputValue: m,
      internalModelValue: N,
      parseExternalModelValue: j,
      emitModelValue: ee,
      formatInputValue: E,
      checkBeforeEmit: z
    } = Bl(a, t, V), g = U(
      () => ({
        dp__main: !0,
        dp__theme_dark: t.dark,
        dp__theme_light: !t.dark,
        dp__flex_display: t.inline,
        dp__flex_display_with_input: t.inlineWithInput
      })
    ), c = U(() => t.dark ? "dp__theme_dark" : "dp__theme_light"), A = () => {
      u.value && (t.closeOnScroll ? v() : t.autoPosition ? ne() : window.removeEventListener("scroll", A));
    }, T = () => {
      u.value && ne();
    }, K = () => {
      !t.disabled && !t.readonly && (P(), u.value = !0, kt().then(() => {
        ne(), u.value && a("open");
      }), u.value || ce(), j(t.modelValue));
    }, l = () => {
      m.value = "", ce(), a("update:model-value", null), a("cleared"), v();
    }, f = () => {
      const F = N.value;
      return !F || !Array.isArray(F) && B(F) ? !0 : Array.isArray(F) ? F.length === 2 && B(F[0]) && B(F[1]) ? !0 : B(F[0]) : !1;
    }, k = () => {
      z() && f() ? (ee(), v()) : a("invalid-select", N.value);
    }, R = (F) => {
      ee(), t.closeOnAutoApply && !F && v();
    }, ie = (F = !1) => {
      t.autoApply && X(N.value) && f() && (t.range && Array.isArray(N.value) ? (t.partialRange || N.value.length === 2) && R(F) : R(F));
    }, ce = () => {
      t.textInput || (N.value = null);
    }, v = () => {
      t.inline || (u.value && (u.value = !1, i(!1), _(!1), I(), a("closed"), P(), m.value && j(p.value)), ce(), L.value && L.value.focusInput());
    }, d = (F, be) => {
      if (!F) {
        N.value = null;
        return;
      }
      N.value = F, be && (k(), a("text-submit"));
    }, O = () => {
      t.autoApply && X(N.value) && ee();
    }, de = () => u.value ? v() : K(), De = (F) => {
      N.value = F;
    }, we = U(() => t.textInput && Q.value.textInputOptions.format), We = () => {
      we.value && (V.value = !0, E()), a("focus");
    }, Xe = () => {
      we.value && (V.value = !1, E()), a("blur");
    };
    return Hr(
      Y,
      L,
      t.onClickOutside ? () => t.onClickOutside(f) : v
    ), n({
      closeMenu: v,
      selectDate: k,
      clearValue: l,
      openMenu: K,
      onScroll: A,
      formatInputValue: E,
      updateInternalModelValue: De
    }), (F, be) => (h(), S("div", {
      class: he(s(g))
    }, [
      qe(jl, Te({
        ref_key: "inputRef",
        ref: L,
        "is-menu-open": u.value,
        "input-value": s(m),
        "onUpdate:input-value": be[0] || (be[0] = (pe) => nt(m) ? m.value = pe : null)
      }, F.$props, {
        onClear: l,
        onOpen: K,
        onSetInputDate: d,
        onSetEmptyDate: s(ee),
        onSelectDate: k,
        onToggle: de,
        onClose: v,
        onFocus: We,
        onBlur: Xe
      }), Ye({ _: 2 }, [
        $e(s(M), (pe, Ne) => ({
          name: pe,
          fn: le((Fe) => [
            H(F.$slots, pe, Ve(Ze(Fe)))
          ])
        }))
      ]), 1040, ["is-menu-open", "input-value", "onSetEmptyDate"]),
      u.value ? (h(), ue(Jn, {
        key: 0,
        to: F.teleport,
        disabled: F.inline
      }, [
        u.value ? (h(), ue(Er, Te({
          key: 0,
          ref_key: "dpMenuRef",
          ref: Y,
          class: s(c),
          style: s(ae),
          "open-on-top": s(Z)
        }, F.$props, {
          "internal-model-value": s(N),
          "onUpdate:internal-model-value": be[1] || (be[1] = (pe) => nt(N) ? N.value = pe : null),
          onClosePicker: v,
          onSelectDate: k,
          onAutoApply: ie,
          onTimeUpdate: O,
          onFlowStep: be[2] || (be[2] = (pe) => F.$emit("flow-step", pe)),
          onUpdateMonthYear: be[3] || (be[3] = (pe) => F.$emit("update-month-year", pe)),
          onInvalidSelect: be[4] || (be[4] = (pe) => F.$emit("invalid-select", s(N))),
          onRecalculatePosition: s(ne)
        }), Ye({ _: 2 }, [
          $e(s(C), (pe, Ne) => ({
            name: pe,
            fn: le((Fe) => [
              H(F.$slots, pe, Ve(Ze({ ...Fe })))
            ])
          }))
        ]), 1040, ["class", "style", "open-on-top", "internal-model-value", "onRecalculatePosition"])) : D("", !0)
      ], 8, ["to", "disabled"])) : D("", !0)
    ], 2));
  }
}), xn = /* @__PURE__ */ (() => {
  const e = Wr;
  return e.install = (n) => {
    n.component("Vue3DatePicker", e);
  }, e;
})(), zr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: xn
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(zr).forEach(([e, n]) => {
  e !== "default" && (xn[e] = n);
});
export {
  xn as default
};
